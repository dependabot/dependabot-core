name: Latest images
env:
  UPDATER_IMAGE: "ghcr.io/dependabot/dependabot-updater-"
on: # yamllint disable-line rule:truthy
  push:
    branches:
      - main
    paths-ignore:
      - "common/lib/dependabot.rb"

jobs:
  date-version:
    runs-on: ubuntu-latest
    if: github.repository == 'dependabot/dependabot-core'
    outputs:
      date: ${{ steps.date.outputs.DATE_BASED_VERSION }}
    steps:
      - id: date
        name: Set date based version
        # The v2 tag is the Updater image tag, not related to the core version.
        # This env var has to be set here so all versions are the same.
        run: |
          export DATE_BASED_VERSION=v2.0.$(date +%Y%m%d%H%M%S)
          echo "DATE_BASED_VERSION=$DATE_BASED_VERSION" >> $GITHUB_OUTPUT
  push-updater-image:
    name: Deploy
    runs-on: ubuntu-latest
    needs: date-version
    permissions:
      contents: read
      id-token: write
      packages: write
    strategy:
      fail-fast: false
      matrix:
        suite:
          - { name: bun, ecosystem: bun }
          - { name: bundler, ecosystem: bundler }
          - { name: cargo, ecosystem: cargo }
          - { name: composer, ecosystem: composer }
          - { name: conda, ecosystem: conda }
          - { name: devcontainers, ecosystem: devcontainers }
          - { name: docker_compose, ecosystem: docker-compose }
          - { name: docker, ecosystem: docker }
          - { name: dotnet_sdk, ecosystem: dotnet-sdk }
          - { name: elm, ecosystem: elm }
          - { name: git_submodules, ecosystem: gitsubmodule }
          - { name: github_actions, ecosystem: github-actions }
          - { name: go_modules, ecosystem: gomod }
          - { name: gradle, ecosystem: gradle }
          - { name: helm, ecosystem: helm }
          - { name: hex, ecosystem: mix }
          - { name: julia, ecosystem: julia }
          - { name: maven, ecosystem: maven }
          - { name: npm_and_yarn, ecosystem: npm }
          - { name: nuget, ecosystem: nuget }
          - { name: pub, ecosystem: pub }
          - { name: python, ecosystem: pip }
          - { name: rust_toolchain, ecosystem: rust-toolchain }
          - { name: swift, ecosystem: swift }
          - { name: terraform, ecosystem: terraform }
          - { name: uv, ecosystem: uv }
          - { name: vcpkg, ecosystem: vcpkg }
    env:
      COMMIT_SHA: ${{ github.sha }}
      NAME: ${{ matrix.suite.name }}
      ECOSYSTEM: ${{ matrix.suite.ecosystem }}
    steps:
      - name: Checkout code
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          submodules: recursive

      - uses: sigstore/cosign-installer@d58896d6a1865668819e1d91763c7751a165e159 # v3.9.2

      - name: Build the dependabot-updater-<ecosystem> image
        # despite the script input being $NAME, the resulting image is dependabot-updater-${ECOSYSTEM}
        run: script/build ${NAME}

      - name: Tag the images with the SHA, `latest`, and the date version
        run: |
          docker tag "${UPDATER_IMAGE}${ECOSYSTEM}" "${UPDATER_IMAGE}${ECOSYSTEM}:$COMMIT_SHA"
          docker tag "${UPDATER_IMAGE}${ECOSYSTEM}" "${UPDATER_IMAGE}${ECOSYSTEM}:latest"
          docker tag "${UPDATER_IMAGE}${ECOSYSTEM}" "${UPDATER_IMAGE}${ECOSYSTEM}:${{ needs.date-version.outputs.date }}"

      - uses: docker/login-action@184bdaa0721073962dff0199f1fb9940f07167d1 # v3.5.0
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Push the images to GHCR
        run: |
          docker push --all-tags "${UPDATER_IMAGE}${ECOSYSTEM}"
          # All tags should resolve to the same digest so we only need to look up one of them
          cosign sign --yes $(cosign triangulate --type=digest "${UPDATER_IMAGE}${ECOSYSTEM}:latest")

      - name: Set summary
        run: |
          echo "updater uploaded with tag \`$COMMIT_SHA\`" >> $GITHUB_STEP_SUMMARY
          echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
          echo "${UPDATER_IMAGE}${ECOSYSTEM}:$COMMIT_SHA" >> $GITHUB_STEP_SUMMARY
          echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
