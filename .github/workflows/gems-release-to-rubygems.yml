name: Gems - Release to RubyGems
on: # yamllint disable-line rule:truthy
  release:
    # It's fine to trigger on every release because if we tag a release w/o
    # bumping the Gem version, RubyGems will reject it with an error that the
    # version is already live.
    types: [published]

jobs:
  release-gems:
    name: Release gems to rubygems.org
    runs-on: ubuntu-latest

    permissions:
      contents: read
      id-token: write

    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          # Ensures the checkout retrieves all repository tags and the complete commit history
          # By default, it performs a shallow fetch (depth: 1), which may omit the tag needed for the release
          # Using both options may be seen as redundant, but it is a defect of the actions/checkout action
          # See https://github.com/actions/checkout/issues/1471 for more context
          # In the future, we may be able to remove `fetch-depth` and just use `fetch-tags`
          fetch-depth: 0 # We need the full history to ensure that all the tags are present
          fetch-tags: true # Ensure tags are fetched
      - uses: ruby/setup-ruby@829114fc20da43a41d27359103ec7a63020954d4 # v1.255.0

      - name: Install the RubyGems version specified in the Dockerfile.updater-core file
        run: |
          RUBYGEMS_VERSION=$(grep 'ARG RUBYGEMS_VERSION=' Dockerfile.updater-core | cut -d '=' -f 2)
          gem update --system $RUBYGEMS_VERSION

      - uses: rubygems/configure-rubygems-credentials@bc6dd217f8a4f919d6835fcfefd470ef821f5c44 # v1.0.0

      # We can't use the https://github.com/rubygems/release-gem workflow because it calls `rake release` rather than `rake gems:release`.
      # `rake release` causes problems because it tries to push a git tag, but we've already manually tagged the release as part of the `gems-bump-version` workflow.
      - run: gem exec rake gems:release
