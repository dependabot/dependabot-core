{
    "url": "https://api.github.com/repos/gocardless/business/compare/v1.10.0...rubocop",
    "html_url": "https://github.com/gocardless/business/compare/v1.10.0...rubocop",
    "permalink_url": "https://github.com/gocardless/business/compare/gocardless:d31e445...gocardless:ace90dc",
    "diff_url": "https://github.com/gocardless/business/compare/v1.10.0...rubocop.diff",
    "patch_url": "https://github.com/gocardless/business/compare/v1.10.0...rubocop.patch",
    "base_commit": {
        "sha": "d31e445215b5af70c1604715d97dd953e868380e",
        "commit": {
            "author": {
                "name": "Jay Shah",
                "email": "jay@gocardless.com",
                "date": "2017-09-20T16:47:06Z"
            },
            "committer": {
                "name": "Jay Shah",
                "email": "hey@jay.sh",
                "date": "2017-09-21T08:44:04Z"
            },
            "message": "Make code more readable.",
            "tree": {
                "sha": "6624d2e3f805e27a79fbc2d3be02a5c8e2ea6e35",
                "url": "https://api.github.com/repos/gocardless/business/git/trees/6624d2e3f805e27a79fbc2d3be02a5c8e2ea6e35"
            },
            "url": "https://api.github.com/repos/gocardless/business/git/commits/d31e445215b5af70c1604715d97dd953e868380e",
            "comment_count": 0
        },
        "url": "https://api.github.com/repos/gocardless/business/commits/d31e445215b5af70c1604715d97dd953e868380e",
        "html_url": "https://github.com/gocardless/business/commit/d31e445215b5af70c1604715d97dd953e868380e",
        "comments_url": "https://api.github.com/repos/gocardless/business/commits/d31e445215b5af70c1604715d97dd953e868380e/comments",
        "author": {
            "login": "jaysh",
            "id": 4825223,
            "avatar_url": "https://avatars1.githubusercontent.com/u/4825223?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jaysh",
            "html_url": "https://github.com/jaysh",
            "followers_url": "https://api.github.com/users/jaysh/followers",
            "following_url": "https://api.github.com/users/jaysh/following{/other_user}",
            "gists_url": "https://api.github.com/users/jaysh/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jaysh/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jaysh/subscriptions",
            "organizations_url": "https://api.github.com/users/jaysh/orgs",
            "repos_url": "https://api.github.com/users/jaysh/repos",
            "events_url": "https://api.github.com/users/jaysh/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jaysh/received_events",
            "type": "User",
            "site_admin": false
        },
        "committer": {
            "login": "jaysh",
            "id": 4825223,
            "avatar_url": "https://avatars1.githubusercontent.com/u/4825223?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jaysh",
            "html_url": "https://github.com/jaysh",
            "followers_url": "https://api.github.com/users/jaysh/followers",
            "following_url": "https://api.github.com/users/jaysh/following{/other_user}",
            "gists_url": "https://api.github.com/users/jaysh/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jaysh/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jaysh/subscriptions",
            "organizations_url": "https://api.github.com/users/jaysh/orgs",
            "repos_url": "https://api.github.com/users/jaysh/repos",
            "events_url": "https://api.github.com/users/jaysh/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jaysh/received_events",
            "type": "User",
            "site_admin": false
        },
        "parents": [
            {
                "sha": "fcc5d35d3a5ff9a4ba16178a5442c3c105ffacdb",
                "url": "https://api.github.com/repos/gocardless/business/commits/fcc5d35d3a5ff9a4ba16178a5442c3c105ffacdb",
                "html_url": "https://github.com/gocardless/business/commit/fcc5d35d3a5ff9a4ba16178a5442c3c105ffacdb"
            }
        ]
    },
    "merge_base_commit": {
        "sha": "20984b51291e25782bb55ef72008bed592c4c2d7",
        "commit": {
            "author": {
                "name": "Matt Thomson",
                "email": "mattjohnthomson@gmail.com",
                "date": "2017-02-13T17:45:42Z"
            },
            "committer": {
                "name": "GitHub",
                "email": "noreply@github.com",
                "date": "2017-02-13T17:45:42Z"
            },
            "message": "Merge pull request #18 from gocardless/bump-version-to-1.8.0\n\nBump version to 1.8.0",
            "tree": {
                "sha": "8b2c15faf83aba6803c457ff420740964b701647",
                "url": "https://api.github.com/repos/gocardless/business/git/trees/8b2c15faf83aba6803c457ff420740964b701647"
            },
            "url": "https://api.github.com/repos/gocardless/business/git/commits/20984b51291e25782bb55ef72008bed592c4c2d7",
            "comment_count": 0
        },
        "url": "https://api.github.com/repos/gocardless/business/commits/20984b51291e25782bb55ef72008bed592c4c2d7",
        "html_url": "https://github.com/gocardless/business/commit/20984b51291e25782bb55ef72008bed592c4c2d7",
        "comments_url": "https://api.github.com/repos/gocardless/business/commits/20984b51291e25782bb55ef72008bed592c4c2d7/comments",
        "author": {
            "login": "matt-thomson",
            "id": 771863,
            "avatar_url": "https://avatars3.githubusercontent.com/u/771863?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/matt-thomson",
            "html_url": "https://github.com/matt-thomson",
            "followers_url": "https://api.github.com/users/matt-thomson/followers",
            "following_url": "https://api.github.com/users/matt-thomson/following{/other_user}",
            "gists_url": "https://api.github.com/users/matt-thomson/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/matt-thomson/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/matt-thomson/subscriptions",
            "organizations_url": "https://api.github.com/users/matt-thomson/orgs",
            "repos_url": "https://api.github.com/users/matt-thomson/repos",
            "events_url": "https://api.github.com/users/matt-thomson/events{/privacy}",
            "received_events_url": "https://api.github.com/users/matt-thomson/received_events",
            "type": "User",
            "site_admin": false
        },
        "committer": {
            "login": "web-flow",
            "id": 19864447,
            "avatar_url": "https://avatars3.githubusercontent.com/u/19864447?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/web-flow",
            "html_url": "https://github.com/web-flow",
            "followers_url": "https://api.github.com/users/web-flow/followers",
            "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
            "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
            "organizations_url": "https://api.github.com/users/web-flow/orgs",
            "repos_url": "https://api.github.com/users/web-flow/repos",
            "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
            "received_events_url": "https://api.github.com/users/web-flow/received_events",
            "type": "User",
            "site_admin": false
        },
        "parents": [
            {
                "sha": "39154565de7bac59f915f26fce8f6124edf37ac2",
                "url": "https://api.github.com/repos/gocardless/business/commits/39154565de7bac59f915f26fce8f6124edf37ac2",
                "html_url": "https://github.com/gocardless/business/commit/39154565de7bac59f915f26fce8f6124edf37ac2"
            },
            {
                "sha": "beb4c78337428270f6fd0c1f34ef5cddc3870bd5",
                "url": "https://api.github.com/repos/gocardless/business/commits/beb4c78337428270f6fd0c1f34ef5cddc3870bd5",
                "html_url": "https://github.com/gocardless/business/commit/beb4c78337428270f6fd0c1f34ef5cddc3870bd5"
            }
        ]
    },
    "status": "diverged",
    "ahead_by": 3,
    "behind_by": 10,
    "total_commits": 3,
    "commits": [
        {
            "sha": "8269023ded834032be24695843462544b12b86c0",
            "commit": {
                "author": {
                    "name": "Matt Thomson",
                    "email": "mattthomson@gocardless.com",
                    "date": "2017-06-05T17:51:02Z"
                },
                "committer": {
                    "name": "Matt Thomson",
                    "email": "mattthomson@gocardless.com",
                    "date": "2017-06-05T17:57:10Z"
                },
                "message": "Add Rubocop, autocorrect offences",
                "tree": {
                    "sha": "4bfbaced394069733d8954d2aac9634e3e3aac98",
                    "url": "https://api.github.com/repos/gocardless/business/git/trees/4bfbaced394069733d8954d2aac9634e3e3aac98"
                },
                "url": "https://api.github.com/repos/gocardless/business/git/commits/8269023ded834032be24695843462544b12b86c0",
                "comment_count": 0
            },
            "url": "https://api.github.com/repos/gocardless/business/commits/8269023ded834032be24695843462544b12b86c0",
            "html_url": "https://github.com/gocardless/business/commit/8269023ded834032be24695843462544b12b86c0",
            "comments_url": "https://api.github.com/repos/gocardless/business/commits/8269023ded834032be24695843462544b12b86c0/comments",
            "author": {
                "login": "matt-thomson",
                "id": 771863,
                "avatar_url": "https://avatars3.githubusercontent.com/u/771863?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/matt-thomson",
                "html_url": "https://github.com/matt-thomson",
                "followers_url": "https://api.github.com/users/matt-thomson/followers",
                "following_url": "https://api.github.com/users/matt-thomson/following{/other_user}",
                "gists_url": "https://api.github.com/users/matt-thomson/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/matt-thomson/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/matt-thomson/subscriptions",
                "organizations_url": "https://api.github.com/users/matt-thomson/orgs",
                "repos_url": "https://api.github.com/users/matt-thomson/repos",
                "events_url": "https://api.github.com/users/matt-thomson/events{/privacy}",
                "received_events_url": "https://api.github.com/users/matt-thomson/received_events",
                "type": "User",
                "site_admin": false
            },
            "committer": {
                "login": "matt-thomson",
                "id": 771863,
                "avatar_url": "https://avatars3.githubusercontent.com/u/771863?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/matt-thomson",
                "html_url": "https://github.com/matt-thomson",
                "followers_url": "https://api.github.com/users/matt-thomson/followers",
                "following_url": "https://api.github.com/users/matt-thomson/following{/other_user}",
                "gists_url": "https://api.github.com/users/matt-thomson/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/matt-thomson/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/matt-thomson/subscriptions",
                "organizations_url": "https://api.github.com/users/matt-thomson/orgs",
                "repos_url": "https://api.github.com/users/matt-thomson/repos",
                "events_url": "https://api.github.com/users/matt-thomson/events{/privacy}",
                "received_events_url": "https://api.github.com/users/matt-thomson/received_events",
                "type": "User",
                "site_admin": false
            },
            "parents": [
                {
                    "sha": "20984b51291e25782bb55ef72008bed592c4c2d7",
                    "url": "https://api.github.com/repos/gocardless/business/commits/20984b51291e25782bb55ef72008bed592c4c2d7",
                    "html_url": "https://github.com/gocardless/business/commit/20984b51291e25782bb55ef72008bed592c4c2d7"
                }
            ]
        },
        {
            "sha": "59532c6733053073a8ee905224874584a4f1d5a9",
            "commit": {
                "author": {
                    "name": "Matt Thomson",
                    "email": "mattthomson@gocardless.com",
                    "date": "2017-06-05T17:53:49Z"
                },
                "committer": {
                    "name": "Matt Thomson",
                    "email": "mattthomson@gocardless.com",
                    "date": "2017-06-05T17:57:10Z"
                },
                "message": "Fix Lint/Loop cop",
                "tree": {
                    "sha": "6dd5c0c2e3e497819766294529b23d5f83a444f8",
                    "url": "https://api.github.com/repos/gocardless/business/git/trees/6dd5c0c2e3e497819766294529b23d5f83a444f8"
                },
                "url": "https://api.github.com/repos/gocardless/business/git/commits/59532c6733053073a8ee905224874584a4f1d5a9",
                "comment_count": 0
            },
            "url": "https://api.github.com/repos/gocardless/business/commits/59532c6733053073a8ee905224874584a4f1d5a9",
            "html_url": "https://github.com/gocardless/business/commit/59532c6733053073a8ee905224874584a4f1d5a9",
            "comments_url": "https://api.github.com/repos/gocardless/business/commits/59532c6733053073a8ee905224874584a4f1d5a9/comments",
            "author": {
                "login": "matt-thomson",
                "id": 771863,
                "avatar_url": "https://avatars3.githubusercontent.com/u/771863?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/matt-thomson",
                "html_url": "https://github.com/matt-thomson",
                "followers_url": "https://api.github.com/users/matt-thomson/followers",
                "following_url": "https://api.github.com/users/matt-thomson/following{/other_user}",
                "gists_url": "https://api.github.com/users/matt-thomson/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/matt-thomson/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/matt-thomson/subscriptions",
                "organizations_url": "https://api.github.com/users/matt-thomson/orgs",
                "repos_url": "https://api.github.com/users/matt-thomson/repos",
                "events_url": "https://api.github.com/users/matt-thomson/events{/privacy}",
                "received_events_url": "https://api.github.com/users/matt-thomson/received_events",
                "type": "User",
                "site_admin": false
            },
            "committer": {
                "login": "matt-thomson",
                "id": 771863,
                "avatar_url": "https://avatars3.githubusercontent.com/u/771863?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/matt-thomson",
                "html_url": "https://github.com/matt-thomson",
                "followers_url": "https://api.github.com/users/matt-thomson/followers",
                "following_url": "https://api.github.com/users/matt-thomson/following{/other_user}",
                "gists_url": "https://api.github.com/users/matt-thomson/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/matt-thomson/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/matt-thomson/subscriptions",
                "organizations_url": "https://api.github.com/users/matt-thomson/orgs",
                "repos_url": "https://api.github.com/users/matt-thomson/repos",
                "events_url": "https://api.github.com/users/matt-thomson/events{/privacy}",
                "received_events_url": "https://api.github.com/users/matt-thomson/received_events",
                "type": "User",
                "site_admin": false
            },
            "parents": [
                {
                    "sha": "8269023ded834032be24695843462544b12b86c0",
                    "url": "https://api.github.com/repos/gocardless/business/commits/8269023ded834032be24695843462544b12b86c0",
                    "html_url": "https://github.com/gocardless/business/commit/8269023ded834032be24695843462544b12b86c0"
                }
            ]
        },
        {
            "sha": "ace90dc4d34136a5d9570e54288c505711fb93ce",
            "commit": {
                "author": {
                    "name": "Matt Thomson",
                    "email": "mattthomson@gocardless.com",
                    "date": "2017-06-05T17:55:55Z"
                },
                "committer": {
                    "name": "Matt Thomson",
                    "email": "mattthomson@gocardless.com",
                    "date": "2017-06-05T17:57:10Z"
                },
                "message": "Fix Style/AccessorMethodName cop",
                "tree": {
                    "sha": "f1a9e131b916b9d71c088be3c835a8ce6862ba61",
                    "url": "https://api.github.com/repos/gocardless/business/git/trees/f1a9e131b916b9d71c088be3c835a8ce6862ba61"
                },
                "url": "https://api.github.com/repos/gocardless/business/git/commits/ace90dc4d34136a5d9570e54288c505711fb93ce",
                "comment_count": 0
            },
            "url": "https://api.github.com/repos/gocardless/business/commits/ace90dc4d34136a5d9570e54288c505711fb93ce",
            "html_url": "https://github.com/gocardless/business/commit/ace90dc4d34136a5d9570e54288c505711fb93ce",
            "comments_url": "https://api.github.com/repos/gocardless/business/commits/ace90dc4d34136a5d9570e54288c505711fb93ce/comments",
            "author": {
                "login": "matt-thomson",
                "id": 771863,
                "avatar_url": "https://avatars3.githubusercontent.com/u/771863?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/matt-thomson",
                "html_url": "https://github.com/matt-thomson",
                "followers_url": "https://api.github.com/users/matt-thomson/followers",
                "following_url": "https://api.github.com/users/matt-thomson/following{/other_user}",
                "gists_url": "https://api.github.com/users/matt-thomson/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/matt-thomson/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/matt-thomson/subscriptions",
                "organizations_url": "https://api.github.com/users/matt-thomson/orgs",
                "repos_url": "https://api.github.com/users/matt-thomson/repos",
                "events_url": "https://api.github.com/users/matt-thomson/events{/privacy}",
                "received_events_url": "https://api.github.com/users/matt-thomson/received_events",
                "type": "User",
                "site_admin": false
            },
            "committer": {
                "login": "matt-thomson",
                "id": 771863,
                "avatar_url": "https://avatars3.githubusercontent.com/u/771863?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/matt-thomson",
                "html_url": "https://github.com/matt-thomson",
                "followers_url": "https://api.github.com/users/matt-thomson/followers",
                "following_url": "https://api.github.com/users/matt-thomson/following{/other_user}",
                "gists_url": "https://api.github.com/users/matt-thomson/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/matt-thomson/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/matt-thomson/subscriptions",
                "organizations_url": "https://api.github.com/users/matt-thomson/orgs",
                "repos_url": "https://api.github.com/users/matt-thomson/repos",
                "events_url": "https://api.github.com/users/matt-thomson/events{/privacy}",
                "received_events_url": "https://api.github.com/users/matt-thomson/received_events",
                "type": "User",
                "site_admin": false
            },
            "parents": [
                {
                    "sha": "59532c6733053073a8ee905224874584a4f1d5a9",
                    "url": "https://api.github.com/repos/gocardless/business/commits/59532c6733053073a8ee905224874584a4f1d5a9",
                    "html_url": "https://github.com/gocardless/business/commit/59532c6733053073a8ee905224874584a4f1d5a9"
                }
            ]
        }
    ],
    "files": [
        {
            "sha": "1c1db850defccb268f960ff4a47f0e3afd898dc5",
            "filename": ".rubocop.yml",
            "status": "added",
            "additions": 122,
            "deletions": 0,
            "changes": 122,
            "blob_url": "https://github.com/gocardless/business/blob/ace90dc4d34136a5d9570e54288c505711fb93ce/.rubocop.yml",
            "raw_url": "https://github.com/gocardless/business/raw/ace90dc4d34136a5d9570e54288c505711fb93ce/.rubocop.yml",
            "contents_url": "https://api.github.com/repos/gocardless/business/contents/.rubocop.yml?ref=ace90dc4d34136a5d9570e54288c505711fb93ce",
            "patch": "@@ -0,0 +1,122 @@\n+AllCops:\n+  TargetRubyVersion: 2.1\n+  DisplayCopNames: true\n+\n+Lint/UnneededDisable:\n+  Severity: error\n+\n+Metrics/AbcSize:\n+  Max: 59\n+\n+Metrics/CyclomaticComplexity:\n+  Max: 10\n+\n+Metrics/PerceivedComplexity:\n+  Max: 9\n+\n+Metrics/ClassLength:\n+  Enabled: false\n+\n+Layout/LineLength:\n+  Max: 90\n+  Exclude:\n+    - Gemfile\n+\n+Metrics/BlockLength:\n+  Exclude:\n+    - business.gemspec\n+    - spec/*\n+    - spec/**/*\n+\n+# Avoid methods longer than 30 lines of code\n+Metrics/MethodLength:\n+  CountComments: false  # count full line comments?\n+  Max: 87\n+\n+Metrics/ModuleLength:\n+  Enabled: false\n+\n+Metrics/ParameterLists:\n+  CountKeywordArgs: false\n+\n+# Allow non-ASCII characters (e.g. £) in comments\n+Style/AsciiComments:\n+  Enabled: false\n+\n+Style/Alias:\n+  Enabled: true\n+  EnforcedStyle: prefer_alias_method\n+\n+# Use trailing rather than leading dots on multi-line call chains\n+Style/DotPosition:\n+  EnforcedStyle: trailing\n+\n+# Magic encoding comment only relevant on ruby-1.9 or non-utf8\n+Style/Encoding:\n+  Enabled: never\n+\n+Style/Documentation:\n+  Enabled: false\n+\n+Style/FormatString:\n+  EnforcedStyle: sprintf\n+\n+Style/FrozenStringLiteralComment:\n+  Enabled: always\n+\n+Style/TrailingCommaInLiteral:\n+  EnforcedStyleForMultiline: comma\n+\n+Style/TrailingCommaInArguments:\n+  EnforcedStyleForMultiline: comma\n+\n+# As of 0.43.0 this cop complains in situations where a guard clause would be\n+# unhelpful or erroneous.\n+# The auto-correct is also buggy.\n+Style/GuardClause:\n+  Enabled: false\n+\n+Style/IndentArray:\n+  EnforcedStyle: consistent\n+\n+Style/IndentHash:\n+  EnforcedStyle: consistent\n+\n+Style/Lambda:\n+  EnforcedStyle: literal\n+\n+Style/MultilineMethodCallIndentation:\n+  EnforcedStyle: indented\n+\n+Style/MultilineOperationIndentation:\n+  EnforcedStyle: indented\n+\n+Style/NumericPredicate:\n+  Exclude:\n+    - 'spec/**/*'\n+\n+Style/NumericLiterals:\n+  MinDigits: 11\n+\n+# As of 0.43.0 this cop has many false positives\n+# https://github.com/bbatsov/rubocop/pull/3517 may fix a lot of these\n+Style/SafeNavigation:\n+  Enabled: false\n+\n+Style/SignalException:\n+  EnforcedStyle: 'only_raise'\n+\n+# Wants you to use the same argument names for every reduce. This seems kinda\n+# naff compared to naming them semantically\n+Style/SingleLineBlockParams:\n+  Enabled: false\n+\n+Style/StringLiterals:\n+  EnforcedStyle: 'double_quotes'\n+\n+Style/VariableNumber:\n+  Enabled: false\n+\n+Style/FileName:\n+  Exclude:\n+    - 'Gemfile'"
        },
        {
            "sha": "b4e2a20bb6069d33479542fc863e7e36810e0f01",
            "filename": "Gemfile",
            "status": "modified",
            "additions": 1,
            "deletions": 1,
            "changes": 2,
            "blob_url": "https://github.com/gocardless/business/blob/ace90dc4d34136a5d9570e54288c505711fb93ce/Gemfile",
            "raw_url": "https://github.com/gocardless/business/raw/ace90dc4d34136a5d9570e54288c505711fb93ce/Gemfile",
            "contents_url": "https://api.github.com/repos/gocardless/business/contents/Gemfile?ref=ace90dc4d34136a5d9570e54288c505711fb93ce",
            "patch": "@@ -1,3 +1,3 @@\n-source 'https://rubygems.org'\n+source \"https://rubygems.org\"\n \n gemspec"
        },
        {
            "sha": "a865ee8ed704d8f89d45fbdde6d71f8ba16818d9",
            "filename": "business.gemspec",
            "status": "modified",
            "additions": 6,
            "deletions": 6,
            "changes": 12,
            "blob_url": "https://github.com/gocardless/business/blob/ace90dc4d34136a5d9570e54288c505711fb93ce/business.gemspec",
            "raw_url": "https://github.com/gocardless/business/raw/ace90dc4d34136a5d9570e54288c505711fb93ce/business.gemspec",
            "contents_url": "https://api.github.com/repos/gocardless/business/contents/business.gemspec?ref=ace90dc4d34136a5d9570e54288c505711fb93ce",
            "patch": "@@ -1,23 +1,23 @@\n-# coding: utf-8\n-lib = File.expand_path('../lib', __FILE__)\n+lib = File.expand_path(\"../lib\", __FILE__)\n $LOAD_PATH.unshift(lib) unless $LOAD_PATH.include?(lib)\n-require 'business/version'\n+require \"business/version\"\n \n Gem::Specification.new do |spec|\n   spec.name          = \"business\"\n   spec.version       = Business::VERSION\n   spec.authors       = [\"Harry Marr\"]\n   spec.email         = [\"developers@gocardless.com\"]\n-  spec.summary       = %q{Date calculations based on business calendars}\n-  spec.description   = %q{Date calculations based on business calendars}\n+  spec.summary       = \"Date calculations based on business calendars\"\n+  spec.description   = \"Date calculations based on business calendars\"\n   spec.homepage      = \"https://github.com/gocardless/business\"\n   spec.licenses      = [\"MIT\"]\n \n-  spec.files         = `git ls-files`.split($/)\n+  spec.files         = `git ls-files`.split($INPUT_RECORD_SEPARATOR)\n   spec.executables   = spec.files.grep(%r{^bin/}) { |f| File.basename(f) }\n   spec.test_files    = spec.files.grep(%r{^(test|spec|features)/})\n   spec.require_paths = [\"lib\"]\n \n   spec.add_development_dependency \"bundler\", \"~> 1.3\"\n   spec.add_development_dependency \"rspec\", \"~> 3.1\"\n+  spec.add_development_dependency \"rubocop\", \"~> 0.49.1\"\n end"
        },
        {
            "sha": "9b9f15d9ef5ad322cbb2d36a7b24d744fa4da2c2",
            "filename": "lib/business.rb",
            "status": "modified",
            "additions": 1,
            "deletions": 1,
            "changes": 2,
            "blob_url": "https://github.com/gocardless/business/blob/ace90dc4d34136a5d9570e54288c505711fb93ce/lib/business.rb",
            "raw_url": "https://github.com/gocardless/business/raw/ace90dc4d34136a5d9570e54288c505711fb93ce/lib/business.rb",
            "contents_url": "https://api.github.com/repos/gocardless/business/contents/lib/business.rb?ref=ace90dc4d34136a5d9570e54288c505711fb93ce",
            "patch": "@@ -1 +1 @@\n-require 'business/calendar'\n+require \"business/calendar\""
        },
        {
            "sha": "9c1286a151f1762c071ebd35c8099c6bdceec7b1",
            "filename": "lib/business/calendar.rb",
            "status": "modified",
            "additions": 25,
            "deletions": 29,
            "changes": 54,
            "blob_url": "https://github.com/gocardless/business/blob/ace90dc4d34136a5d9570e54288c505711fb93ce/lib/business/calendar.rb",
            "raw_url": "https://github.com/gocardless/business/raw/ace90dc4d34136a5d9570e54288c505711fb93ce/lib/business/calendar.rb",
            "contents_url": "https://api.github.com/repos/gocardless/business/contents/lib/business/calendar.rb?ref=ace90dc4d34136a5d9570e54288c505711fb93ce",
            "patch": "@@ -1,4 +1,4 @@\n-require 'yaml'\n+require \"yaml\"\n \n module Business\n   class Calendar\n@@ -8,45 +8,43 @@ class << self\n \n     def self.calendar_directories\n       directories = @additional_load_paths || []\n-      directories + [File.join(File.dirname(__FILE__), 'data')]\n+      directories + [File.join(File.dirname(__FILE__), \"data\")]\n     end\n     private_class_method :calendar_directories\n \n     def self.load(calendar)\n       directory = calendar_directories.find do |dir|\n-        File.exists?(File.join(dir, \"#{calendar}.yml\"))\n+        File.exist?(File.join(dir, \"#{calendar}.yml\"))\n       end\n       raise \"No such calendar '#{calendar}'\" unless directory\n \n       yaml = YAML.load_file(File.join(directory, \"#{calendar}.yml\"))\n-      self.new(holidays: yaml['holidays'], working_days: yaml['working_days'])\n+      new(holidays: yaml[\"holidays\"], working_days: yaml[\"working_days\"])\n     end\n \n     @lock = Mutex.new\n     def self.load_cached(calendar)\n       @lock.synchronize do\n-        @cache ||= { }\n-        unless @cache.include?(calendar)\n-          @cache[calendar] = self.load(calendar)\n-        end\n+        @cache ||= {}\n+        @cache[calendar] = load(calendar) unless @cache.include?(calendar)\n         @cache[calendar]\n       end\n     end\n \n-    DAY_NAMES = %( mon tue wed thu fri sat sun )\n+    DAY_NAMES = %( mon tue wed thu fri sat sun ).freeze\n \n     attr_reader :working_days, :holidays\n \n     def initialize(config)\n-      set_working_days(config[:working_days])\n-      set_holidays(config[:holidays])\n+      self.working_days = config[:working_days]\n+      self.holidays = config[:holidays]\n     end\n \n     # Return true if the date given is a business day (typically that means a\n     # non-weekend day) and not a holiday.\n     def business_day?(date)\n       date = date.to_date\n-      return false unless working_days.include?(date.strftime('%a').downcase)\n+      return false unless working_days.include?(date.strftime(\"%a\").downcase)\n       return false if holidays.include?(date)\n       true\n     end\n@@ -70,18 +68,20 @@ def roll_backward(date)\n     # Roll forward to the next business day regardless of whether the given\n     # date is a business day or not.\n     def next_business_day(date)\n-      begin\n+      loop do\n         date += day_interval_for(date)\n-      end until business_day?(date)\n+        break if business_day?(date)\n+      end\n       date\n     end\n \n     # Roll backward to the previous business day regardless of whether the given\n     # date is a business day or not.\n     def previous_business_day(date)\n-      begin\n+      loop do\n         date -= day_interval_for(date)\n-      end until business_day?(date)\n+        break if business_day?(date)\n+      end\n       date\n     end\n \n@@ -93,9 +93,7 @@ def previous_business_day(date)\n     def add_business_days(date, delta)\n       date = roll_forward(date)\n       delta.times do\n-        begin\n-          date += day_interval_for(date)\n-        end until business_day?(date)\n+        date = next_business_day(date)\n       end\n       date\n     end\n@@ -108,9 +106,7 @@ def add_business_days(date, delta)\n     def subtract_business_days(date, delta)\n       date = roll_backward(date)\n       delta.times do\n-        begin\n-          date -= day_interval_for(date)\n-        end until business_day?(date)\n+        date = previous_business_day(date)\n       end\n       date\n     end\n@@ -119,7 +115,8 @@ def subtract_business_days(date, delta)\n     # This method counts from start of date1 to start of date2. So,\n     # business_days_between(mon, weds) = 2 (assuming no holidays)\n     def business_days_between(date1, date2)\n-      date1, date2 = date1.to_date, date2.to_date\n+      date1 = date1.to_date\n+      date2 = date2.to_date\n \n       # To optimise this method we split the range into full weeks and a\n       # remaining period.\n@@ -141,11 +138,11 @@ def business_days_between(date1, date2)\n       num_biz_days -= holidays.count do |holiday|\n         in_range = full_weeks_range.cover?(holiday)\n         # Only pick a holiday if its on a working day (e.g., not a weekend)\n-        on_biz_day = working_days.include?(holiday.strftime('%a').downcase)\n+        on_biz_day = working_days.include?(holiday.strftime(\"%a\").downcase)\n         in_range && on_biz_day\n       end\n \n-      remaining_range = (date2-remaining_days...date2)\n+      remaining_range = (date2 - remaining_days...date2)\n       # Loop through each day in remaining_range and count if a business day\n       num_biz_days + remaining_range.count { |a| business_day?(a) }\n     end\n@@ -155,7 +152,7 @@ def day_interval_for(date)\n     end\n \n     # Internal method for assigning working days from a calendar config.\n-    def set_working_days(working_days)\n+    def working_days=(working_days)\n       @working_days = (working_days || default_working_days).map do |day|\n         day.downcase.strip[0..2].tap do |normalised_day|\n           raise \"Invalid day #{day}\" unless DAY_NAMES.include?(normalised_day)\n@@ -164,14 +161,13 @@ def set_working_days(working_days)\n     end\n \n     # Internal method for assigning holidays from a calendar config.\n-    def set_holidays(holidays)\n+    def holidays=(holidays)\n       @holidays = (holidays || []).map { |holiday| Date.parse(holiday) }\n     end\n \n     # If no working days are provided in the calendar config, these are used.\n     def default_working_days\n-      %w( mon tue wed thu fri )\n+      %w[mon tue wed thu fri]\n     end\n   end\n end\n-"
        },
        {
            "sha": "a9660d509b677e0f9b22b93a130e725ea58bcf33",
            "filename": "lib/business/version.rb",
            "status": "modified",
            "additions": 1,
            "deletions": 1,
            "changes": 2,
            "blob_url": "https://github.com/gocardless/business/blob/ace90dc4d34136a5d9570e54288c505711fb93ce/lib/business/version.rb",
            "raw_url": "https://github.com/gocardless/business/raw/ace90dc4d34136a5d9570e54288c505711fb93ce/lib/business/version.rb",
            "contents_url": "https://api.github.com/repos/gocardless/business/contents/lib/business/version.rb?ref=ace90dc4d34136a5d9570e54288c505711fb93ce",
            "patch": "@@ -1,3 +1,3 @@\n module Business\n-  VERSION = \"1.8.0\"\n+  VERSION = \"1.8.0\".freeze\n end"
        },
        {
            "sha": "628f77d81a1fbf6b7061b6570dfa0ed02f7988c2",
            "filename": "spec/calendar_spec.rb",
            "status": "modified",
            "additions": 9,
            "deletions": 13,
            "changes": 22,
            "blob_url": "https://github.com/gocardless/business/blob/ace90dc4d34136a5d9570e54288c505711fb93ce/spec/calendar_spec.rb",
            "raw_url": "https://github.com/gocardless/business/raw/ace90dc4d34136a5d9570e54288c505711fb93ce/spec/calendar_spec.rb",
            "contents_url": "https://api.github.com/repos/gocardless/business/contents/spec/calendar_spec.rb?ref=ace90dc4d34136a5d9570e54288c505711fb93ce",
            "patch": "@@ -24,7 +24,7 @@\n     context \"when given a calendar from a custom directory\" do\n       before do\n         Business::Calendar.additional_load_paths = [\n-          File.join(File.dirname(__FILE__), 'fixtures', 'calendars')\n+          File.join(File.dirname(__FILE__), \"fixtures\", \"calendars\"),\n         ]\n       end\n       after { Business::Calendar.additional_load_paths = nil }\n@@ -55,29 +55,29 @@\n     end\n   end\n \n-  describe \"#set_working_days\" do\n+  describe \"#working_days=\" do\n     let(:calendar) { Business::Calendar.new({}) }\n     let(:working_days) { [] }\n-    subject { calendar.set_working_days(working_days) }\n+    subject { calendar.working_days = working_days }\n \n     context \"when given valid working days\" do\n-      let(:working_days) { %w( mon fri ) }\n+      let(:working_days) { %w[mon fri] }\n       before { subject }\n \n       it \"assigns them\" do\n         expect(calendar.working_days).to eq(working_days)\n       end\n \n       context \"that are unnormalised\" do\n-        let(:working_days) { %w( Monday Friday ) }\n+        let(:working_days) { %w[Monday Friday] }\n         it \"normalises them\" do\n-          expect(calendar.working_days).to eq(%w( mon fri ))\n+          expect(calendar.working_days).to eq(%w[mon fri])\n         end\n       end\n     end\n \n     context \"when given an invalid business day\" do\n-      let(:working_days) { %w( Notaday ) }\n+      let(:working_days) { %w[Notaday] }\n       specify { expect { subject }.to raise_error(/Invalid day/) }\n     end\n \n@@ -89,10 +89,10 @@\n     end\n   end\n \n-  describe \"#set_holidays\" do\n+  describe \"#holidays=\" do\n     let(:calendar) { Business::Calendar.new({}) }\n     let(:holidays) { [] }\n-    before { calendar.set_holidays(holidays) }\n+    before { calendar.holidays = holidays }\n     subject { calendar.holidays }\n \n     context \"when given valid business days\" do\n@@ -300,7 +300,6 @@\n       let(:calendar) { Business::Calendar.new(holidays: holidays) }\n       subject { calendar.business_days_between(date_1, date_2) }\n \n-\n       context \"starting on a business day\" do\n         let(:date_1) { date_class.parse(\"Mon 2/6/2014\") }\n \n@@ -357,7 +356,6 @@\n         let(:date_1) { date_class.parse(\"Sat 7/6/2014\") }\n \n         context \"ending on a business day\" do\n-\n           context \"including only business days & weekend days\" do\n             let(:date_2) { date_class.parse(\"Mon 9/6/2014\") }\n             it { is_expected.to eq(0) }\n@@ -393,7 +391,6 @@\n         let(:date_1) { date_class.parse(\"Thu 12/6/2014\") }\n \n         context \"ending on a business day\" do\n-\n           context \"including only business days & holidays\" do\n             let(:date_2) { date_class.parse(\"Fri 13/6/2014\") }\n             it { is_expected.to eq(0) }\n@@ -462,4 +459,3 @@\n     it_behaves_like \"common\"\n   end\n end\n-"
        }
    ]
}
