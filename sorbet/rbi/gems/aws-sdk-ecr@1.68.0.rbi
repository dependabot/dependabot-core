# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for types exported from the `aws-sdk-ecr` gem.
# Please instead update this file by running `bin/tapioca gem aws-sdk-ecr`.

# This module provides support for Amazon EC2 Container Registry. This module is available in the
# `aws-sdk-ecr` gem.
#
# # Client
#
# The {Client} class provides one method for each API operation. Operation
# methods each accept a hash of request parameters and return a response
# structure.
#
#     ecr = Aws::ECR::Client.new
#     resp = ecr.batch_check_layer_availability(params)
#
# See {Client} for more information.
#
# # Errors
#
# Errors returned from Amazon EC2 Container Registry are defined in the
# {Errors} module and all extend {Errors::ServiceError}.
#
#     begin
#       # do stuff
#     rescue Aws::ECR::Errors::ServiceError
#       # rescues all Amazon EC2 Container Registry API errors
#     end
#
# See {Errors} for more information.
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/types.rb#10
module Aws::ECR; end

# An API client for ECR.  To construct a client, you need to configure a `:region` and `:credentials`.
#
#     client = Aws::ECR::Client.new(
#       region: region_name,
#       credentials: credentials,
#       # ...
#     )
#
# For details on configuring region and credentials see
# the [developer guide](/sdk-for-ruby/v3/developer-guide/setup-config.html).
#
# See {#initialize} for a full list of supported configuration options.
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/client.rb#52
class Aws::ECR::Client < ::Seahorse::Client::Base
  include ::Aws::ClientStubs

  # @overload initialize
  # @return [Client] a new instance of Client
  #
  # source://aws-sdk-ecr//lib/aws-sdk-ecr/client.rb#395
  def initialize(*args); end

  # Checks the availability of one or more image layers in a repository.
  #
  # When an image is pushed to a repository, each image layer is checked
  # to verify if it has been uploaded before. If it has been uploaded,
  # then the image layer is skipped.
  #
  # <note markdown="1"> This operation is used by the Amazon ECR proxy and is not generally
  # used by customers for pulling and pushing images. In most cases, you
  # should use the `docker` CLI to pull, tag, and push images.
  #
  #  </note>
  #
  # @example Response structure
  #
  #   resp.layers #=> Array
  #   resp.layers[0].layer_digest #=> String
  #   resp.layers[0].layer_availability #=> String, one of "AVAILABLE", "UNAVAILABLE"
  #   resp.layers[0].layer_size #=> Integer
  #   resp.layers[0].media_type #=> String
  #   resp.failures #=> Array
  #   resp.failures[0].layer_digest #=> String
  #   resp.failures[0].failure_code #=> String, one of "InvalidLayerDigest", "MissingLayerDigest"
  #   resp.failures[0].failure_reason #=> String
  # @example Request syntax with placeholder values
  #
  #   resp = client.batch_check_layer_availability({
  #   registry_id: "RegistryId",
  #   repository_name: "RepositoryName", # required
  #   layer_digests: ["BatchedOperationLayerDigest"], # required
  #   })
  # @option params
  # @option params
  # @option params
  # @overload batch_check_layer_availability
  # @param params [Hash] ({})
  # @return [Types::BatchCheckLayerAvailabilityResponse] Returns a {Seahorse::Client::Response response} object which responds to the following methods:
  #
  #   * {Types::BatchCheckLayerAvailabilityResponse#layers #layers} => Array&lt;Types::Layer&gt;
  #   * {Types::BatchCheckLayerAvailabilityResponse#failures #failures} => Array&lt;Types::LayerFailure&gt;
  # @see http://docs.aws.amazon.com/goto/WebAPI/ecr-2015-09-21/BatchCheckLayerAvailability AWS API Documentation
  #
  # source://aws-sdk-ecr//lib/aws-sdk-ecr/client.rb#454
  def batch_check_layer_availability(params = T.unsafe(nil), options = T.unsafe(nil)); end

  # Deletes a list of specified images within a repository. Images are
  # specified with either an `imageTag` or `imageDigest`.
  #
  # You can remove a tag from an image by specifying the image's tag in
  # your request. When you remove the last tag from an image, the image is
  # deleted from your repository.
  #
  # You can completely delete an image (and all of its tags) by specifying
  # the image's digest in your request.
  #
  # @example Request syntax with placeholder values
  #
  #   resp = client.batch_delete_image({
  #   registry_id: "RegistryId",
  #   repository_name: "RepositoryName", # required
  #   image_ids: [ # required
  #   {
  #   image_digest: "ImageDigest",
  #   image_tag: "ImageTag",
  #   },
  #   ],
  #   })
  # @example Response structure
  #
  #   resp.image_ids #=> Array
  #   resp.image_ids[0].image_digest #=> String
  #   resp.image_ids[0].image_tag #=> String
  #   resp.failures #=> Array
  #   resp.failures[0].image_id.image_digest #=> String
  #   resp.failures[0].image_id.image_tag #=> String
  #   resp.failures[0].failure_code #=> String, one of "InvalidImageDigest", "InvalidImageTag", "ImageTagDoesNotMatchDigest", "ImageNotFound", "MissingDigestAndTag", "ImageReferencedByManifestList", "KmsError", "UpstreamAccessDenied", "UpstreamTooManyRequests", "UpstreamUnavailable"
  #   resp.failures[0].failure_reason #=> String
  # @example Example: To delete multiple images
  #
  #   # This example deletes images with the tags precise and trusty in a repository called ubuntu in the default registry for
  #   # an account.
  #
  #   resp = client.batch_delete_image({
  #   image_ids: [
  #   {
  #   image_tag: "precise",
  #   },
  #   ],
  #   repository_name: "ubuntu",
  #   })
  #
  #   resp.to_h outputs the following:
  #   {
  #   failures: [
  #   ],
  #   image_ids: [
  #   {
  #   image_digest: "sha256:examplee6d1e504117a17000003d3753086354a38375961f2e665416ef4b1b2f",
  #   image_tag: "precise",
  #   },
  #   ],
  #   }
  # @option params
  # @option params
  # @option params
  # @overload batch_delete_image
  # @param params [Hash] ({})
  # @return [Types::BatchDeleteImageResponse] Returns a {Seahorse::Client::Response response} object which responds to the following methods:
  #
  #   * {Types::BatchDeleteImageResponse#image_ids #image_ids} => Array&lt;Types::ImageIdentifier&gt;
  #   * {Types::BatchDeleteImageResponse#failures #failures} => Array&lt;Types::ImageFailure&gt;
  # @see http://docs.aws.amazon.com/goto/WebAPI/ecr-2015-09-21/BatchDeleteImage AWS API Documentation
  #
  # source://aws-sdk-ecr//lib/aws-sdk-ecr/client.rb#542
  def batch_delete_image(params = T.unsafe(nil), options = T.unsafe(nil)); end

  # Gets detailed information for an image. Images are specified with
  # either an `imageTag` or `imageDigest`.
  #
  # When an image is pulled, the BatchGetImage API is called once to
  # retrieve the image manifest.
  #
  # @example Response structure
  #
  #   resp.images #=> Array
  #   resp.images[0].registry_id #=> String
  #   resp.images[0].repository_name #=> String
  #   resp.images[0].image_id.image_digest #=> String
  #   resp.images[0].image_id.image_tag #=> String
  #   resp.images[0].image_manifest #=> String
  #   resp.images[0].image_manifest_media_type #=> String
  #   resp.failures #=> Array
  #   resp.failures[0].image_id.image_digest #=> String
  #   resp.failures[0].image_id.image_tag #=> String
  #   resp.failures[0].failure_code #=> String, one of "InvalidImageDigest", "InvalidImageTag", "ImageTagDoesNotMatchDigest", "ImageNotFound", "MissingDigestAndTag", "ImageReferencedByManifestList", "KmsError", "UpstreamAccessDenied", "UpstreamTooManyRequests", "UpstreamUnavailable"
  #   resp.failures[0].failure_reason #=> String
  # @example Example: To obtain multiple images in a single request
  #
  #   # This example obtains information for an image with a specified image digest ID from the repository named ubuntu in the
  #   # current account.
  #
  #   resp = client.batch_get_image({
  #   image_ids: [
  #   {
  #   image_tag: "precise",
  #   },
  #   ],
  #   repository_name: "ubuntu",
  #   })
  #
  #   resp.to_h outputs the following:
  #   {
  #   failures: [
  #   ],
  #   images: [
  #   {
  #   image_id: {
  #   image_digest: "sha256:example76bdff6d83a09ba2a818f0d00000063724a9ac3ba5019c56f74ebf42a",
  #   image_tag: "precise",
  #   },
  #   image_manifest: "{\n \"schemaVersion\": 1,\n \"name\": \"ubuntu\",\n \"tag\": \"precise\",\n...",
  #   registry_id: "244698725403",
  #   repository_name: "ubuntu",
  #   },
  #   ],
  #   }
  # @example Request syntax with placeholder values
  #
  #   resp = client.batch_get_image({
  #   registry_id: "RegistryId",
  #   repository_name: "RepositoryName", # required
  #   image_ids: [ # required
  #   {
  #   image_digest: "ImageDigest",
  #   image_tag: "ImageTag",
  #   },
  #   ],
  #   accepted_media_types: ["MediaType"],
  #   })
  # @option params
  # @option params
  # @option params
  # @option params
  # @overload batch_get_image
  # @param params [Hash] ({})
  # @return [Types::BatchGetImageResponse] Returns a {Seahorse::Client::Response response} object which responds to the following methods:
  #
  #   * {Types::BatchGetImageResponse#images #images} => Array&lt;Types::Image&gt;
  #   * {Types::BatchGetImageResponse#failures #failures} => Array&lt;Types::ImageFailure&gt;
  # @see http://docs.aws.amazon.com/goto/WebAPI/ecr-2015-09-21/BatchGetImage AWS API Documentation
  #
  # source://aws-sdk-ecr//lib/aws-sdk-ecr/client.rb#643
  def batch_get_image(params = T.unsafe(nil), options = T.unsafe(nil)); end

  # Gets the scanning configuration for one or more repositories.
  #
  # @example Request syntax with placeholder values
  #
  #   resp = client.batch_get_repository_scanning_configuration({
  #   repository_names: ["RepositoryName"], # required
  #   })
  # @example Response structure
  #
  #   resp.scanning_configurations #=> Array
  #   resp.scanning_configurations[0].repository_arn #=> String
  #   resp.scanning_configurations[0].repository_name #=> String
  #   resp.scanning_configurations[0].scan_on_push #=> Boolean
  #   resp.scanning_configurations[0].scan_frequency #=> String, one of "SCAN_ON_PUSH", "CONTINUOUS_SCAN", "MANUAL"
  #   resp.scanning_configurations[0].applied_scan_filters #=> Array
  #   resp.scanning_configurations[0].applied_scan_filters[0].filter #=> String
  #   resp.scanning_configurations[0].applied_scan_filters[0].filter_type #=> String, one of "WILDCARD"
  #   resp.failures #=> Array
  #   resp.failures[0].repository_name #=> String
  #   resp.failures[0].failure_code #=> String, one of "REPOSITORY_NOT_FOUND"
  #   resp.failures[0].failure_reason #=> String
  # @option params
  # @overload batch_get_repository_scanning_configuration
  # @param params [Hash] ({})
  # @return [Types::BatchGetRepositoryScanningConfigurationResponse] Returns a {Seahorse::Client::Response response} object which responds to the following methods:
  #
  #   * {Types::BatchGetRepositoryScanningConfigurationResponse#scanning_configurations #scanning_configurations} => Array&lt;Types::RepositoryScanningConfiguration&gt;
  #   * {Types::BatchGetRepositoryScanningConfigurationResponse#failures #failures} => Array&lt;Types::RepositoryScanningConfigurationFailure&gt;
  # @see http://docs.aws.amazon.com/goto/WebAPI/ecr-2015-09-21/BatchGetRepositoryScanningConfiguration AWS API Documentation
  #
  # source://aws-sdk-ecr//lib/aws-sdk-ecr/client.rb#683
  def batch_get_repository_scanning_configuration(params = T.unsafe(nil), options = T.unsafe(nil)); end

  # @api private
  # @param params [{}]
  #
  # source://aws-sdk-ecr//lib/aws-sdk-ecr/client.rb#3005
  def build_request(operation_name, params = T.unsafe(nil)); end

  # Informs Amazon ECR that the image layer upload has completed for a
  # specified registry, repository name, and upload ID. You can optionally
  # provide a `sha256` digest of the image layer for data validation
  # purposes.
  #
  # When an image is pushed, the CompleteLayerUpload API is called once
  # per each new image layer to verify that the upload has completed.
  #
  # <note markdown="1"> This operation is used by the Amazon ECR proxy and is not generally
  # used by customers for pulling and pushing images. In most cases, you
  # should use the `docker` CLI to pull, tag, and push images.
  #
  #  </note>
  #
  # @example Response structure
  #
  #   resp.registry_id #=> String
  #   resp.repository_name #=> String
  #   resp.upload_id #=> String
  #   resp.layer_digest #=> String
  # @example Request syntax with placeholder values
  #
  #   resp = client.complete_layer_upload({
  #   registry_id: "RegistryId",
  #   repository_name: "RepositoryName", # required
  #   upload_id: "UploadId", # required
  #   layer_digests: ["LayerDigest"], # required
  #   })
  # @option params
  # @option params
  # @option params
  # @option params
  # @overload complete_layer_upload
  # @param params [Hash] ({})
  # @return [Types::CompleteLayerUploadResponse] Returns a {Seahorse::Client::Response response} object which responds to the following methods:
  #
  #   * {Types::CompleteLayerUploadResponse#registry_id #registry_id} => String
  #   * {Types::CompleteLayerUploadResponse#repository_name #repository_name} => String
  #   * {Types::CompleteLayerUploadResponse#upload_id #upload_id} => String
  #   * {Types::CompleteLayerUploadResponse#layer_digest #layer_digest} => String
  # @see http://docs.aws.amazon.com/goto/WebAPI/ecr-2015-09-21/CompleteLayerUpload AWS API Documentation
  #
  # source://aws-sdk-ecr//lib/aws-sdk-ecr/client.rb#744
  def complete_layer_upload(params = T.unsafe(nil), options = T.unsafe(nil)); end

  # Creates a pull through cache rule. A pull through cache rule provides
  # a way to cache images from an upstream registry source in your Amazon
  # ECR private registry. For more information, see [Using pull through
  # cache rules][1] in the *Amazon Elastic Container Registry User Guide*.
  #
  #
  #
  # [1]: https://docs.aws.amazon.com/AmazonECR/latest/userguide/pull-through-cache.html
  #
  # @example Request syntax with placeholder values
  #
  #   resp = client.create_pull_through_cache_rule({
  #   ecr_repository_prefix: "PullThroughCacheRuleRepositoryPrefix", # required
  #   upstream_registry_url: "Url", # required
  #   registry_id: "RegistryId",
  #   upstream_registry: "ecr-public", # accepts ecr-public, quay, k8s, docker-hub, github-container-registry, azure-container-registry
  #   credential_arn: "CredentialArn",
  #   })
  # @example Response structure
  #
  #   resp.ecr_repository_prefix #=> String
  #   resp.upstream_registry_url #=> String
  #   resp.created_at #=> Time
  #   resp.registry_id #=> String
  #   resp.upstream_registry #=> String, one of "ecr-public", "quay", "k8s", "docker-hub", "github-container-registry", "azure-container-registry"
  #   resp.credential_arn #=> String
  # @option params
  # @option params
  # @option params
  # @option params
  # @option params
  # @overload create_pull_through_cache_rule
  # @param params [Hash] ({})
  # @return [Types::CreatePullThroughCacheRuleResponse] Returns a {Seahorse::Client::Response response} object which responds to the following methods:
  #
  #   * {Types::CreatePullThroughCacheRuleResponse#ecr_repository_prefix #ecr_repository_prefix} => String
  #   * {Types::CreatePullThroughCacheRuleResponse#upstream_registry_url #upstream_registry_url} => String
  #   * {Types::CreatePullThroughCacheRuleResponse#created_at #created_at} => Time
  #   * {Types::CreatePullThroughCacheRuleResponse#registry_id #registry_id} => String
  #   * {Types::CreatePullThroughCacheRuleResponse#upstream_registry #upstream_registry} => String
  #   * {Types::CreatePullThroughCacheRuleResponse#credential_arn #credential_arn} => String
  # @see http://docs.aws.amazon.com/goto/WebAPI/ecr-2015-09-21/CreatePullThroughCacheRule AWS API Documentation
  #
  # source://aws-sdk-ecr//lib/aws-sdk-ecr/client.rb#825
  def create_pull_through_cache_rule(params = T.unsafe(nil), options = T.unsafe(nil)); end

  # Creates a repository. For more information, see [Amazon ECR
  # repositories][1] in the *Amazon Elastic Container Registry User
  # Guide*.
  #
  #
  #
  # [1]: https://docs.aws.amazon.com/AmazonECR/latest/userguide/Repositories.html
  #
  # @example Example: To create a new repository
  #
  #   # This example creates a repository called nginx-web-app inside the project-a namespace in the default registry for an
  #   # account.
  #
  #   resp = client.create_repository({
  #   repository_name: "project-a/nginx-web-app",
  #   })
  #
  #   resp.to_h outputs the following:
  #   {
  #   repository: {
  #   registry_id: "012345678901",
  #   repository_arn: "arn:aws:ecr:us-west-2:012345678901:repository/project-a/nginx-web-app",
  #   repository_name: "project-a/nginx-web-app",
  #   },
  #   }
  # @example Response structure
  #
  #   resp.repository.repository_arn #=> String
  #   resp.repository.registry_id #=> String
  #   resp.repository.repository_name #=> String
  #   resp.repository.repository_uri #=> String
  #   resp.repository.created_at #=> Time
  #   resp.repository.image_tag_mutability #=> String, one of "MUTABLE", "IMMUTABLE"
  #   resp.repository.image_scanning_configuration.scan_on_push #=> Boolean
  #   resp.repository.encryption_configuration.encryption_type #=> String, one of "AES256", "KMS"
  #   resp.repository.encryption_configuration.kms_key #=> String
  # @example Request syntax with placeholder values
  #
  #   resp = client.create_repository({
  #   registry_id: "RegistryId",
  #   repository_name: "RepositoryName", # required
  #   tags: [
  #   {
  #   key: "TagKey", # required
  #   value: "TagValue", # required
  #   },
  #   ],
  #   image_tag_mutability: "MUTABLE", # accepts MUTABLE, IMMUTABLE
  #   image_scanning_configuration: {
  #   scan_on_push: false,
  #   },
  #   encryption_configuration: {
  #   encryption_type: "AES256", # required, accepts AES256, KMS
  #   kms_key: "KmsKey",
  #   },
  #   })
  # @option params
  # @option params
  # @option params
  # @option params
  # @option params
  # @option params
  # @overload create_repository
  # @param params [Hash] ({})
  # @return [Types::CreateRepositoryResponse] Returns a {Seahorse::Client::Response response} object which responds to the following methods:
  #
  #   * {Types::CreateRepositoryResponse#repository #repository} => Types::Repository
  # @see http://docs.aws.amazon.com/goto/WebAPI/ecr-2015-09-21/CreateRepository AWS API Documentation
  #
  # source://aws-sdk-ecr//lib/aws-sdk-ecr/client.rb#935
  def create_repository(params = T.unsafe(nil), options = T.unsafe(nil)); end

  # Deletes the lifecycle policy associated with the specified repository.
  #
  # @example Request syntax with placeholder values
  #
  #   resp = client.delete_lifecycle_policy({
  #   registry_id: "RegistryId",
  #   repository_name: "RepositoryName", # required
  #   })
  # @example Response structure
  #
  #   resp.registry_id #=> String
  #   resp.repository_name #=> String
  #   resp.lifecycle_policy_text #=> String
  #   resp.last_evaluated_at #=> Time
  # @option params
  # @option params
  # @overload delete_lifecycle_policy
  # @param params [Hash] ({})
  # @return [Types::DeleteLifecyclePolicyResponse] Returns a {Seahorse::Client::Response response} object which responds to the following methods:
  #
  #   * {Types::DeleteLifecyclePolicyResponse#registry_id #registry_id} => String
  #   * {Types::DeleteLifecyclePolicyResponse#repository_name #repository_name} => String
  #   * {Types::DeleteLifecyclePolicyResponse#lifecycle_policy_text #lifecycle_policy_text} => String
  #   * {Types::DeleteLifecyclePolicyResponse#last_evaluated_at #last_evaluated_at} => Time
  # @see http://docs.aws.amazon.com/goto/WebAPI/ecr-2015-09-21/DeleteLifecyclePolicy AWS API Documentation
  #
  # source://aws-sdk-ecr//lib/aws-sdk-ecr/client.rb#975
  def delete_lifecycle_policy(params = T.unsafe(nil), options = T.unsafe(nil)); end

  # Deletes a pull through cache rule.
  #
  # @example Request syntax with placeholder values
  #
  #   resp = client.delete_pull_through_cache_rule({
  #   ecr_repository_prefix: "PullThroughCacheRuleRepositoryPrefix", # required
  #   registry_id: "RegistryId",
  #   })
  # @example Response structure
  #
  #   resp.ecr_repository_prefix #=> String
  #   resp.upstream_registry_url #=> String
  #   resp.created_at #=> Time
  #   resp.registry_id #=> String
  #   resp.credential_arn #=> String
  # @option params
  # @option params
  # @overload delete_pull_through_cache_rule
  # @param params [Hash] ({})
  # @return [Types::DeletePullThroughCacheRuleResponse] Returns a {Seahorse::Client::Response response} object which responds to the following methods:
  #
  #   * {Types::DeletePullThroughCacheRuleResponse#ecr_repository_prefix #ecr_repository_prefix} => String
  #   * {Types::DeletePullThroughCacheRuleResponse#upstream_registry_url #upstream_registry_url} => String
  #   * {Types::DeletePullThroughCacheRuleResponse#created_at #created_at} => Time
  #   * {Types::DeletePullThroughCacheRuleResponse#registry_id #registry_id} => String
  #   * {Types::DeletePullThroughCacheRuleResponse#credential_arn #credential_arn} => String
  # @see http://docs.aws.amazon.com/goto/WebAPI/ecr-2015-09-21/DeletePullThroughCacheRule AWS API Documentation
  #
  # source://aws-sdk-ecr//lib/aws-sdk-ecr/client.rb#1018
  def delete_pull_through_cache_rule(params = T.unsafe(nil), options = T.unsafe(nil)); end

  # Deletes the registry permissions policy.
  #
  # @example Response structure
  #
  #   resp.registry_id #=> String
  #   resp.policy_text #=> String
  # @overload delete_registry_policy
  # @param params [Hash] ({})
  # @return [Types::DeleteRegistryPolicyResponse] Returns a {Seahorse::Client::Response response} object which responds to the following methods:
  #
  #   * {Types::DeleteRegistryPolicyResponse#registry_id #registry_id} => String
  #   * {Types::DeleteRegistryPolicyResponse#policy_text #policy_text} => String
  # @see http://docs.aws.amazon.com/goto/WebAPI/ecr-2015-09-21/DeleteRegistryPolicy AWS API Documentation
  #
  # source://aws-sdk-ecr//lib/aws-sdk-ecr/client.rb#1039
  def delete_registry_policy(params = T.unsafe(nil), options = T.unsafe(nil)); end

  # Deletes a repository. If the repository isn't empty, you must either
  # delete the contents of the repository or use the `force` option to
  # delete the repository and have Amazon ECR delete all of its contents
  # on your behalf.
  #
  # @example Request syntax with placeholder values
  #
  #   resp = client.delete_repository({
  #   registry_id: "RegistryId",
  #   repository_name: "RepositoryName", # required
  #   force: false,
  #   })
  # @example Response structure
  #
  #   resp.repository.repository_arn #=> String
  #   resp.repository.registry_id #=> String
  #   resp.repository.repository_name #=> String
  #   resp.repository.repository_uri #=> String
  #   resp.repository.created_at #=> Time
  #   resp.repository.image_tag_mutability #=> String, one of "MUTABLE", "IMMUTABLE"
  #   resp.repository.image_scanning_configuration.scan_on_push #=> Boolean
  #   resp.repository.encryption_configuration.encryption_type #=> String, one of "AES256", "KMS"
  #   resp.repository.encryption_configuration.kms_key #=> String
  # @example Example: To force delete a repository
  #
  #   # This example force deletes a repository named ubuntu in the default registry for an account. The force parameter is
  #   # required if the repository contains images.
  #
  #   resp = client.delete_repository({
  #   force: true,
  #   repository_name: "ubuntu",
  #   })
  #
  #   resp.to_h outputs the following:
  #   {
  #   repository: {
  #   registry_id: "012345678901",
  #   repository_arn: "arn:aws:ecr:us-west-2:012345678901:repository/ubuntu",
  #   repository_name: "ubuntu",
  #   },
  #   }
  # @option params
  # @option params
  # @option params
  # @overload delete_repository
  # @param params [Hash] ({})
  # @return [Types::DeleteRepositoryResponse] Returns a {Seahorse::Client::Response response} object which responds to the following methods:
  #
  #   * {Types::DeleteRepositoryResponse#repository #repository} => Types::Repository
  # @see http://docs.aws.amazon.com/goto/WebAPI/ecr-2015-09-21/DeleteRepository AWS API Documentation
  #
  # source://aws-sdk-ecr//lib/aws-sdk-ecr/client.rb#1110
  def delete_repository(params = T.unsafe(nil), options = T.unsafe(nil)); end

  # Deletes the repository policy associated with the specified
  # repository.
  #
  # @example Request syntax with placeholder values
  #
  #   resp = client.delete_repository_policy({
  #   registry_id: "RegistryId",
  #   repository_name: "RepositoryName", # required
  #   })
  # @example Example: To delete the policy associated with a repository
  #
  #   # This example deletes the policy associated with the repository named ubuntu in the current account.
  #
  #   resp = client.delete_repository_policy({
  #   repository_name: "ubuntu",
  #   })
  #
  #   resp.to_h outputs the following:
  #   {
  #   policy_text: "{ ... }",
  #   registry_id: "012345678901",
  #   repository_name: "ubuntu",
  #   }
  # @example Response structure
  #
  #   resp.registry_id #=> String
  #   resp.repository_name #=> String
  #   resp.policy_text #=> String
  # @option params
  # @option params
  # @overload delete_repository_policy
  # @param params [Hash] ({})
  # @return [Types::DeleteRepositoryPolicyResponse] Returns a {Seahorse::Client::Response response} object which responds to the following methods:
  #
  #   * {Types::DeleteRepositoryPolicyResponse#registry_id #registry_id} => String
  #   * {Types::DeleteRepositoryPolicyResponse#repository_name #repository_name} => String
  #   * {Types::DeleteRepositoryPolicyResponse#policy_text #policy_text} => String
  # @see http://docs.aws.amazon.com/goto/WebAPI/ecr-2015-09-21/DeleteRepositoryPolicy AWS API Documentation
  #
  # source://aws-sdk-ecr//lib/aws-sdk-ecr/client.rb#1166
  def delete_repository_policy(params = T.unsafe(nil), options = T.unsafe(nil)); end

  # Returns the replication status for a specified image.
  #
  # @example Response structure
  #
  #   resp.repository_name #=> String
  #   resp.image_id.image_digest #=> String
  #   resp.image_id.image_tag #=> String
  #   resp.replication_statuses #=> Array
  #   resp.replication_statuses[0].region #=> String
  #   resp.replication_statuses[0].registry_id #=> String
  #   resp.replication_statuses[0].status #=> String, one of "IN_PROGRESS", "COMPLETE", "FAILED"
  #   resp.replication_statuses[0].failure_code #=> String
  # @example Request syntax with placeholder values
  #
  #   resp = client.describe_image_replication_status({
  #   repository_name: "RepositoryName", # required
  #   image_id: { # required
  #   image_digest: "ImageDigest",
  #   image_tag: "ImageTag",
  #   },
  #   registry_id: "RegistryId",
  #   })
  # @option params
  # @option params
  # @option params
  # @overload describe_image_replication_status
  # @param params [Hash] ({})
  # @return [Types::DescribeImageReplicationStatusResponse] Returns a {Seahorse::Client::Response response} object which responds to the following methods:
  #
  #   * {Types::DescribeImageReplicationStatusResponse#repository_name #repository_name} => String
  #   * {Types::DescribeImageReplicationStatusResponse#image_id #image_id} => Types::ImageIdentifier
  #   * {Types::DescribeImageReplicationStatusResponse#replication_statuses #replication_statuses} => Array&lt;Types::ImageReplicationStatus&gt;
  # @see http://docs.aws.amazon.com/goto/WebAPI/ecr-2015-09-21/DescribeImageReplicationStatus AWS API Documentation
  #
  # source://aws-sdk-ecr//lib/aws-sdk-ecr/client.rb#1216
  def describe_image_replication_status(params = T.unsafe(nil), options = T.unsafe(nil)); end

  # Returns the scan findings for the specified image.
  #
  # The returned {Seahorse::Client::Response response} is a pageable response and is Enumerable. For details on usage see {Aws::PageableResponse PageableResponse}.
  #
  # The following waiters are defined for this operation (see {Client#wait_until} for detailed usage):
  #
  #   * image_scan_complete
  #
  # @example Request syntax with placeholder values
  #
  #   resp = client.describe_image_scan_findings({
  #   registry_id: "RegistryId",
  #   repository_name: "RepositoryName", # required
  #   image_id: { # required
  #   image_digest: "ImageDigest",
  #   image_tag: "ImageTag",
  #   },
  #   next_token: "NextToken",
  #   max_results: 1,
  #   })
  # @example Response structure
  #
  #   resp.registry_id #=> String
  #   resp.repository_name #=> String
  #   resp.image_id.image_digest #=> String
  #   resp.image_id.image_tag #=> String
  #   resp.image_scan_status.status #=> String, one of "IN_PROGRESS", "COMPLETE", "FAILED", "UNSUPPORTED_IMAGE", "ACTIVE", "PENDING", "SCAN_ELIGIBILITY_EXPIRED", "FINDINGS_UNAVAILABLE"
  #   resp.image_scan_status.description #=> String
  #   resp.image_scan_findings.image_scan_completed_at #=> Time
  #   resp.image_scan_findings.vulnerability_source_updated_at #=> Time
  #   resp.image_scan_findings.finding_severity_counts #=> Hash
  #   resp.image_scan_findings.finding_severity_counts["FindingSeverity"] #=> Integer
  #   resp.image_scan_findings.findings #=> Array
  #   resp.image_scan_findings.findings[0].name #=> String
  #   resp.image_scan_findings.findings[0].description #=> String
  #   resp.image_scan_findings.findings[0].uri #=> String
  #   resp.image_scan_findings.findings[0].severity #=> String, one of "INFORMATIONAL", "LOW", "MEDIUM", "HIGH", "CRITICAL", "UNDEFINED"
  #   resp.image_scan_findings.findings[0].attributes #=> Array
  #   resp.image_scan_findings.findings[0].attributes[0].key #=> String
  #   resp.image_scan_findings.findings[0].attributes[0].value #=> <Hash,Array,String,Numeric,Boolean,IO,Set,nil>
  #   resp.image_scan_findings.enhanced_findings #=> Array
  #   resp.image_scan_findings.enhanced_findings[0].aws_account_id #=> String
  #   resp.image_scan_findings.enhanced_findings[0].description #=> String
  #   resp.image_scan_findings.enhanced_findings[0].finding_arn #=> String
  #   resp.image_scan_findings.enhanced_findings[0].first_observed_at #=> Time
  #   resp.image_scan_findings.enhanced_findings[0].last_observed_at #=> Time
  #   resp.image_scan_findings.enhanced_findings[0].package_vulnerability_details.cvss #=> Array
  #   resp.image_scan_findings.enhanced_findings[0].package_vulnerability_details.cvss[0].base_score #=> Float
  #   resp.image_scan_findings.enhanced_findings[0].package_vulnerability_details.cvss[0].scoring_vector #=> String
  #   resp.image_scan_findings.enhanced_findings[0].package_vulnerability_details.cvss[0].source #=> String
  #   resp.image_scan_findings.enhanced_findings[0].package_vulnerability_details.cvss[0].version #=> String
  #   resp.image_scan_findings.enhanced_findings[0].package_vulnerability_details.reference_urls #=> Array
  #   resp.image_scan_findings.enhanced_findings[0].package_vulnerability_details.reference_urls[0] #=> String
  #   resp.image_scan_findings.enhanced_findings[0].package_vulnerability_details.related_vulnerabilities #=> Array
  #   resp.image_scan_findings.enhanced_findings[0].package_vulnerability_details.related_vulnerabilities[0] #=> String
  #   resp.image_scan_findings.enhanced_findings[0].package_vulnerability_details.source #=> String
  #   resp.image_scan_findings.enhanced_findings[0].package_vulnerability_details.source_url #=> String
  #   resp.image_scan_findings.enhanced_findings[0].package_vulnerability_details.vendor_created_at #=> Time
  #   resp.image_scan_findings.enhanced_findings[0].package_vulnerability_details.vendor_severity #=> String
  #   resp.image_scan_findings.enhanced_findings[0].package_vulnerability_details.vendor_updated_at #=> Time
  #   resp.image_scan_findings.enhanced_findings[0].package_vulnerability_details.vulnerability_id #=> String
  #   resp.image_scan_findings.enhanced_findings[0].package_vulnerability_details.vulnerable_packages #=> Array
  #   resp.image_scan_findings.enhanced_findings[0].package_vulnerability_details.vulnerable_packages[0].arch #=> String
  #   resp.image_scan_findings.enhanced_findings[0].package_vulnerability_details.vulnerable_packages[0].epoch #=> Integer
  #   resp.image_scan_findings.enhanced_findings[0].package_vulnerability_details.vulnerable_packages[0].file_path #=> String
  #   resp.image_scan_findings.enhanced_findings[0].package_vulnerability_details.vulnerable_packages[0].name #=> String
  #   resp.image_scan_findings.enhanced_findings[0].package_vulnerability_details.vulnerable_packages[0].package_manager #=> String
  #   resp.image_scan_findings.enhanced_findings[0].package_vulnerability_details.vulnerable_packages[0].release #=> String
  #   resp.image_scan_findings.enhanced_findings[0].package_vulnerability_details.vulnerable_packages[0].source_layer_hash #=> String
  #   resp.image_scan_findings.enhanced_findings[0].package_vulnerability_details.vulnerable_packages[0].version #=> String
  #   resp.image_scan_findings.enhanced_findings[0].remediation.recommendation.url #=> String
  #   resp.image_scan_findings.enhanced_findings[0].remediation.recommendation.text #=> String
  #   resp.image_scan_findings.enhanced_findings[0].resources #=> Array
  #   resp.image_scan_findings.enhanced_findings[0].resources[0].details.aws_ecr_container_image.architecture #=> String
  #   resp.image_scan_findings.enhanced_findings[0].resources[0].details.aws_ecr_container_image.author #=> String
  #   resp.image_scan_findings.enhanced_findings[0].resources[0].details.aws_ecr_container_image.image_hash #=> String
  #   resp.image_scan_findings.enhanced_findings[0].resources[0].details.aws_ecr_container_image.image_tags #=> Array
  #   resp.image_scan_findings.enhanced_findings[0].resources[0].details.aws_ecr_container_image.image_tags[0] #=> String
  #   resp.image_scan_findings.enhanced_findings[0].resources[0].details.aws_ecr_container_image.platform #=> String
  #   resp.image_scan_findings.enhanced_findings[0].resources[0].details.aws_ecr_container_image.pushed_at #=> Time
  #   resp.image_scan_findings.enhanced_findings[0].resources[0].details.aws_ecr_container_image.registry #=> String
  #   resp.image_scan_findings.enhanced_findings[0].resources[0].details.aws_ecr_container_image.repository_name #=> String
  #   resp.image_scan_findings.enhanced_findings[0].resources[0].id #=> String
  #   resp.image_scan_findings.enhanced_findings[0].resources[0].tags #=> Hash
  #   resp.image_scan_findings.enhanced_findings[0].resources[0].tags["TagKey"] #=> String
  #   resp.image_scan_findings.enhanced_findings[0].resources[0].type #=> String
  #   resp.image_scan_findings.enhanced_findings[0].score #=> Float
  #   resp.image_scan_findings.enhanced_findings[0].score_details.cvss.adjustments #=> Array
  #   resp.image_scan_findings.enhanced_findings[0].score_details.cvss.adjustments[0].metric #=> String
  #   resp.image_scan_findings.enhanced_findings[0].score_details.cvss.adjustments[0].reason #=> String
  #   resp.image_scan_findings.enhanced_findings[0].score_details.cvss.score #=> Float
  #   resp.image_scan_findings.enhanced_findings[0].score_details.cvss.score_source #=> String
  #   resp.image_scan_findings.enhanced_findings[0].score_details.cvss.scoring_vector #=> String
  #   resp.image_scan_findings.enhanced_findings[0].score_details.cvss.version #=> String
  #   resp.image_scan_findings.enhanced_findings[0].severity #=> String
  #   resp.image_scan_findings.enhanced_findings[0].status #=> String
  #   resp.image_scan_findings.enhanced_findings[0].title #=> String
  #   resp.image_scan_findings.enhanced_findings[0].type #=> String
  #   resp.image_scan_findings.enhanced_findings[0].updated_at #=> Time
  #   resp.next_token #=> String
  # @option params
  # @option params
  # @option params
  # @option params
  # @option params
  # @overload describe_image_scan_findings
  # @param params [Hash] ({})
  # @return [Types::DescribeImageScanFindingsResponse] Returns a {Seahorse::Client::Response response} object which responds to the following methods:
  #
  #   * {Types::DescribeImageScanFindingsResponse#registry_id #registry_id} => String
  #   * {Types::DescribeImageScanFindingsResponse#repository_name #repository_name} => String
  #   * {Types::DescribeImageScanFindingsResponse#image_id #image_id} => Types::ImageIdentifier
  #   * {Types::DescribeImageScanFindingsResponse#image_scan_status #image_scan_status} => Types::ImageScanStatus
  #   * {Types::DescribeImageScanFindingsResponse#image_scan_findings #image_scan_findings} => Types::ImageScanFindings
  #   * {Types::DescribeImageScanFindingsResponse#next_token #next_token} => String
  # @see http://docs.aws.amazon.com/goto/WebAPI/ecr-2015-09-21/DescribeImageScanFindings AWS API Documentation
  #
  # source://aws-sdk-ecr//lib/aws-sdk-ecr/client.rb#1368
  def describe_image_scan_findings(params = T.unsafe(nil), options = T.unsafe(nil)); end

  # Returns metadata about the images in a repository.
  #
  # <note markdown="1"> Beginning with Docker version 1.9, the Docker client compresses image
  # layers before pushing them to a V2 Docker registry. The output of the
  # `docker images` command shows the uncompressed image size, so it may
  # return a larger image size than the image sizes returned by
  # DescribeImages.
  #
  #  </note>
  #
  # The returned {Seahorse::Client::Response response} is a pageable response and is Enumerable. For details on usage see {Aws::PageableResponse PageableResponse}.
  #
  # @example Request syntax with placeholder values
  #
  #   resp = client.describe_images({
  #   registry_id: "RegistryId",
  #   repository_name: "RepositoryName", # required
  #   image_ids: [
  #   {
  #   image_digest: "ImageDigest",
  #   image_tag: "ImageTag",
  #   },
  #   ],
  #   next_token: "NextToken",
  #   max_results: 1,
  #   filter: {
  #   tag_status: "TAGGED", # accepts TAGGED, UNTAGGED, ANY
  #   },
  #   })
  # @example Response structure
  #
  #   resp.image_details #=> Array
  #   resp.image_details[0].registry_id #=> String
  #   resp.image_details[0].repository_name #=> String
  #   resp.image_details[0].image_digest #=> String
  #   resp.image_details[0].image_tags #=> Array
  #   resp.image_details[0].image_tags[0] #=> String
  #   resp.image_details[0].image_size_in_bytes #=> Integer
  #   resp.image_details[0].image_pushed_at #=> Time
  #   resp.image_details[0].image_scan_status.status #=> String, one of "IN_PROGRESS", "COMPLETE", "FAILED", "UNSUPPORTED_IMAGE", "ACTIVE", "PENDING", "SCAN_ELIGIBILITY_EXPIRED", "FINDINGS_UNAVAILABLE"
  #   resp.image_details[0].image_scan_status.description #=> String
  #   resp.image_details[0].image_scan_findings_summary.image_scan_completed_at #=> Time
  #   resp.image_details[0].image_scan_findings_summary.vulnerability_source_updated_at #=> Time
  #   resp.image_details[0].image_scan_findings_summary.finding_severity_counts #=> Hash
  #   resp.image_details[0].image_scan_findings_summary.finding_severity_counts["FindingSeverity"] #=> Integer
  #   resp.image_details[0].image_manifest_media_type #=> String
  #   resp.image_details[0].artifact_media_type #=> String
  #   resp.image_details[0].last_recorded_pull_time #=> Time
  #   resp.next_token #=> String
  # @option params
  # @option params
  # @option params
  # @option params
  # @option params
  # @option params
  # @overload describe_images
  # @param params [Hash] ({})
  # @return [Types::DescribeImagesResponse] Returns a {Seahorse::Client::Response response} object which responds to the following methods:
  #
  #   * {Types::DescribeImagesResponse#image_details #image_details} => Array&lt;Types::ImageDetail&gt;
  #   * {Types::DescribeImagesResponse#next_token #next_token} => String
  # @see http://docs.aws.amazon.com/goto/WebAPI/ecr-2015-09-21/DescribeImages AWS API Documentation
  #
  # source://aws-sdk-ecr//lib/aws-sdk-ecr/client.rb#1467
  def describe_images(params = T.unsafe(nil), options = T.unsafe(nil)); end

  # Returns the pull through cache rules for a registry.
  #
  # The returned {Seahorse::Client::Response response} is a pageable response and is Enumerable. For details on usage see {Aws::PageableResponse PageableResponse}.
  #
  # @example Response structure
  #
  #   resp.pull_through_cache_rules #=> Array
  #   resp.pull_through_cache_rules[0].ecr_repository_prefix #=> String
  #   resp.pull_through_cache_rules[0].upstream_registry_url #=> String
  #   resp.pull_through_cache_rules[0].created_at #=> Time
  #   resp.pull_through_cache_rules[0].registry_id #=> String
  #   resp.pull_through_cache_rules[0].credential_arn #=> String
  #   resp.pull_through_cache_rules[0].upstream_registry #=> String, one of "ecr-public", "quay", "k8s", "docker-hub", "github-container-registry", "azure-container-registry"
  #   resp.pull_through_cache_rules[0].updated_at #=> Time
  #   resp.next_token #=> String
  # @example Request syntax with placeholder values
  #
  #   resp = client.describe_pull_through_cache_rules({
  #   registry_id: "RegistryId",
  #   ecr_repository_prefixes: ["PullThroughCacheRuleRepositoryPrefix"],
  #   next_token: "NextToken",
  #   max_results: 1,
  #   })
  # @option params
  # @option params
  # @option params
  # @option params
  # @overload describe_pull_through_cache_rules
  # @param params [Hash] ({})
  # @return [Types::DescribePullThroughCacheRulesResponse] Returns a {Seahorse::Client::Response response} object which responds to the following methods:
  #
  #   * {Types::DescribePullThroughCacheRulesResponse#pull_through_cache_rules #pull_through_cache_rules} => Array&lt;Types::PullThroughCacheRule&gt;
  #   * {Types::DescribePullThroughCacheRulesResponse#next_token #next_token} => String
  # @see http://docs.aws.amazon.com/goto/WebAPI/ecr-2015-09-21/DescribePullThroughCacheRules AWS API Documentation
  #
  # source://aws-sdk-ecr//lib/aws-sdk-ecr/client.rb#1536
  def describe_pull_through_cache_rules(params = T.unsafe(nil), options = T.unsafe(nil)); end

  # Describes the settings for a registry. The replication configuration
  # for a repository can be created or updated with the
  # PutReplicationConfiguration API action.
  #
  # @example Response structure
  #
  #   resp.registry_id #=> String
  #   resp.replication_configuration.rules #=> Array
  #   resp.replication_configuration.rules[0].destinations #=> Array
  #   resp.replication_configuration.rules[0].destinations[0].region #=> String
  #   resp.replication_configuration.rules[0].destinations[0].registry_id #=> String
  #   resp.replication_configuration.rules[0].repository_filters #=> Array
  #   resp.replication_configuration.rules[0].repository_filters[0].filter #=> String
  #   resp.replication_configuration.rules[0].repository_filters[0].filter_type #=> String, one of "PREFIX_MATCH"
  # @overload describe_registry
  # @param params [Hash] ({})
  # @return [Types::DescribeRegistryResponse] Returns a {Seahorse::Client::Response response} object which responds to the following methods:
  #
  #   * {Types::DescribeRegistryResponse#registry_id #registry_id} => String
  #   * {Types::DescribeRegistryResponse#replication_configuration #replication_configuration} => Types::ReplicationConfiguration
  # @see http://docs.aws.amazon.com/goto/WebAPI/ecr-2015-09-21/DescribeRegistry AWS API Documentation
  #
  # source://aws-sdk-ecr//lib/aws-sdk-ecr/client.rb#1565
  def describe_registry(params = T.unsafe(nil), options = T.unsafe(nil)); end

  # Describes image repositories in a registry.
  #
  # The returned {Seahorse::Client::Response response} is a pageable response and is Enumerable. For details on usage see {Aws::PageableResponse PageableResponse}.
  #
  # @example Response structure
  #
  #   resp.repositories #=> Array
  #   resp.repositories[0].repository_arn #=> String
  #   resp.repositories[0].registry_id #=> String
  #   resp.repositories[0].repository_name #=> String
  #   resp.repositories[0].repository_uri #=> String
  #   resp.repositories[0].created_at #=> Time
  #   resp.repositories[0].image_tag_mutability #=> String, one of "MUTABLE", "IMMUTABLE"
  #   resp.repositories[0].image_scanning_configuration.scan_on_push #=> Boolean
  #   resp.repositories[0].encryption_configuration.encryption_type #=> String, one of "AES256", "KMS"
  #   resp.repositories[0].encryption_configuration.kms_key #=> String
  #   resp.next_token #=> String
  # @example Example: To describe all repositories in the current account
  #
  #   # The following example obtains a list and description of all repositories in the default registry to which the current
  #   # user has access.
  #
  #   resp = client.describe_repositories({
  #   })
  #
  #   resp.to_h outputs the following:
  #   {
  #   repositories: [
  #   {
  #   registry_id: "012345678910",
  #   repository_arn: "arn:aws:ecr:us-west-2:012345678910:repository/ubuntu",
  #   repository_name: "ubuntu",
  #   },
  #   {
  #   registry_id: "012345678910",
  #   repository_arn: "arn:aws:ecr:us-west-2:012345678910:repository/test",
  #   repository_name: "test",
  #   },
  #   ],
  #   }
  # @example Request syntax with placeholder values
  #
  #   resp = client.describe_repositories({
  #   registry_id: "RegistryId",
  #   repository_names: ["RepositoryName"],
  #   next_token: "NextToken",
  #   max_results: 1,
  #   })
  # @option params
  # @option params
  # @option params
  # @option params
  # @overload describe_repositories
  # @param params [Hash] ({})
  # @return [Types::DescribeRepositoriesResponse] Returns a {Seahorse::Client::Response response} object which responds to the following methods:
  #
  #   * {Types::DescribeRepositoriesResponse#repositories #repositories} => Array&lt;Types::Repository&gt;
  #   * {Types::DescribeRepositoriesResponse#next_token #next_token} => String
  # @see http://docs.aws.amazon.com/goto/WebAPI/ecr-2015-09-21/DescribeRepositories AWS API Documentation
  #
  # source://aws-sdk-ecr//lib/aws-sdk-ecr/client.rb#1667
  def describe_repositories(params = T.unsafe(nil), options = T.unsafe(nil)); end

  # Retrieves an authorization token. An authorization token represents
  # your IAM authentication credentials and can be used to access any
  # Amazon ECR registry that your IAM principal has access to. The
  # authorization token is valid for 12 hours.
  #
  # The `authorizationToken` returned is a base64 encoded string that can
  # be decoded and used in a `docker login` command to authenticate to a
  # registry. The CLI offers an `get-login-password` command that
  # simplifies the login process. For more information, see [Registry
  # authentication][1] in the *Amazon Elastic Container Registry User
  # Guide*.
  #
  #
  #
  # [1]: https://docs.aws.amazon.com/AmazonECR/latest/userguide/Registries.html#registry_auth
  #
  # @example Example: To obtain an authorization token
  #
  #   # This example gets an authorization token for your default registry.
  #
  #   resp = client.get_authorization_token({
  #   })
  #
  #   resp.to_h outputs the following:
  #   {
  #   authorization_data: [
  #   {
  #   authorization_token: "QVdTOkNEXAMPLE",
  #   expires_at: Time.parse("2022-05-17T06:56:13.652000+00:00"),
  #   proxy_endpoint: "https://012345678901.dkr.ecr.us-west-2.amazonaws.com",
  #   },
  #   ],
  #   }
  # @example Request syntax with placeholder values
  #
  #   resp = client.get_authorization_token({
  #   registry_ids: ["RegistryId"],
  #   })
  # @example Response structure
  #
  #   resp.authorization_data #=> Array
  #   resp.authorization_data[0].authorization_token #=> String
  #   resp.authorization_data[0].expires_at #=> Time
  #   resp.authorization_data[0].proxy_endpoint #=> String
  # @option params
  # @overload get_authorization_token
  # @param params [Hash] ({})
  # @return [Types::GetAuthorizationTokenResponse] Returns a {Seahorse::Client::Response response} object which responds to the following methods:
  #
  #   * {Types::GetAuthorizationTokenResponse#authorization_data #authorization_data} => Array&lt;Types::AuthorizationData&gt;
  # @see http://docs.aws.amazon.com/goto/WebAPI/ecr-2015-09-21/GetAuthorizationToken AWS API Documentation
  #
  # source://aws-sdk-ecr//lib/aws-sdk-ecr/client.rb#1733
  def get_authorization_token(params = T.unsafe(nil), options = T.unsafe(nil)); end

  # Retrieves the pre-signed Amazon S3 download URL corresponding to an
  # image layer. You can only get URLs for image layers that are
  # referenced in an image.
  #
  # When an image is pulled, the GetDownloadUrlForLayer API is called once
  # per image layer that is not already cached.
  #
  # <note markdown="1"> This operation is used by the Amazon ECR proxy and is not generally
  # used by customers for pulling and pushing images. In most cases, you
  # should use the `docker` CLI to pull, tag, and push images.
  #
  #  </note>
  #
  # @example Response structure
  #
  #   resp.download_url #=> String
  #   resp.layer_digest #=> String
  # @example Request syntax with placeholder values
  #
  #   resp = client.get_download_url_for_layer({
  #   registry_id: "RegistryId",
  #   repository_name: "RepositoryName", # required
  #   layer_digest: "LayerDigest", # required
  #   })
  # @option params
  # @option params
  # @option params
  # @overload get_download_url_for_layer
  # @param params [Hash] ({})
  # @return [Types::GetDownloadUrlForLayerResponse] Returns a {Seahorse::Client::Response response} object which responds to the following methods:
  #
  #   * {Types::GetDownloadUrlForLayerResponse#download_url #download_url} => String
  #   * {Types::GetDownloadUrlForLayerResponse#layer_digest #layer_digest} => String
  # @see http://docs.aws.amazon.com/goto/WebAPI/ecr-2015-09-21/GetDownloadUrlForLayer AWS API Documentation
  #
  # source://aws-sdk-ecr//lib/aws-sdk-ecr/client.rb#1785
  def get_download_url_for_layer(params = T.unsafe(nil), options = T.unsafe(nil)); end

  # Retrieves the lifecycle policy for the specified repository.
  #
  # @example Request syntax with placeholder values
  #
  #   resp = client.get_lifecycle_policy({
  #   registry_id: "RegistryId",
  #   repository_name: "RepositoryName", # required
  #   })
  # @example Response structure
  #
  #   resp.registry_id #=> String
  #   resp.repository_name #=> String
  #   resp.lifecycle_policy_text #=> String
  #   resp.last_evaluated_at #=> Time
  # @option params
  # @option params
  # @overload get_lifecycle_policy
  # @param params [Hash] ({})
  # @return [Types::GetLifecyclePolicyResponse] Returns a {Seahorse::Client::Response response} object which responds to the following methods:
  #
  #   * {Types::GetLifecyclePolicyResponse#registry_id #registry_id} => String
  #   * {Types::GetLifecyclePolicyResponse#repository_name #repository_name} => String
  #   * {Types::GetLifecyclePolicyResponse#lifecycle_policy_text #lifecycle_policy_text} => String
  #   * {Types::GetLifecyclePolicyResponse#last_evaluated_at #last_evaluated_at} => Time
  # @see http://docs.aws.amazon.com/goto/WebAPI/ecr-2015-09-21/GetLifecyclePolicy AWS API Documentation
  #
  # source://aws-sdk-ecr//lib/aws-sdk-ecr/client.rb#1825
  def get_lifecycle_policy(params = T.unsafe(nil), options = T.unsafe(nil)); end

  # Retrieves the results of the lifecycle policy preview request for the
  # specified repository.
  #
  # The returned {Seahorse::Client::Response response} is a pageable response and is Enumerable. For details on usage see {Aws::PageableResponse PageableResponse}.
  #
  # The following waiters are defined for this operation (see {Client#wait_until} for detailed usage):
  #
  #   * lifecycle_policy_preview_complete
  #
  # @example Request syntax with placeholder values
  #
  #   resp = client.get_lifecycle_policy_preview({
  #   registry_id: "RegistryId",
  #   repository_name: "RepositoryName", # required
  #   image_ids: [
  #   {
  #   image_digest: "ImageDigest",
  #   image_tag: "ImageTag",
  #   },
  #   ],
  #   next_token: "NextToken",
  #   max_results: 1,
  #   filter: {
  #   tag_status: "TAGGED", # accepts TAGGED, UNTAGGED, ANY
  #   },
  #   })
  # @example Response structure
  #
  #   resp.registry_id #=> String
  #   resp.repository_name #=> String
  #   resp.lifecycle_policy_text #=> String
  #   resp.status #=> String, one of "IN_PROGRESS", "COMPLETE", "EXPIRED", "FAILED"
  #   resp.next_token #=> String
  #   resp.preview_results #=> Array
  #   resp.preview_results[0].image_tags #=> Array
  #   resp.preview_results[0].image_tags[0] #=> String
  #   resp.preview_results[0].image_digest #=> String
  #   resp.preview_results[0].image_pushed_at #=> Time
  #   resp.preview_results[0].action.type #=> String, one of "EXPIRE"
  #   resp.preview_results[0].applied_rule_priority #=> Integer
  #   resp.summary.expiring_image_total_count #=> Integer
  # @option params
  # @option params
  # @option params
  # @option params
  # @option params
  # @option params
  # @overload get_lifecycle_policy_preview
  # @param params [Hash] ({})
  # @return [Types::GetLifecyclePolicyPreviewResponse] Returns a {Seahorse::Client::Response response} object which responds to the following methods:
  #
  #   * {Types::GetLifecyclePolicyPreviewResponse#registry_id #registry_id} => String
  #   * {Types::GetLifecyclePolicyPreviewResponse#repository_name #repository_name} => String
  #   * {Types::GetLifecyclePolicyPreviewResponse#lifecycle_policy_text #lifecycle_policy_text} => String
  #   * {Types::GetLifecyclePolicyPreviewResponse#status #status} => String
  #   * {Types::GetLifecyclePolicyPreviewResponse#next_token #next_token} => String
  #   * {Types::GetLifecyclePolicyPreviewResponse#preview_results #preview_results} => Array&lt;Types::LifecyclePolicyPreviewResult&gt;
  #   * {Types::GetLifecyclePolicyPreviewResponse#summary #summary} => Types::LifecyclePolicyPreviewSummary
  # @see http://docs.aws.amazon.com/goto/WebAPI/ecr-2015-09-21/GetLifecyclePolicyPreview AWS API Documentation
  #
  # source://aws-sdk-ecr//lib/aws-sdk-ecr/client.rb#1925
  def get_lifecycle_policy_preview(params = T.unsafe(nil), options = T.unsafe(nil)); end

  # Retrieves the permissions policy for a registry.
  #
  # @example Response structure
  #
  #   resp.registry_id #=> String
  #   resp.policy_text #=> String
  # @overload get_registry_policy
  # @param params [Hash] ({})
  # @return [Types::GetRegistryPolicyResponse] Returns a {Seahorse::Client::Response response} object which responds to the following methods:
  #
  #   * {Types::GetRegistryPolicyResponse#registry_id #registry_id} => String
  #   * {Types::GetRegistryPolicyResponse#policy_text #policy_text} => String
  # @see http://docs.aws.amazon.com/goto/WebAPI/ecr-2015-09-21/GetRegistryPolicy AWS API Documentation
  #
  # source://aws-sdk-ecr//lib/aws-sdk-ecr/client.rb#1946
  def get_registry_policy(params = T.unsafe(nil), options = T.unsafe(nil)); end

  # Retrieves the scanning configuration for a registry.
  #
  # @example Response structure
  #
  #   resp.registry_id #=> String
  #   resp.scanning_configuration.scan_type #=> String, one of "BASIC", "ENHANCED"
  #   resp.scanning_configuration.rules #=> Array
  #   resp.scanning_configuration.rules[0].scan_frequency #=> String, one of "SCAN_ON_PUSH", "CONTINUOUS_SCAN", "MANUAL"
  #   resp.scanning_configuration.rules[0].repository_filters #=> Array
  #   resp.scanning_configuration.rules[0].repository_filters[0].filter #=> String
  #   resp.scanning_configuration.rules[0].repository_filters[0].filter_type #=> String, one of "WILDCARD"
  # @overload get_registry_scanning_configuration
  # @param params [Hash] ({})
  # @return [Types::GetRegistryScanningConfigurationResponse] Returns a {Seahorse::Client::Response response} object which responds to the following methods:
  #
  #   * {Types::GetRegistryScanningConfigurationResponse#registry_id #registry_id} => String
  #   * {Types::GetRegistryScanningConfigurationResponse#scanning_configuration #scanning_configuration} => Types::RegistryScanningConfiguration
  # @see http://docs.aws.amazon.com/goto/WebAPI/ecr-2015-09-21/GetRegistryScanningConfiguration AWS API Documentation
  #
  # source://aws-sdk-ecr//lib/aws-sdk-ecr/client.rb#1972
  def get_registry_scanning_configuration(params = T.unsafe(nil), options = T.unsafe(nil)); end

  # Retrieves the repository policy for the specified repository.
  #
  # @example Request syntax with placeholder values
  #
  #   resp = client.get_repository_policy({
  #   registry_id: "RegistryId",
  #   repository_name: "RepositoryName", # required
  #   })
  # @example Example: To get the current policy for a repository
  #
  #   # This example obtains the repository policy for the repository named ubuntu.
  #
  #   resp = client.get_repository_policy({
  #   repository_name: "ubuntu",
  #   })
  #
  #   resp.to_h outputs the following:
  #   {
  #   policy_text: "{\n  \"Version\" : \"2008-10-17\",\n  \"Statement\" : [ {\n    \"Sid\" : \"new statement\",\n    \"Effect\" : \"Allow\",\n    \"Principal\" : {\n     \"AWS\" : \"arn:aws:iam::012345678901:role/CodeDeployDemo\"\n    },\n\"Action\" : [ \"ecr:GetDownloadUrlForLayer\", \"ecr:BatchGetImage\", \"ecr:BatchCheckLayerAvailability\" ]\n } ]\n}",
  #   registry_id: "012345678901",
  #   repository_name: "ubuntu",
  #   }
  # @example Response structure
  #
  #   resp.registry_id #=> String
  #   resp.repository_name #=> String
  #   resp.policy_text #=> String
  # @option params
  # @option params
  # @overload get_repository_policy
  # @param params [Hash] ({})
  # @return [Types::GetRepositoryPolicyResponse] Returns a {Seahorse::Client::Response response} object which responds to the following methods:
  #
  #   * {Types::GetRepositoryPolicyResponse#registry_id #registry_id} => String
  #   * {Types::GetRepositoryPolicyResponse#repository_name #repository_name} => String
  #   * {Types::GetRepositoryPolicyResponse#policy_text #policy_text} => String
  # @see http://docs.aws.amazon.com/goto/WebAPI/ecr-2015-09-21/GetRepositoryPolicy AWS API Documentation
  #
  # source://aws-sdk-ecr//lib/aws-sdk-ecr/client.rb#2026
  def get_repository_policy(params = T.unsafe(nil), options = T.unsafe(nil)); end

  # Notifies Amazon ECR that you intend to upload an image layer.
  #
  # When an image is pushed, the InitiateLayerUpload API is called once
  # per image layer that has not already been uploaded. Whether or not an
  # image layer has been uploaded is determined by the
  # BatchCheckLayerAvailability API action.
  #
  # <note markdown="1"> This operation is used by the Amazon ECR proxy and is not generally
  # used by customers for pulling and pushing images. In most cases, you
  # should use the `docker` CLI to pull, tag, and push images.
  #
  #  </note>
  #
  # @example Request syntax with placeholder values
  #
  #   resp = client.initiate_layer_upload({
  #   registry_id: "RegistryId",
  #   repository_name: "RepositoryName", # required
  #   })
  # @example Response structure
  #
  #   resp.upload_id #=> String
  #   resp.part_size #=> Integer
  # @option params
  # @option params
  # @overload initiate_layer_upload
  # @param params [Hash] ({})
  # @return [Types::InitiateLayerUploadResponse] Returns a {Seahorse::Client::Response response} object which responds to the following methods:
  #
  #   * {Types::InitiateLayerUploadResponse#upload_id #upload_id} => String
  #   * {Types::InitiateLayerUploadResponse#part_size #part_size} => Integer
  # @see http://docs.aws.amazon.com/goto/WebAPI/ecr-2015-09-21/InitiateLayerUpload AWS API Documentation
  #
  # source://aws-sdk-ecr//lib/aws-sdk-ecr/client.rb#2073
  def initiate_layer_upload(params = T.unsafe(nil), options = T.unsafe(nil)); end

  # Lists all the image IDs for the specified repository.
  #
  # You can filter images based on whether or not they are tagged by using
  # the `tagStatus` filter and specifying either `TAGGED`, `UNTAGGED` or
  # `ANY`. For example, you can filter your results to return only
  # `UNTAGGED` images and then pipe that result to a BatchDeleteImage
  # operation to delete them. Or, you can filter your results to return
  # only `TAGGED` images to list all of the tags in your repository.
  #
  # The returned {Seahorse::Client::Response response} is a pageable response and is Enumerable. For details on usage see {Aws::PageableResponse PageableResponse}.
  #
  # @example Request syntax with placeholder values
  #
  #   resp = client.list_images({
  #   registry_id: "RegistryId",
  #   repository_name: "RepositoryName", # required
  #   next_token: "NextToken",
  #   max_results: 1,
  #   filter: {
  #   tag_status: "TAGGED", # accepts TAGGED, UNTAGGED, ANY
  #   },
  #   })
  # @example Example: To list all images in a repository
  #
  #   # This example lists all of the images in the repository named ubuntu in the default registry in the current account.
  #
  #   resp = client.list_images({
  #   repository_name: "ubuntu",
  #   })
  #
  #   resp.to_h outputs the following:
  #   {
  #   image_ids: [
  #   {
  #   image_digest: "sha256:764f63476bdff6d83a09ba2a818f0d35757063724a9ac3ba5019c56f74ebf42a",
  #   image_tag: "precise",
  #   },
  #   ],
  #   }
  # @example Response structure
  #
  #   resp.image_ids #=> Array
  #   resp.image_ids[0].image_digest #=> String
  #   resp.image_ids[0].image_tag #=> String
  #   resp.next_token #=> String
  # @option params
  # @option params
  # @option params
  # @option params
  # @option params
  # @overload list_images
  # @param params [Hash] ({})
  # @return [Types::ListImagesResponse] Returns a {Seahorse::Client::Response response} object which responds to the following methods:
  #
  #   * {Types::ListImagesResponse#image_ids #image_ids} => Array&lt;Types::ImageIdentifier&gt;
  #   * {Types::ListImagesResponse#next_token #next_token} => String
  # @see http://docs.aws.amazon.com/goto/WebAPI/ecr-2015-09-21/ListImages AWS API Documentation
  #
  # source://aws-sdk-ecr//lib/aws-sdk-ecr/client.rb#2171
  def list_images(params = T.unsafe(nil), options = T.unsafe(nil)); end

  # List the tags for an Amazon ECR resource.
  #
  # @example Request syntax with placeholder values
  #
  #   resp = client.list_tags_for_resource({
  #   resource_arn: "Arn", # required
  #   })
  # @example Response structure
  #
  #   resp.tags #=> Array
  #   resp.tags[0].key #=> String
  #   resp.tags[0].value #=> String
  # @option params
  # @overload list_tags_for_resource
  # @param params [Hash] ({})
  # @return [Types::ListTagsForResourceResponse] Returns a {Seahorse::Client::Response response} object which responds to the following methods:
  #
  #   * {Types::ListTagsForResourceResponse#tags #tags} => Array&lt;Types::Tag&gt;
  # @see http://docs.aws.amazon.com/goto/WebAPI/ecr-2015-09-21/ListTagsForResource AWS API Documentation
  #
  # source://aws-sdk-ecr//lib/aws-sdk-ecr/client.rb#2203
  def list_tags_for_resource(params = T.unsafe(nil), options = T.unsafe(nil)); end

  # Creates or updates the image manifest and tags associated with an
  # image.
  #
  # When an image is pushed and all new image layers have been uploaded,
  # the PutImage API is called once to create or update the image manifest
  # and the tags associated with the image.
  #
  # <note markdown="1"> This operation is used by the Amazon ECR proxy and is not generally
  # used by customers for pulling and pushing images. In most cases, you
  # should use the `docker` CLI to pull, tag, and push images.
  #
  #  </note>
  #
  # @example Request syntax with placeholder values
  #
  #   resp = client.put_image({
  #   registry_id: "RegistryId",
  #   repository_name: "RepositoryName", # required
  #   image_manifest: "ImageManifest", # required
  #   image_manifest_media_type: "MediaType",
  #   image_tag: "ImageTag",
  #   image_digest: "ImageDigest",
  #   })
  # @example Response structure
  #
  #   resp.image.registry_id #=> String
  #   resp.image.repository_name #=> String
  #   resp.image.image_id.image_digest #=> String
  #   resp.image.image_id.image_tag #=> String
  #   resp.image.image_manifest #=> String
  #   resp.image.image_manifest_media_type #=> String
  # @option params
  # @option params
  # @option params
  # @option params
  # @option params
  # @option params
  # @overload put_image
  # @param params [Hash] ({})
  # @return [Types::PutImageResponse] Returns a {Seahorse::Client::Response response} object which responds to the following methods:
  #
  #   * {Types::PutImageResponse#image #image} => Types::Image
  # @see http://docs.aws.amazon.com/goto/WebAPI/ecr-2015-09-21/PutImage AWS API Documentation
  #
  # source://aws-sdk-ecr//lib/aws-sdk-ecr/client.rb#2273
  def put_image(params = T.unsafe(nil), options = T.unsafe(nil)); end

  # The `PutImageScanningConfiguration` API is being deprecated, in favor
  # of specifying the image scanning configuration at the registry level.
  # For more information, see PutRegistryScanningConfiguration.
  #
  # Updates the image scanning configuration for the specified repository.
  #
  # @example Response structure
  #
  #   resp.registry_id #=> String
  #   resp.repository_name #=> String
  #   resp.image_scanning_configuration.scan_on_push #=> Boolean
  # @example Request syntax with placeholder values
  #
  #   resp = client.put_image_scanning_configuration({
  #   registry_id: "RegistryId",
  #   repository_name: "RepositoryName", # required
  #   image_scanning_configuration: { # required
  #   scan_on_push: false,
  #   },
  #   })
  # @option params
  # @option params
  # @option params
  # @overload put_image_scanning_configuration
  # @param params [Hash] ({})
  # @return [Types::PutImageScanningConfigurationResponse] Returns a {Seahorse::Client::Response response} object which responds to the following methods:
  #
  #   * {Types::PutImageScanningConfigurationResponse#registry_id #registry_id} => String
  #   * {Types::PutImageScanningConfigurationResponse#repository_name #repository_name} => String
  #   * {Types::PutImageScanningConfigurationResponse#image_scanning_configuration #image_scanning_configuration} => Types::ImageScanningConfiguration
  # @see http://docs.aws.amazon.com/goto/WebAPI/ecr-2015-09-21/PutImageScanningConfiguration AWS API Documentation
  #
  # source://aws-sdk-ecr//lib/aws-sdk-ecr/client.rb#2325
  def put_image_scanning_configuration(params = T.unsafe(nil), options = T.unsafe(nil)); end

  # Updates the image tag mutability settings for the specified
  # repository. For more information, see [Image tag mutability][1] in the
  # *Amazon Elastic Container Registry User Guide*.
  #
  #
  #
  # [1]: https://docs.aws.amazon.com/AmazonECR/latest/userguide/image-tag-mutability.html
  #
  # @example Response structure
  #
  #   resp.registry_id #=> String
  #   resp.repository_name #=> String
  #   resp.image_tag_mutability #=> String, one of "MUTABLE", "IMMUTABLE"
  # @example Request syntax with placeholder values
  #
  #   resp = client.put_image_tag_mutability({
  #   registry_id: "RegistryId",
  #   repository_name: "RepositoryName", # required
  #   image_tag_mutability: "MUTABLE", # required, accepts MUTABLE, IMMUTABLE
  #   })
  # @option params
  # @option params
  # @option params
  # @overload put_image_tag_mutability
  # @param params [Hash] ({})
  # @return [Types::PutImageTagMutabilityResponse] Returns a {Seahorse::Client::Response response} object which responds to the following methods:
  #
  #   * {Types::PutImageTagMutabilityResponse#registry_id #registry_id} => String
  #   * {Types::PutImageTagMutabilityResponse#repository_name #repository_name} => String
  #   * {Types::PutImageTagMutabilityResponse#image_tag_mutability #image_tag_mutability} => String
  # @see http://docs.aws.amazon.com/goto/WebAPI/ecr-2015-09-21/PutImageTagMutability AWS API Documentation
  #
  # source://aws-sdk-ecr//lib/aws-sdk-ecr/client.rb#2378
  def put_image_tag_mutability(params = T.unsafe(nil), options = T.unsafe(nil)); end

  # Creates or updates the lifecycle policy for the specified repository.
  # For more information, see [Lifecycle policy template][1].
  #
  #
  #
  # [1]: https://docs.aws.amazon.com/AmazonECR/latest/userguide/LifecyclePolicies.html
  #
  # @example Response structure
  #
  #   resp.registry_id #=> String
  #   resp.repository_name #=> String
  #   resp.lifecycle_policy_text #=> String
  # @example Request syntax with placeholder values
  #
  #   resp = client.put_lifecycle_policy({
  #   registry_id: "RegistryId",
  #   repository_name: "RepositoryName", # required
  #   lifecycle_policy_text: "LifecyclePolicyText", # required
  #   })
  # @option params
  # @option params
  # @option params
  # @overload put_lifecycle_policy
  # @param params [Hash] ({})
  # @return [Types::PutLifecyclePolicyResponse] Returns a {Seahorse::Client::Response response} object which responds to the following methods:
  #
  #   * {Types::PutLifecyclePolicyResponse#registry_id #registry_id} => String
  #   * {Types::PutLifecyclePolicyResponse#repository_name #repository_name} => String
  #   * {Types::PutLifecyclePolicyResponse#lifecycle_policy_text #lifecycle_policy_text} => String
  # @see http://docs.aws.amazon.com/goto/WebAPI/ecr-2015-09-21/PutLifecyclePolicy AWS API Documentation
  #
  # source://aws-sdk-ecr//lib/aws-sdk-ecr/client.rb#2425
  def put_lifecycle_policy(params = T.unsafe(nil), options = T.unsafe(nil)); end

  # Creates or updates the permissions policy for your registry.
  #
  # A registry policy is used to specify permissions for another Amazon
  # Web Services account and is used when configuring cross-account
  # replication. For more information, see [Registry permissions][1] in
  # the *Amazon Elastic Container Registry User Guide*.
  #
  #
  #
  # [1]: https://docs.aws.amazon.com/AmazonECR/latest/userguide/registry-permissions.html
  #
  # @example Request syntax with placeholder values
  #
  #   resp = client.put_registry_policy({
  #   policy_text: "RegistryPolicyText", # required
  #   })
  # @example Response structure
  #
  #   resp.registry_id #=> String
  #   resp.policy_text #=> String
  # @option params
  # @overload put_registry_policy
  # @param params [Hash] ({})
  # @return [Types::PutRegistryPolicyResponse] Returns a {Seahorse::Client::Response response} object which responds to the following methods:
  #
  #   * {Types::PutRegistryPolicyResponse#registry_id #registry_id} => String
  #   * {Types::PutRegistryPolicyResponse#policy_text #policy_text} => String
  # @see http://docs.aws.amazon.com/goto/WebAPI/ecr-2015-09-21/PutRegistryPolicy AWS API Documentation
  #
  # source://aws-sdk-ecr//lib/aws-sdk-ecr/client.rb#2471
  def put_registry_policy(params = T.unsafe(nil), options = T.unsafe(nil)); end

  # Creates or updates the scanning configuration for your private
  # registry.
  #
  # @example Request syntax with placeholder values
  #
  #   resp = client.put_registry_scanning_configuration({
  #   scan_type: "BASIC", # accepts BASIC, ENHANCED
  #   rules: [
  #   {
  #   scan_frequency: "SCAN_ON_PUSH", # required, accepts SCAN_ON_PUSH, CONTINUOUS_SCAN, MANUAL
  #   repository_filters: [ # required
  #   {
  #   filter: "ScanningRepositoryFilterValue", # required
  #   filter_type: "WILDCARD", # required, accepts WILDCARD
  #   },
  #   ],
  #   },
  #   ],
  #   })
  # @example Response structure
  #
  #   resp.registry_scanning_configuration.scan_type #=> String, one of "BASIC", "ENHANCED"
  #   resp.registry_scanning_configuration.rules #=> Array
  #   resp.registry_scanning_configuration.rules[0].scan_frequency #=> String, one of "SCAN_ON_PUSH", "CONTINUOUS_SCAN", "MANUAL"
  #   resp.registry_scanning_configuration.rules[0].repository_filters #=> Array
  #   resp.registry_scanning_configuration.rules[0].repository_filters[0].filter #=> String
  #   resp.registry_scanning_configuration.rules[0].repository_filters[0].filter_type #=> String, one of "WILDCARD"
  # @option params
  # @option params
  # @overload put_registry_scanning_configuration
  # @param params [Hash] ({})
  # @return [Types::PutRegistryScanningConfigurationResponse] Returns a {Seahorse::Client::Response response} object which responds to the following methods:
  #
  #   * {Types::PutRegistryScanningConfigurationResponse#registry_scanning_configuration #registry_scanning_configuration} => Types::RegistryScanningConfiguration
  # @see http://docs.aws.amazon.com/goto/WebAPI/ecr-2015-09-21/PutRegistryScanningConfiguration AWS API Documentation
  #
  # source://aws-sdk-ecr//lib/aws-sdk-ecr/client.rb#2533
  def put_registry_scanning_configuration(params = T.unsafe(nil), options = T.unsafe(nil)); end

  # Creates or updates the replication configuration for a registry. The
  # existing replication configuration for a repository can be retrieved
  # with the DescribeRegistry API action. The first time the
  # PutReplicationConfiguration API is called, a service-linked IAM role
  # is created in your account for the replication process. For more
  # information, see [Using service-linked roles for Amazon ECR][1] in the
  # *Amazon Elastic Container Registry User Guide*.
  #
  # <note markdown="1"> When configuring cross-account replication, the destination account
  # must grant the source account permission to replicate. This permission
  # is controlled using a registry permissions policy. For more
  # information, see PutRegistryPolicy.
  #
  #  </note>
  #
  #
  #
  # [1]: https://docs.aws.amazon.com/AmazonECR/latest/userguide/using-service-linked-roles.html
  #
  # @example Request syntax with placeholder values
  #
  #   resp = client.put_replication_configuration({
  #   replication_configuration: { # required
  #   rules: [ # required
  #   {
  #   destinations: [ # required
  #   {
  #   region: "Region", # required
  #   registry_id: "RegistryId", # required
  #   },
  #   ],
  #   repository_filters: [
  #   {
  #   filter: "RepositoryFilterValue", # required
  #   filter_type: "PREFIX_MATCH", # required, accepts PREFIX_MATCH
  #   },
  #   ],
  #   },
  #   ],
  #   },
  #   })
  # @example Response structure
  #
  #   resp.replication_configuration.rules #=> Array
  #   resp.replication_configuration.rules[0].destinations #=> Array
  #   resp.replication_configuration.rules[0].destinations[0].region #=> String
  #   resp.replication_configuration.rules[0].destinations[0].registry_id #=> String
  #   resp.replication_configuration.rules[0].repository_filters #=> Array
  #   resp.replication_configuration.rules[0].repository_filters[0].filter #=> String
  #   resp.replication_configuration.rules[0].repository_filters[0].filter_type #=> String, one of "PREFIX_MATCH"
  # @option params
  # @overload put_replication_configuration
  # @param params [Hash] ({})
  # @return [Types::PutReplicationConfigurationResponse] Returns a {Seahorse::Client::Response response} object which responds to the following methods:
  #
  #   * {Types::PutReplicationConfigurationResponse#replication_configuration #replication_configuration} => Types::ReplicationConfiguration
  # @see http://docs.aws.amazon.com/goto/WebAPI/ecr-2015-09-21/PutReplicationConfiguration AWS API Documentation
  #
  # source://aws-sdk-ecr//lib/aws-sdk-ecr/client.rb#2601
  def put_replication_configuration(params = T.unsafe(nil), options = T.unsafe(nil)); end

  # Applies a repository policy to the specified repository to control
  # access permissions. For more information, see [Amazon ECR Repository
  # policies][1] in the *Amazon Elastic Container Registry User Guide*.
  #
  #
  #
  # [1]: https://docs.aws.amazon.com/AmazonECR/latest/userguide/repository-policies.html
  #
  # @example Response structure
  #
  #   resp.registry_id #=> String
  #   resp.repository_name #=> String
  #   resp.policy_text #=> String
  # @example Request syntax with placeholder values
  #
  #   resp = client.set_repository_policy({
  #   registry_id: "RegistryId",
  #   repository_name: "RepositoryName", # required
  #   policy_text: "RepositoryPolicyText", # required
  #   force: false,
  #   })
  # @option params
  # @option params
  # @option params
  # @option params
  # @overload set_repository_policy
  # @param params [Hash] ({})
  # @return [Types::SetRepositoryPolicyResponse] Returns a {Seahorse::Client::Response response} object which responds to the following methods:
  #
  #   * {Types::SetRepositoryPolicyResponse#registry_id #registry_id} => String
  #   * {Types::SetRepositoryPolicyResponse#repository_name #repository_name} => String
  #   * {Types::SetRepositoryPolicyResponse#policy_text #policy_text} => String
  # @see http://docs.aws.amazon.com/goto/WebAPI/ecr-2015-09-21/SetRepositoryPolicy AWS API Documentation
  #
  # source://aws-sdk-ecr//lib/aws-sdk-ecr/client.rb#2662
  def set_repository_policy(params = T.unsafe(nil), options = T.unsafe(nil)); end

  # Starts an image vulnerability scan. An image scan can only be started
  # once per 24 hours on an individual image. This limit includes if an
  # image was scanned on initial push. For more information, see [Image
  # scanning][1] in the *Amazon Elastic Container Registry User Guide*.
  #
  #
  #
  # [1]: https://docs.aws.amazon.com/AmazonECR/latest/userguide/image-scanning.html
  #
  # @example Response structure
  #
  #   resp.registry_id #=> String
  #   resp.repository_name #=> String
  #   resp.image_id.image_digest #=> String
  #   resp.image_id.image_tag #=> String
  #   resp.image_scan_status.status #=> String, one of "IN_PROGRESS", "COMPLETE", "FAILED", "UNSUPPORTED_IMAGE", "ACTIVE", "PENDING", "SCAN_ELIGIBILITY_EXPIRED", "FINDINGS_UNAVAILABLE"
  #   resp.image_scan_status.description #=> String
  # @example Request syntax with placeholder values
  #
  #   resp = client.start_image_scan({
  #   registry_id: "RegistryId",
  #   repository_name: "RepositoryName", # required
  #   image_id: { # required
  #   image_digest: "ImageDigest",
  #   image_tag: "ImageTag",
  #   },
  #   })
  # @option params
  # @option params
  # @option params
  # @overload start_image_scan
  # @param params [Hash] ({})
  # @return [Types::StartImageScanResponse] Returns a {Seahorse::Client::Response response} object which responds to the following methods:
  #
  #   * {Types::StartImageScanResponse#registry_id #registry_id} => String
  #   * {Types::StartImageScanResponse#repository_name #repository_name} => String
  #   * {Types::StartImageScanResponse#image_id #image_id} => Types::ImageIdentifier
  #   * {Types::StartImageScanResponse#image_scan_status #image_scan_status} => Types::ImageScanStatus
  # @see http://docs.aws.amazon.com/goto/WebAPI/ecr-2015-09-21/StartImageScan AWS API Documentation
  #
  # source://aws-sdk-ecr//lib/aws-sdk-ecr/client.rb#2719
  def start_image_scan(params = T.unsafe(nil), options = T.unsafe(nil)); end

  # Starts a preview of a lifecycle policy for the specified repository.
  # This allows you to see the results before associating the lifecycle
  # policy with the repository.
  #
  # @example Response structure
  #
  #   resp.registry_id #=> String
  #   resp.repository_name #=> String
  #   resp.lifecycle_policy_text #=> String
  #   resp.status #=> String, one of "IN_PROGRESS", "COMPLETE", "EXPIRED", "FAILED"
  # @example Request syntax with placeholder values
  #
  #   resp = client.start_lifecycle_policy_preview({
  #   registry_id: "RegistryId",
  #   repository_name: "RepositoryName", # required
  #   lifecycle_policy_text: "LifecyclePolicyText",
  #   })
  # @option params
  # @option params
  # @option params
  # @overload start_lifecycle_policy_preview
  # @param params [Hash] ({})
  # @return [Types::StartLifecyclePolicyPreviewResponse] Returns a {Seahorse::Client::Response response} object which responds to the following methods:
  #
  #   * {Types::StartLifecyclePolicyPreviewResponse#registry_id #registry_id} => String
  #   * {Types::StartLifecyclePolicyPreviewResponse#repository_name #repository_name} => String
  #   * {Types::StartLifecyclePolicyPreviewResponse#lifecycle_policy_text #lifecycle_policy_text} => String
  #   * {Types::StartLifecyclePolicyPreviewResponse#status #status} => String
  # @see http://docs.aws.amazon.com/goto/WebAPI/ecr-2015-09-21/StartLifecyclePolicyPreview AWS API Documentation
  #
  # source://aws-sdk-ecr//lib/aws-sdk-ecr/client.rb#2766
  def start_lifecycle_policy_preview(params = T.unsafe(nil), options = T.unsafe(nil)); end

  # Adds specified tags to a resource with the specified ARN. Existing
  # tags on a resource are not changed if they are not specified in the
  # request parameters.
  #
  # @example Request syntax with placeholder values
  #
  #   resp = client.tag_resource({
  #   resource_arn: "Arn", # required
  #   tags: [ # required
  #   {
  #   key: "TagKey", # required
  #   value: "TagValue", # required
  #   },
  #   ],
  #   })
  # @option params
  # @option params
  # @overload tag_resource
  # @param params [Hash] ({})
  # @return [Struct] Returns an empty {Seahorse::Client::Response response}.
  # @see http://docs.aws.amazon.com/goto/WebAPI/ecr-2015-09-21/TagResource AWS API Documentation
  #
  # source://aws-sdk-ecr//lib/aws-sdk-ecr/client.rb#2803
  def tag_resource(params = T.unsafe(nil), options = T.unsafe(nil)); end

  # Deletes specified tags from a resource.
  #
  # @example Request syntax with placeholder values
  #
  #   resp = client.untag_resource({
  #   resource_arn: "Arn", # required
  #   tag_keys: ["TagKey"], # required
  #   })
  # @option params
  # @option params
  # @overload untag_resource
  # @param params [Hash] ({})
  # @return [Struct] Returns an empty {Seahorse::Client::Response response}.
  # @see http://docs.aws.amazon.com/goto/WebAPI/ecr-2015-09-21/UntagResource AWS API Documentation
  #
  # source://aws-sdk-ecr//lib/aws-sdk-ecr/client.rb#2831
  def untag_resource(params = T.unsafe(nil), options = T.unsafe(nil)); end

  # Updates an existing pull through cache rule.
  #
  # @example Response structure
  #
  #   resp.ecr_repository_prefix #=> String
  #   resp.registry_id #=> String
  #   resp.updated_at #=> Time
  #   resp.credential_arn #=> String
  # @example Request syntax with placeholder values
  #
  #   resp = client.update_pull_through_cache_rule({
  #   registry_id: "RegistryId",
  #   ecr_repository_prefix: "PullThroughCacheRuleRepositoryPrefix", # required
  #   credential_arn: "CredentialArn", # required
  #   })
  # @option params
  # @option params
  # @option params
  # @overload update_pull_through_cache_rule
  # @param params [Hash] ({})
  # @return [Types::UpdatePullThroughCacheRuleResponse] Returns a {Seahorse::Client::Response response} object which responds to the following methods:
  #
  #   * {Types::UpdatePullThroughCacheRuleResponse#ecr_repository_prefix #ecr_repository_prefix} => String
  #   * {Types::UpdatePullThroughCacheRuleResponse#registry_id #registry_id} => String
  #   * {Types::UpdatePullThroughCacheRuleResponse#updated_at #updated_at} => Time
  #   * {Types::UpdatePullThroughCacheRuleResponse#credential_arn #credential_arn} => String
  # @see http://docs.aws.amazon.com/goto/WebAPI/ecr-2015-09-21/UpdatePullThroughCacheRule AWS API Documentation
  #
  # source://aws-sdk-ecr//lib/aws-sdk-ecr/client.rb#2878
  def update_pull_through_cache_rule(params = T.unsafe(nil), options = T.unsafe(nil)); end

  # Uploads an image layer part to Amazon ECR.
  #
  # When an image is pushed, each new image layer is uploaded in parts.
  # The maximum size of each image layer part can be 20971520 bytes (or
  # about 20MB). The UploadLayerPart API is called once per each new image
  # layer part.
  #
  # <note markdown="1"> This operation is used by the Amazon ECR proxy and is not generally
  # used by customers for pulling and pushing images. In most cases, you
  # should use the `docker` CLI to pull, tag, and push images.
  #
  #  </note>
  #
  # @example Request syntax with placeholder values
  #
  #   resp = client.upload_layer_part({
  #   registry_id: "RegistryId",
  #   repository_name: "RepositoryName", # required
  #   upload_id: "UploadId", # required
  #   part_first_byte: 1, # required
  #   part_last_byte: 1, # required
  #   layer_part_blob: "data", # required
  #   })
  # @example Response structure
  #
  #   resp.registry_id #=> String
  #   resp.repository_name #=> String
  #   resp.upload_id #=> String
  #   resp.last_byte_received #=> Integer
  # @option params
  # @option params
  # @option params
  # @option params
  # @option params
  # @option params
  # @overload upload_layer_part
  # @param params [Hash] ({})
  # @return [Types::UploadLayerPartResponse] Returns a {Seahorse::Client::Response response} object which responds to the following methods:
  #
  #   * {Types::UploadLayerPartResponse#registry_id #registry_id} => String
  #   * {Types::UploadLayerPartResponse#repository_name #repository_name} => String
  #   * {Types::UploadLayerPartResponse#upload_id #upload_id} => String
  #   * {Types::UploadLayerPartResponse#last_byte_received #last_byte_received} => Integer
  # @see http://docs.aws.amazon.com/goto/WebAPI/ecr-2015-09-21/UploadLayerPart AWS API Documentation
  #
  # source://aws-sdk-ecr//lib/aws-sdk-ecr/client.rb#2948
  def upload_layer_part(params = T.unsafe(nil), options = T.unsafe(nil)); end

  # Validates an existing pull through cache rule for an upstream registry
  # that requires authentication. This will retrieve the contents of the
  # Amazon Web Services Secrets Manager secret, verify the syntax, and
  # then validate that authentication to the upstream registry is
  # successful.
  #
  # @example Request syntax with placeholder values
  #
  #   resp = client.validate_pull_through_cache_rule({
  #   ecr_repository_prefix: "PullThroughCacheRuleRepositoryPrefix", # required
  #   registry_id: "RegistryId",
  #   })
  # @example Response structure
  #
  #   resp.ecr_repository_prefix #=> String
  #   resp.registry_id #=> String
  #   resp.upstream_registry_url #=> String
  #   resp.credential_arn #=> String
  #   resp.is_valid #=> Boolean
  #   resp.failure #=> String
  # @option params
  # @option params
  # @overload validate_pull_through_cache_rule
  # @param params [Hash] ({})
  # @return [Types::ValidatePullThroughCacheRuleResponse] Returns a {Seahorse::Client::Response response} object which responds to the following methods:
  #
  #   * {Types::ValidatePullThroughCacheRuleResponse#ecr_repository_prefix #ecr_repository_prefix} => String
  #   * {Types::ValidatePullThroughCacheRuleResponse#registry_id #registry_id} => String
  #   * {Types::ValidatePullThroughCacheRuleResponse#upstream_registry_url #upstream_registry_url} => String
  #   * {Types::ValidatePullThroughCacheRuleResponse#credential_arn #credential_arn} => String
  #   * {Types::ValidatePullThroughCacheRuleResponse#is_valid #is_valid} => Boolean
  #   * {Types::ValidatePullThroughCacheRuleResponse#failure #failure} => String
  # @see http://docs.aws.amazon.com/goto/WebAPI/ecr-2015-09-21/ValidatePullThroughCacheRule AWS API Documentation
  #
  # source://aws-sdk-ecr//lib/aws-sdk-ecr/client.rb#2996
  def validate_pull_through_cache_rule(params = T.unsafe(nil), options = T.unsafe(nil)); end

  # Polls an API operation until a resource enters a desired state.
  #
  # ## Basic Usage
  #
  # A waiter will call an API operation until:
  #
  # * It is successful
  # * It enters a terminal state
  # * It makes the maximum number of attempts
  #
  # In between attempts, the waiter will sleep.
  #
  #     # polls in a loop, sleeping between attempts
  #     client.wait_until(waiter_name, params)
  #
  # ## Configuration
  #
  # You can configure the maximum number of polling attempts, and the
  # delay (in seconds) between each polling attempt. You can pass
  # configuration as the final arguments hash.
  #
  #     # poll for ~25 seconds
  #     client.wait_until(waiter_name, params, {
  #       max_attempts: 5,
  #       delay: 5,
  #     })
  #
  # ## Callbacks
  #
  # You can be notified before each polling attempt and before each
  # delay. If you throw `:success` or `:failure` from these callbacks,
  # it will terminate the waiter.
  #
  #     started_at = Time.now
  #     client.wait_until(waiter_name, params, {
  #
  #       # disable max attempts
  #       max_attempts: nil,
  #
  #       # poll for 1 hour, instead of a number of attempts
  #       before_wait: -> (attempts, response) do
  #         throw :failure if Time.now - started_at > 3600
  #       end
  #     })
  #
  # ## Handling Errors
  #
  # When a waiter is unsuccessful, it will raise an error.
  # All of the failure errors extend from
  # {Aws::Waiters::Errors::WaiterFailed}.
  #
  #     begin
  #       client.wait_until(...)
  #     rescue Aws::Waiters::Errors::WaiterFailed
  #       # resource did not enter the desired state in time
  #     end
  #
  # ## Valid Waiters
  #
  # The following table lists the valid waiter names, the operations they call,
  # and the default `:delay` and `:max_attempts` values.
  #
  # | waiter_name                       | params                                | :delay   | :max_attempts |
  # | --------------------------------- | ------------------------------------- | -------- | ------------- |
  # | image_scan_complete               | {Client#describe_image_scan_findings} | 5        | 60            |
  # | lifecycle_policy_preview_complete | {Client#get_lifecycle_policy_preview} | 5        | 20            |
  #
  # @option options
  # @option options
  # @option options
  # @option options
  # @param options [Hash] ({})
  # @param waiter_name [Symbol]
  # @param params [Hash] ({})
  # @raise [Errors::FailureStateError] Raised when the waiter terminates
  #   because the waiter has entered a state that it will not transition
  #   out of, preventing success.
  # @raise [Errors::TooManyAttemptsError] Raised when the configured
  #   maximum number of attempts have been made, and the waiter is not
  #   yet successful.
  # @raise [Errors::UnexpectedError] Raised when an error is encounted
  #   while polling for a resource that is not expected.
  # @raise [Errors::NoSuchWaiterError] Raised when you request to wait
  #   for an unknown state.
  # @return [Boolean] Returns `true` if the waiter was successful.
  # @yield [w.waiter]
  #
  # source://aws-sdk-ecr//lib/aws-sdk-ecr/client.rb#3107
  def wait_until(waiter_name, params = T.unsafe(nil), options = T.unsafe(nil)); end

  # @api private
  # @deprecated
  #
  # source://aws-sdk-ecr//lib/aws-sdk-ecr/client.rb#3115
  def waiter_names; end

  private

  # @param waiter_name [Symbol]
  # @param options [Hash] ({})
  #
  # source://aws-sdk-ecr//lib/aws-sdk-ecr/client.rb#3123
  def waiter(waiter_name, options = T.unsafe(nil)); end

  # source://aws-sdk-ecr//lib/aws-sdk-ecr/client.rb#3132
  def waiters; end

  class << self
    # @api private
    #
    # source://aws-sdk-ecr//lib/aws-sdk-ecr/client.rb#3145
    def errors_module; end

    # @api private
    #
    # source://aws-sdk-ecr//lib/aws-sdk-ecr/client.rb#3142
    def identifier; end
  end
end

# @api private
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/client_api.rb#12
module Aws::ECR::ClientApi
  include ::Seahorse::Model
end

# @api private
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/client_api.rb#1194
Aws::ECR::ClientApi::API = T.let(T.unsafe(nil), Seahorse::Model::Api)

# @api private
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/client_api.rb#16
Aws::ECR::ClientApi::Arch = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StringShape)

# @api private
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/client_api.rb#17
Aws::ECR::ClientApi::Arn = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StringShape)

# @api private
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/client_api.rb#18
Aws::ECR::ClientApi::Attribute = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/client_api.rb#19
Aws::ECR::ClientApi::AttributeKey = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StringShape)

# @api private
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/client_api.rb#20
Aws::ECR::ClientApi::AttributeList = T.let(T.unsafe(nil), Seahorse::Model::Shapes::ListShape)

# @api private
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/client_api.rb#21
Aws::ECR::ClientApi::AttributeValue = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StringShape)

# @api private
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/client_api.rb#22
Aws::ECR::ClientApi::Author = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StringShape)

# @api private
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/client_api.rb#23
Aws::ECR::ClientApi::AuthorizationData = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/client_api.rb#24
Aws::ECR::ClientApi::AuthorizationDataList = T.let(T.unsafe(nil), Seahorse::Model::Shapes::ListShape)

# @api private
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/client_api.rb#25
Aws::ECR::ClientApi::AwsEcrContainerImageDetails = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/client_api.rb#26
Aws::ECR::ClientApi::Base64 = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StringShape)

# @api private
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/client_api.rb#27
Aws::ECR::ClientApi::BaseScore = T.let(T.unsafe(nil), Seahorse::Model::Shapes::FloatShape)

# @api private
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/client_api.rb#28
Aws::ECR::ClientApi::BatchCheckLayerAvailabilityRequest = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/client_api.rb#29
Aws::ECR::ClientApi::BatchCheckLayerAvailabilityResponse = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/client_api.rb#30
Aws::ECR::ClientApi::BatchDeleteImageRequest = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/client_api.rb#31
Aws::ECR::ClientApi::BatchDeleteImageResponse = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/client_api.rb#32
Aws::ECR::ClientApi::BatchGetImageRequest = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/client_api.rb#33
Aws::ECR::ClientApi::BatchGetImageResponse = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/client_api.rb#34
Aws::ECR::ClientApi::BatchGetRepositoryScanningConfigurationRequest = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/client_api.rb#35
Aws::ECR::ClientApi::BatchGetRepositoryScanningConfigurationResponse = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/client_api.rb#36
Aws::ECR::ClientApi::BatchedOperationLayerDigest = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StringShape)

# @api private
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/client_api.rb#37
Aws::ECR::ClientApi::BatchedOperationLayerDigestList = T.let(T.unsafe(nil), Seahorse::Model::Shapes::ListShape)

# @api private
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/client_api.rb#38
Aws::ECR::ClientApi::CompleteLayerUploadRequest = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/client_api.rb#39
Aws::ECR::ClientApi::CompleteLayerUploadResponse = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/client_api.rb#40
Aws::ECR::ClientApi::CreatePullThroughCacheRuleRequest = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/client_api.rb#41
Aws::ECR::ClientApi::CreatePullThroughCacheRuleResponse = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/client_api.rb#42
Aws::ECR::ClientApi::CreateRepositoryRequest = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/client_api.rb#43
Aws::ECR::ClientApi::CreateRepositoryResponse = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/client_api.rb#44
Aws::ECR::ClientApi::CreationTimestamp = T.let(T.unsafe(nil), Seahorse::Model::Shapes::TimestampShape)

# @api private
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/client_api.rb#45
Aws::ECR::ClientApi::CredentialArn = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StringShape)

# @api private
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/client_api.rb#46
Aws::ECR::ClientApi::CvssScore = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/client_api.rb#47
Aws::ECR::ClientApi::CvssScoreAdjustment = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/client_api.rb#48
Aws::ECR::ClientApi::CvssScoreAdjustmentList = T.let(T.unsafe(nil), Seahorse::Model::Shapes::ListShape)

# @api private
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/client_api.rb#49
Aws::ECR::ClientApi::CvssScoreDetails = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/client_api.rb#50
Aws::ECR::ClientApi::CvssScoreList = T.let(T.unsafe(nil), Seahorse::Model::Shapes::ListShape)

# @api private
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/client_api.rb#51
Aws::ECR::ClientApi::Date = T.let(T.unsafe(nil), Seahorse::Model::Shapes::TimestampShape)

# @api private
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/client_api.rb#52
Aws::ECR::ClientApi::DeleteLifecyclePolicyRequest = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/client_api.rb#53
Aws::ECR::ClientApi::DeleteLifecyclePolicyResponse = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/client_api.rb#54
Aws::ECR::ClientApi::DeletePullThroughCacheRuleRequest = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/client_api.rb#55
Aws::ECR::ClientApi::DeletePullThroughCacheRuleResponse = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/client_api.rb#56
Aws::ECR::ClientApi::DeleteRegistryPolicyRequest = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/client_api.rb#57
Aws::ECR::ClientApi::DeleteRegistryPolicyResponse = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/client_api.rb#58
Aws::ECR::ClientApi::DeleteRepositoryPolicyRequest = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/client_api.rb#59
Aws::ECR::ClientApi::DeleteRepositoryPolicyResponse = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/client_api.rb#60
Aws::ECR::ClientApi::DeleteRepositoryRequest = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/client_api.rb#61
Aws::ECR::ClientApi::DeleteRepositoryResponse = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/client_api.rb#62
Aws::ECR::ClientApi::DescribeImageReplicationStatusRequest = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/client_api.rb#63
Aws::ECR::ClientApi::DescribeImageReplicationStatusResponse = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/client_api.rb#64
Aws::ECR::ClientApi::DescribeImageScanFindingsRequest = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/client_api.rb#65
Aws::ECR::ClientApi::DescribeImageScanFindingsResponse = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/client_api.rb#66
Aws::ECR::ClientApi::DescribeImagesFilter = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/client_api.rb#67
Aws::ECR::ClientApi::DescribeImagesRequest = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/client_api.rb#68
Aws::ECR::ClientApi::DescribeImagesResponse = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/client_api.rb#69
Aws::ECR::ClientApi::DescribePullThroughCacheRulesRequest = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/client_api.rb#70
Aws::ECR::ClientApi::DescribePullThroughCacheRulesResponse = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/client_api.rb#71
Aws::ECR::ClientApi::DescribeRegistryRequest = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/client_api.rb#72
Aws::ECR::ClientApi::DescribeRegistryResponse = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/client_api.rb#73
Aws::ECR::ClientApi::DescribeRepositoriesRequest = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/client_api.rb#74
Aws::ECR::ClientApi::DescribeRepositoriesResponse = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/client_api.rb#75
Aws::ECR::ClientApi::EmptyUploadException = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/client_api.rb#76
Aws::ECR::ClientApi::EncryptionConfiguration = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/client_api.rb#77
Aws::ECR::ClientApi::EncryptionType = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StringShape)

# @api private
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/client_api.rb#78
Aws::ECR::ClientApi::EnhancedImageScanFinding = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/client_api.rb#79
Aws::ECR::ClientApi::EnhancedImageScanFindingList = T.let(T.unsafe(nil), Seahorse::Model::Shapes::ListShape)

# @api private
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/client_api.rb#80
Aws::ECR::ClientApi::Epoch = T.let(T.unsafe(nil), Seahorse::Model::Shapes::IntegerShape)

# @api private
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/client_api.rb#81
Aws::ECR::ClientApi::EvaluationTimestamp = T.let(T.unsafe(nil), Seahorse::Model::Shapes::TimestampShape)

# @api private
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/client_api.rb#82
Aws::ECR::ClientApi::ExceptionMessage = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StringShape)

# @api private
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/client_api.rb#83
Aws::ECR::ClientApi::ExpirationTimestamp = T.let(T.unsafe(nil), Seahorse::Model::Shapes::TimestampShape)

# @api private
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/client_api.rb#84
Aws::ECR::ClientApi::FilePath = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StringShape)

# @api private
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/client_api.rb#85
Aws::ECR::ClientApi::FindingArn = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StringShape)

# @api private
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/client_api.rb#86
Aws::ECR::ClientApi::FindingDescription = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StringShape)

# @api private
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/client_api.rb#87
Aws::ECR::ClientApi::FindingName = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StringShape)

# @api private
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/client_api.rb#88
Aws::ECR::ClientApi::FindingSeverity = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StringShape)

# @api private
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/client_api.rb#89
Aws::ECR::ClientApi::FindingSeverityCounts = T.let(T.unsafe(nil), Seahorse::Model::Shapes::MapShape)

# @api private
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/client_api.rb#90
Aws::ECR::ClientApi::ForceFlag = T.let(T.unsafe(nil), Seahorse::Model::Shapes::BooleanShape)

# @api private
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/client_api.rb#91
Aws::ECR::ClientApi::GetAuthorizationTokenRegistryIdList = T.let(T.unsafe(nil), Seahorse::Model::Shapes::ListShape)

# @api private
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/client_api.rb#92
Aws::ECR::ClientApi::GetAuthorizationTokenRequest = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/client_api.rb#93
Aws::ECR::ClientApi::GetAuthorizationTokenResponse = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/client_api.rb#94
Aws::ECR::ClientApi::GetDownloadUrlForLayerRequest = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/client_api.rb#95
Aws::ECR::ClientApi::GetDownloadUrlForLayerResponse = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/client_api.rb#96
Aws::ECR::ClientApi::GetLifecyclePolicyPreviewRequest = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/client_api.rb#97
Aws::ECR::ClientApi::GetLifecyclePolicyPreviewResponse = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/client_api.rb#98
Aws::ECR::ClientApi::GetLifecyclePolicyRequest = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/client_api.rb#99
Aws::ECR::ClientApi::GetLifecyclePolicyResponse = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/client_api.rb#100
Aws::ECR::ClientApi::GetRegistryPolicyRequest = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/client_api.rb#101
Aws::ECR::ClientApi::GetRegistryPolicyResponse = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/client_api.rb#102
Aws::ECR::ClientApi::GetRegistryScanningConfigurationRequest = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/client_api.rb#103
Aws::ECR::ClientApi::GetRegistryScanningConfigurationResponse = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/client_api.rb#104
Aws::ECR::ClientApi::GetRepositoryPolicyRequest = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/client_api.rb#105
Aws::ECR::ClientApi::GetRepositoryPolicyResponse = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/client_api.rb#106
Aws::ECR::ClientApi::Image = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/client_api.rb#107
Aws::ECR::ClientApi::ImageActionType = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StringShape)

# @api private
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/client_api.rb#108
Aws::ECR::ClientApi::ImageAlreadyExistsException = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/client_api.rb#109
Aws::ECR::ClientApi::ImageCount = T.let(T.unsafe(nil), Seahorse::Model::Shapes::IntegerShape)

# @api private
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/client_api.rb#110
Aws::ECR::ClientApi::ImageDetail = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/client_api.rb#111
Aws::ECR::ClientApi::ImageDetailList = T.let(T.unsafe(nil), Seahorse::Model::Shapes::ListShape)

# @api private
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/client_api.rb#112
Aws::ECR::ClientApi::ImageDigest = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StringShape)

# @api private
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/client_api.rb#113
Aws::ECR::ClientApi::ImageDigestDoesNotMatchException = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/client_api.rb#114
Aws::ECR::ClientApi::ImageFailure = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/client_api.rb#115
Aws::ECR::ClientApi::ImageFailureCode = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StringShape)

# @api private
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/client_api.rb#116
Aws::ECR::ClientApi::ImageFailureList = T.let(T.unsafe(nil), Seahorse::Model::Shapes::ListShape)

# @api private
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/client_api.rb#117
Aws::ECR::ClientApi::ImageFailureReason = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StringShape)

# @api private
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/client_api.rb#118
Aws::ECR::ClientApi::ImageIdentifier = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/client_api.rb#119
Aws::ECR::ClientApi::ImageIdentifierList = T.let(T.unsafe(nil), Seahorse::Model::Shapes::ListShape)

# @api private
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/client_api.rb#120
Aws::ECR::ClientApi::ImageList = T.let(T.unsafe(nil), Seahorse::Model::Shapes::ListShape)

# @api private
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/client_api.rb#121
Aws::ECR::ClientApi::ImageManifest = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StringShape)

# @api private
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/client_api.rb#122
Aws::ECR::ClientApi::ImageNotFoundException = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/client_api.rb#123
Aws::ECR::ClientApi::ImageReplicationStatus = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/client_api.rb#124
Aws::ECR::ClientApi::ImageReplicationStatusList = T.let(T.unsafe(nil), Seahorse::Model::Shapes::ListShape)

# @api private
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/client_api.rb#125
Aws::ECR::ClientApi::ImageScanFinding = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/client_api.rb#126
Aws::ECR::ClientApi::ImageScanFindingList = T.let(T.unsafe(nil), Seahorse::Model::Shapes::ListShape)

# @api private
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/client_api.rb#127
Aws::ECR::ClientApi::ImageScanFindings = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/client_api.rb#128
Aws::ECR::ClientApi::ImageScanFindingsSummary = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/client_api.rb#129
Aws::ECR::ClientApi::ImageScanStatus = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/client_api.rb#130
Aws::ECR::ClientApi::ImageScanningConfiguration = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/client_api.rb#131
Aws::ECR::ClientApi::ImageSizeInBytes = T.let(T.unsafe(nil), Seahorse::Model::Shapes::IntegerShape)

# @api private
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/client_api.rb#132
Aws::ECR::ClientApi::ImageTag = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StringShape)

# @api private
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/client_api.rb#133
Aws::ECR::ClientApi::ImageTagAlreadyExistsException = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/client_api.rb#134
Aws::ECR::ClientApi::ImageTagList = T.let(T.unsafe(nil), Seahorse::Model::Shapes::ListShape)

# @api private
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/client_api.rb#135
Aws::ECR::ClientApi::ImageTagMutability = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StringShape)

# @api private
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/client_api.rb#136
Aws::ECR::ClientApi::ImageTagsList = T.let(T.unsafe(nil), Seahorse::Model::Shapes::ListShape)

# @api private
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/client_api.rb#137
Aws::ECR::ClientApi::InitiateLayerUploadRequest = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/client_api.rb#138
Aws::ECR::ClientApi::InitiateLayerUploadResponse = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/client_api.rb#139
Aws::ECR::ClientApi::InvalidLayerException = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/client_api.rb#140
Aws::ECR::ClientApi::InvalidLayerPartException = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/client_api.rb#141
Aws::ECR::ClientApi::InvalidParameterException = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/client_api.rb#142
Aws::ECR::ClientApi::InvalidTagParameterException = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/client_api.rb#143
Aws::ECR::ClientApi::IsPTCRuleValid = T.let(T.unsafe(nil), Seahorse::Model::Shapes::BooleanShape)

# @api private
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/client_api.rb#144
Aws::ECR::ClientApi::KmsError = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StringShape)

# @api private
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/client_api.rb#145
Aws::ECR::ClientApi::KmsException = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/client_api.rb#146
Aws::ECR::ClientApi::KmsKey = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StringShape)

# @api private
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/client_api.rb#147
Aws::ECR::ClientApi::Layer = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/client_api.rb#148
Aws::ECR::ClientApi::LayerAlreadyExistsException = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/client_api.rb#149
Aws::ECR::ClientApi::LayerAvailability = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StringShape)

# @api private
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/client_api.rb#150
Aws::ECR::ClientApi::LayerDigest = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StringShape)

# @api private
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/client_api.rb#151
Aws::ECR::ClientApi::LayerDigestList = T.let(T.unsafe(nil), Seahorse::Model::Shapes::ListShape)

# @api private
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/client_api.rb#152
Aws::ECR::ClientApi::LayerFailure = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/client_api.rb#153
Aws::ECR::ClientApi::LayerFailureCode = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StringShape)

# @api private
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/client_api.rb#154
Aws::ECR::ClientApi::LayerFailureList = T.let(T.unsafe(nil), Seahorse::Model::Shapes::ListShape)

# @api private
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/client_api.rb#155
Aws::ECR::ClientApi::LayerFailureReason = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StringShape)

# @api private
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/client_api.rb#156
Aws::ECR::ClientApi::LayerInaccessibleException = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/client_api.rb#157
Aws::ECR::ClientApi::LayerList = T.let(T.unsafe(nil), Seahorse::Model::Shapes::ListShape)

# @api private
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/client_api.rb#158
Aws::ECR::ClientApi::LayerPartBlob = T.let(T.unsafe(nil), Seahorse::Model::Shapes::BlobShape)

# @api private
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/client_api.rb#159
Aws::ECR::ClientApi::LayerPartTooSmallException = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/client_api.rb#160
Aws::ECR::ClientApi::LayerSizeInBytes = T.let(T.unsafe(nil), Seahorse::Model::Shapes::IntegerShape)

# @api private
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/client_api.rb#161
Aws::ECR::ClientApi::LayersNotFoundException = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/client_api.rb#162
Aws::ECR::ClientApi::LifecyclePolicyNotFoundException = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/client_api.rb#163
Aws::ECR::ClientApi::LifecyclePolicyPreviewFilter = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/client_api.rb#164
Aws::ECR::ClientApi::LifecyclePolicyPreviewInProgressException = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/client_api.rb#165
Aws::ECR::ClientApi::LifecyclePolicyPreviewNotFoundException = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/client_api.rb#166
Aws::ECR::ClientApi::LifecyclePolicyPreviewResult = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/client_api.rb#167
Aws::ECR::ClientApi::LifecyclePolicyPreviewResultList = T.let(T.unsafe(nil), Seahorse::Model::Shapes::ListShape)

# @api private
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/client_api.rb#168
Aws::ECR::ClientApi::LifecyclePolicyPreviewStatus = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StringShape)

# @api private
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/client_api.rb#169
Aws::ECR::ClientApi::LifecyclePolicyPreviewSummary = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/client_api.rb#170
Aws::ECR::ClientApi::LifecyclePolicyRuleAction = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/client_api.rb#171
Aws::ECR::ClientApi::LifecyclePolicyRulePriority = T.let(T.unsafe(nil), Seahorse::Model::Shapes::IntegerShape)

# @api private
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/client_api.rb#172
Aws::ECR::ClientApi::LifecyclePolicyText = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StringShape)

# @api private
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/client_api.rb#173
Aws::ECR::ClientApi::LifecyclePreviewMaxResults = T.let(T.unsafe(nil), Seahorse::Model::Shapes::IntegerShape)

# @api private
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/client_api.rb#174
Aws::ECR::ClientApi::LimitExceededException = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/client_api.rb#175
Aws::ECR::ClientApi::ListImagesFilter = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/client_api.rb#176
Aws::ECR::ClientApi::ListImagesRequest = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/client_api.rb#177
Aws::ECR::ClientApi::ListImagesResponse = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/client_api.rb#178
Aws::ECR::ClientApi::ListTagsForResourceRequest = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/client_api.rb#179
Aws::ECR::ClientApi::ListTagsForResourceResponse = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/client_api.rb#180
Aws::ECR::ClientApi::MaxResults = T.let(T.unsafe(nil), Seahorse::Model::Shapes::IntegerShape)

# @api private
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/client_api.rb#181
Aws::ECR::ClientApi::MediaType = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StringShape)

# @api private
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/client_api.rb#182
Aws::ECR::ClientApi::MediaTypeList = T.let(T.unsafe(nil), Seahorse::Model::Shapes::ListShape)

# @api private
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/client_api.rb#183
Aws::ECR::ClientApi::Metric = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StringShape)

# @api private
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/client_api.rb#184
Aws::ECR::ClientApi::NextToken = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StringShape)

# @api private
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/client_api.rb#185
Aws::ECR::ClientApi::PTCValidateFailure = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StringShape)

# @api private
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/client_api.rb#186
Aws::ECR::ClientApi::PackageManager = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StringShape)

# @api private
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/client_api.rb#187
Aws::ECR::ClientApi::PackageVulnerabilityDetails = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/client_api.rb#188
Aws::ECR::ClientApi::PartSize = T.let(T.unsafe(nil), Seahorse::Model::Shapes::IntegerShape)

# @api private
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/client_api.rb#189
Aws::ECR::ClientApi::Platform = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StringShape)

# @api private
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/client_api.rb#190
Aws::ECR::ClientApi::ProxyEndpoint = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StringShape)

# @api private
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/client_api.rb#191
Aws::ECR::ClientApi::PullThroughCacheRule = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/client_api.rb#192
Aws::ECR::ClientApi::PullThroughCacheRuleAlreadyExistsException = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/client_api.rb#193
Aws::ECR::ClientApi::PullThroughCacheRuleList = T.let(T.unsafe(nil), Seahorse::Model::Shapes::ListShape)

# @api private
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/client_api.rb#194
Aws::ECR::ClientApi::PullThroughCacheRuleNotFoundException = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/client_api.rb#195
Aws::ECR::ClientApi::PullThroughCacheRuleRepositoryPrefix = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StringShape)

# @api private
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/client_api.rb#196
Aws::ECR::ClientApi::PullThroughCacheRuleRepositoryPrefixList = T.let(T.unsafe(nil), Seahorse::Model::Shapes::ListShape)

# @api private
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/client_api.rb#197
Aws::ECR::ClientApi::PushTimestamp = T.let(T.unsafe(nil), Seahorse::Model::Shapes::TimestampShape)

# @api private
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/client_api.rb#198
Aws::ECR::ClientApi::PutImageRequest = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/client_api.rb#199
Aws::ECR::ClientApi::PutImageResponse = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/client_api.rb#200
Aws::ECR::ClientApi::PutImageScanningConfigurationRequest = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/client_api.rb#201
Aws::ECR::ClientApi::PutImageScanningConfigurationResponse = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/client_api.rb#202
Aws::ECR::ClientApi::PutImageTagMutabilityRequest = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/client_api.rb#203
Aws::ECR::ClientApi::PutImageTagMutabilityResponse = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/client_api.rb#204
Aws::ECR::ClientApi::PutLifecyclePolicyRequest = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/client_api.rb#205
Aws::ECR::ClientApi::PutLifecyclePolicyResponse = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/client_api.rb#206
Aws::ECR::ClientApi::PutRegistryPolicyRequest = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/client_api.rb#207
Aws::ECR::ClientApi::PutRegistryPolicyResponse = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/client_api.rb#208
Aws::ECR::ClientApi::PutRegistryScanningConfigurationRequest = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/client_api.rb#209
Aws::ECR::ClientApi::PutRegistryScanningConfigurationResponse = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/client_api.rb#210
Aws::ECR::ClientApi::PutReplicationConfigurationRequest = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/client_api.rb#211
Aws::ECR::ClientApi::PutReplicationConfigurationResponse = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/client_api.rb#212
Aws::ECR::ClientApi::Reason = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StringShape)

# @api private
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/client_api.rb#213
Aws::ECR::ClientApi::Recommendation = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/client_api.rb#214
Aws::ECR::ClientApi::RecommendationText = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StringShape)

# @api private
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/client_api.rb#215
Aws::ECR::ClientApi::RecordedPullTimestamp = T.let(T.unsafe(nil), Seahorse::Model::Shapes::TimestampShape)

# @api private
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/client_api.rb#216
Aws::ECR::ClientApi::ReferenceUrlsList = T.let(T.unsafe(nil), Seahorse::Model::Shapes::ListShape)

# @api private
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/client_api.rb#217
Aws::ECR::ClientApi::ReferencedImagesNotFoundException = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/client_api.rb#218
Aws::ECR::ClientApi::Region = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StringShape)

# @api private
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/client_api.rb#219
Aws::ECR::ClientApi::RegistryId = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StringShape)

# @api private
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/client_api.rb#220
Aws::ECR::ClientApi::RegistryPolicyNotFoundException = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/client_api.rb#221
Aws::ECR::ClientApi::RegistryPolicyText = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StringShape)

# @api private
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/client_api.rb#222
Aws::ECR::ClientApi::RegistryScanningConfiguration = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/client_api.rb#223
Aws::ECR::ClientApi::RegistryScanningRule = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/client_api.rb#224
Aws::ECR::ClientApi::RegistryScanningRuleList = T.let(T.unsafe(nil), Seahorse::Model::Shapes::ListShape)

# @api private
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/client_api.rb#225
Aws::ECR::ClientApi::RelatedVulnerabilitiesList = T.let(T.unsafe(nil), Seahorse::Model::Shapes::ListShape)

# @api private
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/client_api.rb#226
Aws::ECR::ClientApi::RelatedVulnerability = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StringShape)

# @api private
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/client_api.rb#227
Aws::ECR::ClientApi::Release = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StringShape)

# @api private
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/client_api.rb#228
Aws::ECR::ClientApi::Remediation = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/client_api.rb#229
Aws::ECR::ClientApi::ReplicationConfiguration = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/client_api.rb#230
Aws::ECR::ClientApi::ReplicationDestination = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/client_api.rb#231
Aws::ECR::ClientApi::ReplicationDestinationList = T.let(T.unsafe(nil), Seahorse::Model::Shapes::ListShape)

# @api private
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/client_api.rb#232
Aws::ECR::ClientApi::ReplicationError = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StringShape)

# @api private
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/client_api.rb#233
Aws::ECR::ClientApi::ReplicationRule = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/client_api.rb#234
Aws::ECR::ClientApi::ReplicationRuleList = T.let(T.unsafe(nil), Seahorse::Model::Shapes::ListShape)

# @api private
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/client_api.rb#235
Aws::ECR::ClientApi::ReplicationStatus = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StringShape)

# @api private
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/client_api.rb#236
Aws::ECR::ClientApi::Repository = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/client_api.rb#237
Aws::ECR::ClientApi::RepositoryAlreadyExistsException = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/client_api.rb#238
Aws::ECR::ClientApi::RepositoryFilter = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/client_api.rb#239
Aws::ECR::ClientApi::RepositoryFilterList = T.let(T.unsafe(nil), Seahorse::Model::Shapes::ListShape)

# @api private
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/client_api.rb#240
Aws::ECR::ClientApi::RepositoryFilterType = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StringShape)

# @api private
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/client_api.rb#241
Aws::ECR::ClientApi::RepositoryFilterValue = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StringShape)

# @api private
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/client_api.rb#242
Aws::ECR::ClientApi::RepositoryList = T.let(T.unsafe(nil), Seahorse::Model::Shapes::ListShape)

# @api private
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/client_api.rb#243
Aws::ECR::ClientApi::RepositoryName = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StringShape)

# @api private
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/client_api.rb#244
Aws::ECR::ClientApi::RepositoryNameList = T.let(T.unsafe(nil), Seahorse::Model::Shapes::ListShape)

# @api private
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/client_api.rb#245
Aws::ECR::ClientApi::RepositoryNotEmptyException = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/client_api.rb#246
Aws::ECR::ClientApi::RepositoryNotFoundException = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/client_api.rb#247
Aws::ECR::ClientApi::RepositoryPolicyNotFoundException = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/client_api.rb#248
Aws::ECR::ClientApi::RepositoryPolicyText = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StringShape)

# @api private
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/client_api.rb#249
Aws::ECR::ClientApi::RepositoryScanningConfiguration = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/client_api.rb#250
Aws::ECR::ClientApi::RepositoryScanningConfigurationFailure = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/client_api.rb#251
Aws::ECR::ClientApi::RepositoryScanningConfigurationFailureList = T.let(T.unsafe(nil), Seahorse::Model::Shapes::ListShape)

# @api private
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/client_api.rb#252
Aws::ECR::ClientApi::RepositoryScanningConfigurationList = T.let(T.unsafe(nil), Seahorse::Model::Shapes::ListShape)

# @api private
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/client_api.rb#253
Aws::ECR::ClientApi::Resource = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/client_api.rb#254
Aws::ECR::ClientApi::ResourceDetails = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/client_api.rb#255
Aws::ECR::ClientApi::ResourceId = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StringShape)

# @api private
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/client_api.rb#256
Aws::ECR::ClientApi::ResourceList = T.let(T.unsafe(nil), Seahorse::Model::Shapes::ListShape)

# @api private
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/client_api.rb#257
Aws::ECR::ClientApi::ScanFrequency = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StringShape)

# @api private
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/client_api.rb#258
Aws::ECR::ClientApi::ScanNotFoundException = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/client_api.rb#259
Aws::ECR::ClientApi::ScanOnPushFlag = T.let(T.unsafe(nil), Seahorse::Model::Shapes::BooleanShape)

# @api private
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/client_api.rb#260
Aws::ECR::ClientApi::ScanStatus = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StringShape)

# @api private
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/client_api.rb#261
Aws::ECR::ClientApi::ScanStatusDescription = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StringShape)

# @api private
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/client_api.rb#262
Aws::ECR::ClientApi::ScanTimestamp = T.let(T.unsafe(nil), Seahorse::Model::Shapes::TimestampShape)

# @api private
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/client_api.rb#263
Aws::ECR::ClientApi::ScanType = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StringShape)

# @api private
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/client_api.rb#264
Aws::ECR::ClientApi::ScanningConfigurationFailureCode = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StringShape)

# @api private
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/client_api.rb#265
Aws::ECR::ClientApi::ScanningConfigurationFailureReason = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StringShape)

# @api private
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/client_api.rb#266
Aws::ECR::ClientApi::ScanningConfigurationRepositoryNameList = T.let(T.unsafe(nil), Seahorse::Model::Shapes::ListShape)

# @api private
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/client_api.rb#267
Aws::ECR::ClientApi::ScanningRepositoryFilter = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/client_api.rb#268
Aws::ECR::ClientApi::ScanningRepositoryFilterList = T.let(T.unsafe(nil), Seahorse::Model::Shapes::ListShape)

# @api private
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/client_api.rb#269
Aws::ECR::ClientApi::ScanningRepositoryFilterType = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StringShape)

# @api private
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/client_api.rb#270
Aws::ECR::ClientApi::ScanningRepositoryFilterValue = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StringShape)

# @api private
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/client_api.rb#271
Aws::ECR::ClientApi::Score = T.let(T.unsafe(nil), Seahorse::Model::Shapes::FloatShape)

# @api private
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/client_api.rb#272
Aws::ECR::ClientApi::ScoreDetails = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/client_api.rb#273
Aws::ECR::ClientApi::ScoringVector = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StringShape)

# @api private
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/client_api.rb#274
Aws::ECR::ClientApi::SecretNotFoundException = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/client_api.rb#275
Aws::ECR::ClientApi::ServerException = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/client_api.rb#276
Aws::ECR::ClientApi::SetRepositoryPolicyRequest = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/client_api.rb#277
Aws::ECR::ClientApi::SetRepositoryPolicyResponse = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/client_api.rb#278
Aws::ECR::ClientApi::Severity = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StringShape)

# @api private
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/client_api.rb#279
Aws::ECR::ClientApi::SeverityCount = T.let(T.unsafe(nil), Seahorse::Model::Shapes::IntegerShape)

# @api private
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/client_api.rb#280
Aws::ECR::ClientApi::Source = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StringShape)

# @api private
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/client_api.rb#281
Aws::ECR::ClientApi::SourceLayerHash = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StringShape)

# @api private
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/client_api.rb#282
Aws::ECR::ClientApi::StartImageScanRequest = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/client_api.rb#283
Aws::ECR::ClientApi::StartImageScanResponse = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/client_api.rb#284
Aws::ECR::ClientApi::StartLifecyclePolicyPreviewRequest = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/client_api.rb#285
Aws::ECR::ClientApi::StartLifecyclePolicyPreviewResponse = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/client_api.rb#286
Aws::ECR::ClientApi::Status = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StringShape)

# @api private
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/client_api.rb#287
Aws::ECR::ClientApi::Tag = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/client_api.rb#288
Aws::ECR::ClientApi::TagKey = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StringShape)

# @api private
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/client_api.rb#289
Aws::ECR::ClientApi::TagKeyList = T.let(T.unsafe(nil), Seahorse::Model::Shapes::ListShape)

# @api private
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/client_api.rb#290
Aws::ECR::ClientApi::TagList = T.let(T.unsafe(nil), Seahorse::Model::Shapes::ListShape)

# @api private
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/client_api.rb#291
Aws::ECR::ClientApi::TagResourceRequest = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/client_api.rb#292
Aws::ECR::ClientApi::TagResourceResponse = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/client_api.rb#293
Aws::ECR::ClientApi::TagStatus = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StringShape)

# @api private
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/client_api.rb#294
Aws::ECR::ClientApi::TagValue = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StringShape)

# @api private
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/client_api.rb#295
Aws::ECR::ClientApi::Tags = T.let(T.unsafe(nil), Seahorse::Model::Shapes::MapShape)

# @api private
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/client_api.rb#296
Aws::ECR::ClientApi::Title = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StringShape)

# @api private
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/client_api.rb#297
Aws::ECR::ClientApi::TooManyTagsException = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/client_api.rb#298
Aws::ECR::ClientApi::Type = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StringShape)

# @api private
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/client_api.rb#299
Aws::ECR::ClientApi::UnableToAccessSecretException = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/client_api.rb#300
Aws::ECR::ClientApi::UnableToDecryptSecretValueException = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/client_api.rb#301
Aws::ECR::ClientApi::UnableToGetUpstreamImageException = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/client_api.rb#302
Aws::ECR::ClientApi::UnableToGetUpstreamLayerException = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/client_api.rb#303
Aws::ECR::ClientApi::UnsupportedImageTypeException = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/client_api.rb#304
Aws::ECR::ClientApi::UnsupportedUpstreamRegistryException = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/client_api.rb#305
Aws::ECR::ClientApi::UntagResourceRequest = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/client_api.rb#306
Aws::ECR::ClientApi::UntagResourceResponse = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/client_api.rb#307
Aws::ECR::ClientApi::UpdatePullThroughCacheRuleRequest = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/client_api.rb#308
Aws::ECR::ClientApi::UpdatePullThroughCacheRuleResponse = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/client_api.rb#309
Aws::ECR::ClientApi::UpdatedTimestamp = T.let(T.unsafe(nil), Seahorse::Model::Shapes::TimestampShape)

# @api private
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/client_api.rb#310
Aws::ECR::ClientApi::UploadId = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StringShape)

# @api private
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/client_api.rb#311
Aws::ECR::ClientApi::UploadLayerPartRequest = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/client_api.rb#312
Aws::ECR::ClientApi::UploadLayerPartResponse = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/client_api.rb#313
Aws::ECR::ClientApi::UploadNotFoundException = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/client_api.rb#314
Aws::ECR::ClientApi::UpstreamRegistry = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StringShape)

# @api private
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/client_api.rb#315
Aws::ECR::ClientApi::Url = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StringShape)

# @api private
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/client_api.rb#316
Aws::ECR::ClientApi::ValidatePullThroughCacheRuleRequest = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/client_api.rb#317
Aws::ECR::ClientApi::ValidatePullThroughCacheRuleResponse = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/client_api.rb#318
Aws::ECR::ClientApi::ValidationException = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/client_api.rb#319
Aws::ECR::ClientApi::Version = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StringShape)

# @api private
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/client_api.rb#320
Aws::ECR::ClientApi::VulnerabilityId = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StringShape)

# @api private
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/client_api.rb#321
Aws::ECR::ClientApi::VulnerabilitySourceUpdateTimestamp = T.let(T.unsafe(nil), Seahorse::Model::Shapes::TimestampShape)

# @api private
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/client_api.rb#322
Aws::ECR::ClientApi::VulnerablePackage = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/client_api.rb#323
Aws::ECR::ClientApi::VulnerablePackageName = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StringShape)

# @api private
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/client_api.rb#324
Aws::ECR::ClientApi::VulnerablePackagesList = T.let(T.unsafe(nil), Seahorse::Model::Shapes::ListShape)

# Endpoint parameters used to influence endpoints per request.
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/endpoint_parameters.rb#33
class Aws::ECR::EndpointParameters < ::Struct
  include ::Aws::Structure

  # @return [EndpointParameters] a new instance of EndpointParameters
  #
  # source://aws-sdk-ecr//lib/aws-sdk-ecr/endpoint_parameters.rb#51
  def initialize(options = T.unsafe(nil)); end

  # Override the endpoint used to send this request
  #
  # @return [String]
  def endpoint; end

  # Override the endpoint used to send this request
  #
  # @return [String]
  def endpoint=(_); end

  # The AWS region used to dispatch the request.
  #
  # @return [String]
  def region; end

  # The AWS region used to dispatch the request.
  #
  # @return [String]
  def region=(_); end

  # When true, use the dual-stack endpoint. If the configured endpoint does not support dual-stack, dispatching the request MAY return an error.
  #
  # @return [Boolean]
  def use_dual_stack; end

  # When true, use the dual-stack endpoint. If the configured endpoint does not support dual-stack, dispatching the request MAY return an error.
  #
  # @return [Boolean]
  def use_dual_stack=(_); end

  # When true, send this request to the FIPS-compliant regional endpoint. If the configured endpoint does not have a FIPS compliant endpoint, dispatching the request will return an error.
  #
  # @return [Boolean]
  def use_fips; end

  # When true, send this request to the FIPS-compliant regional endpoint. If the configured endpoint does not have a FIPS compliant endpoint, dispatching the request will return an error.
  #
  # @return [Boolean]
  def use_fips=(_); end

  class << self
    def [](*_arg0); end
    def inspect; end
    def keyword_init?; end
    def members; end
    def new(*_arg0); end
  end
end

# source://aws-sdk-ecr//lib/aws-sdk-ecr/endpoint_provider.rb#11
class Aws::ECR::EndpointProvider
  # @raise [ArgumentError]
  #
  # source://aws-sdk-ecr//lib/aws-sdk-ecr/endpoint_provider.rb#12
  def resolve_endpoint(parameters); end
end

# @api private
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/endpoints.rb#13
module Aws::ECR::Endpoints; end

# @api private
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/endpoints.rb#15
class Aws::ECR::Endpoints::BatchCheckLayerAvailability
  class << self
    # @api private
    #
    # source://aws-sdk-ecr//lib/aws-sdk-ecr/endpoints.rb#16
    def build(context); end
  end
end

# @api private
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/endpoints.rb#29
class Aws::ECR::Endpoints::BatchDeleteImage
  class << self
    # @api private
    #
    # source://aws-sdk-ecr//lib/aws-sdk-ecr/endpoints.rb#30
    def build(context); end
  end
end

# @api private
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/endpoints.rb#43
class Aws::ECR::Endpoints::BatchGetImage
  class << self
    # @api private
    #
    # source://aws-sdk-ecr//lib/aws-sdk-ecr/endpoints.rb#44
    def build(context); end
  end
end

# @api private
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/endpoints.rb#57
class Aws::ECR::Endpoints::BatchGetRepositoryScanningConfiguration
  class << self
    # @api private
    #
    # source://aws-sdk-ecr//lib/aws-sdk-ecr/endpoints.rb#58
    def build(context); end
  end
end

# @api private
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/endpoints.rb#71
class Aws::ECR::Endpoints::CompleteLayerUpload
  class << self
    # @api private
    #
    # source://aws-sdk-ecr//lib/aws-sdk-ecr/endpoints.rb#72
    def build(context); end
  end
end

# @api private
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/endpoints.rb#85
class Aws::ECR::Endpoints::CreatePullThroughCacheRule
  class << self
    # @api private
    #
    # source://aws-sdk-ecr//lib/aws-sdk-ecr/endpoints.rb#86
    def build(context); end
  end
end

# @api private
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/endpoints.rb#99
class Aws::ECR::Endpoints::CreateRepository
  class << self
    # @api private
    #
    # source://aws-sdk-ecr//lib/aws-sdk-ecr/endpoints.rb#100
    def build(context); end
  end
end

# @api private
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/endpoints.rb#113
class Aws::ECR::Endpoints::DeleteLifecyclePolicy
  class << self
    # @api private
    #
    # source://aws-sdk-ecr//lib/aws-sdk-ecr/endpoints.rb#114
    def build(context); end
  end
end

# @api private
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/endpoints.rb#127
class Aws::ECR::Endpoints::DeletePullThroughCacheRule
  class << self
    # @api private
    #
    # source://aws-sdk-ecr//lib/aws-sdk-ecr/endpoints.rb#128
    def build(context); end
  end
end

# @api private
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/endpoints.rb#141
class Aws::ECR::Endpoints::DeleteRegistryPolicy
  class << self
    # @api private
    #
    # source://aws-sdk-ecr//lib/aws-sdk-ecr/endpoints.rb#142
    def build(context); end
  end
end

# @api private
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/endpoints.rb#155
class Aws::ECR::Endpoints::DeleteRepository
  class << self
    # @api private
    #
    # source://aws-sdk-ecr//lib/aws-sdk-ecr/endpoints.rb#156
    def build(context); end
  end
end

# @api private
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/endpoints.rb#169
class Aws::ECR::Endpoints::DeleteRepositoryPolicy
  class << self
    # @api private
    #
    # source://aws-sdk-ecr//lib/aws-sdk-ecr/endpoints.rb#170
    def build(context); end
  end
end

# @api private
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/endpoints.rb#183
class Aws::ECR::Endpoints::DescribeImageReplicationStatus
  class << self
    # @api private
    #
    # source://aws-sdk-ecr//lib/aws-sdk-ecr/endpoints.rb#184
    def build(context); end
  end
end

# @api private
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/endpoints.rb#197
class Aws::ECR::Endpoints::DescribeImageScanFindings
  class << self
    # @api private
    #
    # source://aws-sdk-ecr//lib/aws-sdk-ecr/endpoints.rb#198
    def build(context); end
  end
end

# @api private
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/endpoints.rb#211
class Aws::ECR::Endpoints::DescribeImages
  class << self
    # @api private
    #
    # source://aws-sdk-ecr//lib/aws-sdk-ecr/endpoints.rb#212
    def build(context); end
  end
end

# @api private
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/endpoints.rb#225
class Aws::ECR::Endpoints::DescribePullThroughCacheRules
  class << self
    # @api private
    #
    # source://aws-sdk-ecr//lib/aws-sdk-ecr/endpoints.rb#226
    def build(context); end
  end
end

# @api private
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/endpoints.rb#239
class Aws::ECR::Endpoints::DescribeRegistry
  class << self
    # @api private
    #
    # source://aws-sdk-ecr//lib/aws-sdk-ecr/endpoints.rb#240
    def build(context); end
  end
end

# @api private
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/endpoints.rb#253
class Aws::ECR::Endpoints::DescribeRepositories
  class << self
    # @api private
    #
    # source://aws-sdk-ecr//lib/aws-sdk-ecr/endpoints.rb#254
    def build(context); end
  end
end

# @api private
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/endpoints.rb#267
class Aws::ECR::Endpoints::GetAuthorizationToken
  class << self
    # @api private
    #
    # source://aws-sdk-ecr//lib/aws-sdk-ecr/endpoints.rb#268
    def build(context); end
  end
end

# @api private
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/endpoints.rb#281
class Aws::ECR::Endpoints::GetDownloadUrlForLayer
  class << self
    # @api private
    #
    # source://aws-sdk-ecr//lib/aws-sdk-ecr/endpoints.rb#282
    def build(context); end
  end
end

# @api private
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/endpoints.rb#295
class Aws::ECR::Endpoints::GetLifecyclePolicy
  class << self
    # @api private
    #
    # source://aws-sdk-ecr//lib/aws-sdk-ecr/endpoints.rb#296
    def build(context); end
  end
end

# @api private
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/endpoints.rb#309
class Aws::ECR::Endpoints::GetLifecyclePolicyPreview
  class << self
    # @api private
    #
    # source://aws-sdk-ecr//lib/aws-sdk-ecr/endpoints.rb#310
    def build(context); end
  end
end

# @api private
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/endpoints.rb#323
class Aws::ECR::Endpoints::GetRegistryPolicy
  class << self
    # @api private
    #
    # source://aws-sdk-ecr//lib/aws-sdk-ecr/endpoints.rb#324
    def build(context); end
  end
end

# @api private
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/endpoints.rb#337
class Aws::ECR::Endpoints::GetRegistryScanningConfiguration
  class << self
    # @api private
    #
    # source://aws-sdk-ecr//lib/aws-sdk-ecr/endpoints.rb#338
    def build(context); end
  end
end

# @api private
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/endpoints.rb#351
class Aws::ECR::Endpoints::GetRepositoryPolicy
  class << self
    # @api private
    #
    # source://aws-sdk-ecr//lib/aws-sdk-ecr/endpoints.rb#352
    def build(context); end
  end
end

# @api private
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/endpoints.rb#365
class Aws::ECR::Endpoints::InitiateLayerUpload
  class << self
    # @api private
    #
    # source://aws-sdk-ecr//lib/aws-sdk-ecr/endpoints.rb#366
    def build(context); end
  end
end

# @api private
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/endpoints.rb#379
class Aws::ECR::Endpoints::ListImages
  class << self
    # @api private
    #
    # source://aws-sdk-ecr//lib/aws-sdk-ecr/endpoints.rb#380
    def build(context); end
  end
end

# @api private
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/endpoints.rb#393
class Aws::ECR::Endpoints::ListTagsForResource
  class << self
    # @api private
    #
    # source://aws-sdk-ecr//lib/aws-sdk-ecr/endpoints.rb#394
    def build(context); end
  end
end

# @api private
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/endpoints.rb#407
class Aws::ECR::Endpoints::PutImage
  class << self
    # @api private
    #
    # source://aws-sdk-ecr//lib/aws-sdk-ecr/endpoints.rb#408
    def build(context); end
  end
end

# @api private
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/endpoints.rb#421
class Aws::ECR::Endpoints::PutImageScanningConfiguration
  class << self
    # @api private
    #
    # source://aws-sdk-ecr//lib/aws-sdk-ecr/endpoints.rb#422
    def build(context); end
  end
end

# @api private
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/endpoints.rb#435
class Aws::ECR::Endpoints::PutImageTagMutability
  class << self
    # @api private
    #
    # source://aws-sdk-ecr//lib/aws-sdk-ecr/endpoints.rb#436
    def build(context); end
  end
end

# @api private
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/endpoints.rb#449
class Aws::ECR::Endpoints::PutLifecyclePolicy
  class << self
    # @api private
    #
    # source://aws-sdk-ecr//lib/aws-sdk-ecr/endpoints.rb#450
    def build(context); end
  end
end

# @api private
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/endpoints.rb#463
class Aws::ECR::Endpoints::PutRegistryPolicy
  class << self
    # @api private
    #
    # source://aws-sdk-ecr//lib/aws-sdk-ecr/endpoints.rb#464
    def build(context); end
  end
end

# @api private
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/endpoints.rb#477
class Aws::ECR::Endpoints::PutRegistryScanningConfiguration
  class << self
    # @api private
    #
    # source://aws-sdk-ecr//lib/aws-sdk-ecr/endpoints.rb#478
    def build(context); end
  end
end

# @api private
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/endpoints.rb#491
class Aws::ECR::Endpoints::PutReplicationConfiguration
  class << self
    # @api private
    #
    # source://aws-sdk-ecr//lib/aws-sdk-ecr/endpoints.rb#492
    def build(context); end
  end
end

# @api private
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/endpoints.rb#505
class Aws::ECR::Endpoints::SetRepositoryPolicy
  class << self
    # @api private
    #
    # source://aws-sdk-ecr//lib/aws-sdk-ecr/endpoints.rb#506
    def build(context); end
  end
end

# @api private
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/endpoints.rb#519
class Aws::ECR::Endpoints::StartImageScan
  class << self
    # @api private
    #
    # source://aws-sdk-ecr//lib/aws-sdk-ecr/endpoints.rb#520
    def build(context); end
  end
end

# @api private
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/endpoints.rb#533
class Aws::ECR::Endpoints::StartLifecyclePolicyPreview
  class << self
    # @api private
    #
    # source://aws-sdk-ecr//lib/aws-sdk-ecr/endpoints.rb#534
    def build(context); end
  end
end

# @api private
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/endpoints.rb#547
class Aws::ECR::Endpoints::TagResource
  class << self
    # @api private
    #
    # source://aws-sdk-ecr//lib/aws-sdk-ecr/endpoints.rb#548
    def build(context); end
  end
end

# @api private
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/endpoints.rb#561
class Aws::ECR::Endpoints::UntagResource
  class << self
    # @api private
    #
    # source://aws-sdk-ecr//lib/aws-sdk-ecr/endpoints.rb#562
    def build(context); end
  end
end

# @api private
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/endpoints.rb#575
class Aws::ECR::Endpoints::UpdatePullThroughCacheRule
  class << self
    # @api private
    #
    # source://aws-sdk-ecr//lib/aws-sdk-ecr/endpoints.rb#576
    def build(context); end
  end
end

# @api private
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/endpoints.rb#589
class Aws::ECR::Endpoints::UploadLayerPart
  class << self
    # @api private
    #
    # source://aws-sdk-ecr//lib/aws-sdk-ecr/endpoints.rb#590
    def build(context); end
  end
end

# @api private
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/endpoints.rb#603
class Aws::ECR::Endpoints::ValidatePullThroughCacheRule
  class << self
    # @api private
    #
    # source://aws-sdk-ecr//lib/aws-sdk-ecr/endpoints.rb#604
    def build(context); end
  end
end

# When ECR returns an error response, the Ruby SDK constructs and raises an error.
# These errors all extend Aws::ECR::Errors::ServiceError < {Aws::Errors::ServiceError}
#
# You can rescue all ECR errors using ServiceError:
#
#     begin
#       # do stuff
#     rescue Aws::ECR::Errors::ServiceError
#       # rescues all ECR API errors
#     end
#
#
# ## Request Context
# ServiceError objects have a {Aws::Errors::ServiceError#context #context} method that returns
# information about the request that generated the error.
# See {Seahorse::Client::RequestContext} for more information.
#
# ## Error Classes
# * {EmptyUploadException}
# * {ImageAlreadyExistsException}
# * {ImageDigestDoesNotMatchException}
# * {ImageNotFoundException}
# * {ImageTagAlreadyExistsException}
# * {InvalidLayerException}
# * {InvalidLayerPartException}
# * {InvalidParameterException}
# * {InvalidTagParameterException}
# * {KmsException}
# * {LayerAlreadyExistsException}
# * {LayerInaccessibleException}
# * {LayerPartTooSmallException}
# * {LayersNotFoundException}
# * {LifecyclePolicyNotFoundException}
# * {LifecyclePolicyPreviewInProgressException}
# * {LifecyclePolicyPreviewNotFoundException}
# * {LimitExceededException}
# * {PullThroughCacheRuleAlreadyExistsException}
# * {PullThroughCacheRuleNotFoundException}
# * {ReferencedImagesNotFoundException}
# * {RegistryPolicyNotFoundException}
# * {RepositoryAlreadyExistsException}
# * {RepositoryNotEmptyException}
# * {RepositoryNotFoundException}
# * {RepositoryPolicyNotFoundException}
# * {ScanNotFoundException}
# * {SecretNotFoundException}
# * {ServerException}
# * {TooManyTagsException}
# * {UnableToAccessSecretException}
# * {UnableToDecryptSecretValueException}
# * {UnableToGetUpstreamImageException}
# * {UnableToGetUpstreamLayerException}
# * {UnsupportedImageTypeException}
# * {UnsupportedUpstreamRegistryException}
# * {UploadNotFoundException}
# * {ValidationException}
#
# Additionally, error classes are dynamically generated for service errors based on the error code
# if they are not defined above.
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/errors.rb#71
module Aws::ECR::Errors
  extend ::Aws::Errors::DynamicErrors
end

# source://aws-sdk-ecr//lib/aws-sdk-ecr/errors.rb#75
class Aws::ECR::Errors::EmptyUploadException < ::Aws::ECR::Errors::ServiceError
  # @param context [Seahorse::Client::RequestContext]
  # @param message [String]
  # @param data [Aws::ECR::Types::EmptyUploadException]
  # @return [EmptyUploadException] a new instance of EmptyUploadException
  #
  # source://aws-sdk-ecr//lib/aws-sdk-ecr/errors.rb#80
  def initialize(context, message, data = T.unsafe(nil)); end

  # @return [String]
  #
  # source://aws-sdk-ecr//lib/aws-sdk-ecr/errors.rb#85
  def message; end
end

# source://aws-sdk-ecr//lib/aws-sdk-ecr/errors.rb#90
class Aws::ECR::Errors::ImageAlreadyExistsException < ::Aws::ECR::Errors::ServiceError
  # @param context [Seahorse::Client::RequestContext]
  # @param message [String]
  # @param data [Aws::ECR::Types::ImageAlreadyExistsException]
  # @return [ImageAlreadyExistsException] a new instance of ImageAlreadyExistsException
  #
  # source://aws-sdk-ecr//lib/aws-sdk-ecr/errors.rb#95
  def initialize(context, message, data = T.unsafe(nil)); end

  # @return [String]
  #
  # source://aws-sdk-ecr//lib/aws-sdk-ecr/errors.rb#100
  def message; end
end

# source://aws-sdk-ecr//lib/aws-sdk-ecr/errors.rb#105
class Aws::ECR::Errors::ImageDigestDoesNotMatchException < ::Aws::ECR::Errors::ServiceError
  # @param context [Seahorse::Client::RequestContext]
  # @param message [String]
  # @param data [Aws::ECR::Types::ImageDigestDoesNotMatchException]
  # @return [ImageDigestDoesNotMatchException] a new instance of ImageDigestDoesNotMatchException
  #
  # source://aws-sdk-ecr//lib/aws-sdk-ecr/errors.rb#110
  def initialize(context, message, data = T.unsafe(nil)); end

  # @return [String]
  #
  # source://aws-sdk-ecr//lib/aws-sdk-ecr/errors.rb#115
  def message; end
end

# source://aws-sdk-ecr//lib/aws-sdk-ecr/errors.rb#120
class Aws::ECR::Errors::ImageNotFoundException < ::Aws::ECR::Errors::ServiceError
  # @param context [Seahorse::Client::RequestContext]
  # @param message [String]
  # @param data [Aws::ECR::Types::ImageNotFoundException]
  # @return [ImageNotFoundException] a new instance of ImageNotFoundException
  #
  # source://aws-sdk-ecr//lib/aws-sdk-ecr/errors.rb#125
  def initialize(context, message, data = T.unsafe(nil)); end

  # @return [String]
  #
  # source://aws-sdk-ecr//lib/aws-sdk-ecr/errors.rb#130
  def message; end
end

# source://aws-sdk-ecr//lib/aws-sdk-ecr/errors.rb#135
class Aws::ECR::Errors::ImageTagAlreadyExistsException < ::Aws::ECR::Errors::ServiceError
  # @param context [Seahorse::Client::RequestContext]
  # @param message [String]
  # @param data [Aws::ECR::Types::ImageTagAlreadyExistsException]
  # @return [ImageTagAlreadyExistsException] a new instance of ImageTagAlreadyExistsException
  #
  # source://aws-sdk-ecr//lib/aws-sdk-ecr/errors.rb#140
  def initialize(context, message, data = T.unsafe(nil)); end

  # @return [String]
  #
  # source://aws-sdk-ecr//lib/aws-sdk-ecr/errors.rb#145
  def message; end
end

# source://aws-sdk-ecr//lib/aws-sdk-ecr/errors.rb#150
class Aws::ECR::Errors::InvalidLayerException < ::Aws::ECR::Errors::ServiceError
  # @param context [Seahorse::Client::RequestContext]
  # @param message [String]
  # @param data [Aws::ECR::Types::InvalidLayerException]
  # @return [InvalidLayerException] a new instance of InvalidLayerException
  #
  # source://aws-sdk-ecr//lib/aws-sdk-ecr/errors.rb#155
  def initialize(context, message, data = T.unsafe(nil)); end

  # @return [String]
  #
  # source://aws-sdk-ecr//lib/aws-sdk-ecr/errors.rb#160
  def message; end
end

# source://aws-sdk-ecr//lib/aws-sdk-ecr/errors.rb#165
class Aws::ECR::Errors::InvalidLayerPartException < ::Aws::ECR::Errors::ServiceError
  # @param context [Seahorse::Client::RequestContext]
  # @param message [String]
  # @param data [Aws::ECR::Types::InvalidLayerPartException]
  # @return [InvalidLayerPartException] a new instance of InvalidLayerPartException
  #
  # source://aws-sdk-ecr//lib/aws-sdk-ecr/errors.rb#170
  def initialize(context, message, data = T.unsafe(nil)); end

  # @return [String]
  #
  # source://aws-sdk-ecr//lib/aws-sdk-ecr/errors.rb#190
  def last_valid_byte_received; end

  # @return [String]
  #
  # source://aws-sdk-ecr//lib/aws-sdk-ecr/errors.rb#195
  def message; end

  # @return [String]
  #
  # source://aws-sdk-ecr//lib/aws-sdk-ecr/errors.rb#175
  def registry_id; end

  # @return [String]
  #
  # source://aws-sdk-ecr//lib/aws-sdk-ecr/errors.rb#180
  def repository_name; end

  # @return [String]
  #
  # source://aws-sdk-ecr//lib/aws-sdk-ecr/errors.rb#185
  def upload_id; end
end

# source://aws-sdk-ecr//lib/aws-sdk-ecr/errors.rb#200
class Aws::ECR::Errors::InvalidParameterException < ::Aws::ECR::Errors::ServiceError
  # @param context [Seahorse::Client::RequestContext]
  # @param message [String]
  # @param data [Aws::ECR::Types::InvalidParameterException]
  # @return [InvalidParameterException] a new instance of InvalidParameterException
  #
  # source://aws-sdk-ecr//lib/aws-sdk-ecr/errors.rb#205
  def initialize(context, message, data = T.unsafe(nil)); end

  # @return [String]
  #
  # source://aws-sdk-ecr//lib/aws-sdk-ecr/errors.rb#210
  def message; end
end

# source://aws-sdk-ecr//lib/aws-sdk-ecr/errors.rb#215
class Aws::ECR::Errors::InvalidTagParameterException < ::Aws::ECR::Errors::ServiceError
  # @param context [Seahorse::Client::RequestContext]
  # @param message [String]
  # @param data [Aws::ECR::Types::InvalidTagParameterException]
  # @return [InvalidTagParameterException] a new instance of InvalidTagParameterException
  #
  # source://aws-sdk-ecr//lib/aws-sdk-ecr/errors.rb#220
  def initialize(context, message, data = T.unsafe(nil)); end

  # @return [String]
  #
  # source://aws-sdk-ecr//lib/aws-sdk-ecr/errors.rb#225
  def message; end
end

# source://aws-sdk-ecr//lib/aws-sdk-ecr/errors.rb#230
class Aws::ECR::Errors::KmsException < ::Aws::ECR::Errors::ServiceError
  # @param context [Seahorse::Client::RequestContext]
  # @param message [String]
  # @param data [Aws::ECR::Types::KmsException]
  # @return [KmsException] a new instance of KmsException
  #
  # source://aws-sdk-ecr//lib/aws-sdk-ecr/errors.rb#235
  def initialize(context, message, data = T.unsafe(nil)); end

  # @return [String]
  #
  # source://aws-sdk-ecr//lib/aws-sdk-ecr/errors.rb#245
  def kms_error; end

  # @return [String]
  #
  # source://aws-sdk-ecr//lib/aws-sdk-ecr/errors.rb#240
  def message; end
end

# source://aws-sdk-ecr//lib/aws-sdk-ecr/errors.rb#250
class Aws::ECR::Errors::LayerAlreadyExistsException < ::Aws::ECR::Errors::ServiceError
  # @param context [Seahorse::Client::RequestContext]
  # @param message [String]
  # @param data [Aws::ECR::Types::LayerAlreadyExistsException]
  # @return [LayerAlreadyExistsException] a new instance of LayerAlreadyExistsException
  #
  # source://aws-sdk-ecr//lib/aws-sdk-ecr/errors.rb#255
  def initialize(context, message, data = T.unsafe(nil)); end

  # @return [String]
  #
  # source://aws-sdk-ecr//lib/aws-sdk-ecr/errors.rb#260
  def message; end
end

# source://aws-sdk-ecr//lib/aws-sdk-ecr/errors.rb#265
class Aws::ECR::Errors::LayerInaccessibleException < ::Aws::ECR::Errors::ServiceError
  # @param context [Seahorse::Client::RequestContext]
  # @param message [String]
  # @param data [Aws::ECR::Types::LayerInaccessibleException]
  # @return [LayerInaccessibleException] a new instance of LayerInaccessibleException
  #
  # source://aws-sdk-ecr//lib/aws-sdk-ecr/errors.rb#270
  def initialize(context, message, data = T.unsafe(nil)); end

  # @return [String]
  #
  # source://aws-sdk-ecr//lib/aws-sdk-ecr/errors.rb#275
  def message; end
end

# source://aws-sdk-ecr//lib/aws-sdk-ecr/errors.rb#280
class Aws::ECR::Errors::LayerPartTooSmallException < ::Aws::ECR::Errors::ServiceError
  # @param context [Seahorse::Client::RequestContext]
  # @param message [String]
  # @param data [Aws::ECR::Types::LayerPartTooSmallException]
  # @return [LayerPartTooSmallException] a new instance of LayerPartTooSmallException
  #
  # source://aws-sdk-ecr//lib/aws-sdk-ecr/errors.rb#285
  def initialize(context, message, data = T.unsafe(nil)); end

  # @return [String]
  #
  # source://aws-sdk-ecr//lib/aws-sdk-ecr/errors.rb#290
  def message; end
end

# source://aws-sdk-ecr//lib/aws-sdk-ecr/errors.rb#295
class Aws::ECR::Errors::LayersNotFoundException < ::Aws::ECR::Errors::ServiceError
  # @param context [Seahorse::Client::RequestContext]
  # @param message [String]
  # @param data [Aws::ECR::Types::LayersNotFoundException]
  # @return [LayersNotFoundException] a new instance of LayersNotFoundException
  #
  # source://aws-sdk-ecr//lib/aws-sdk-ecr/errors.rb#300
  def initialize(context, message, data = T.unsafe(nil)); end

  # @return [String]
  #
  # source://aws-sdk-ecr//lib/aws-sdk-ecr/errors.rb#305
  def message; end
end

# source://aws-sdk-ecr//lib/aws-sdk-ecr/errors.rb#310
class Aws::ECR::Errors::LifecyclePolicyNotFoundException < ::Aws::ECR::Errors::ServiceError
  # @param context [Seahorse::Client::RequestContext]
  # @param message [String]
  # @param data [Aws::ECR::Types::LifecyclePolicyNotFoundException]
  # @return [LifecyclePolicyNotFoundException] a new instance of LifecyclePolicyNotFoundException
  #
  # source://aws-sdk-ecr//lib/aws-sdk-ecr/errors.rb#315
  def initialize(context, message, data = T.unsafe(nil)); end

  # @return [String]
  #
  # source://aws-sdk-ecr//lib/aws-sdk-ecr/errors.rb#320
  def message; end
end

# source://aws-sdk-ecr//lib/aws-sdk-ecr/errors.rb#325
class Aws::ECR::Errors::LifecyclePolicyPreviewInProgressException < ::Aws::ECR::Errors::ServiceError
  # @param context [Seahorse::Client::RequestContext]
  # @param message [String]
  # @param data [Aws::ECR::Types::LifecyclePolicyPreviewInProgressException]
  # @return [LifecyclePolicyPreviewInProgressException] a new instance of LifecyclePolicyPreviewInProgressException
  #
  # source://aws-sdk-ecr//lib/aws-sdk-ecr/errors.rb#330
  def initialize(context, message, data = T.unsafe(nil)); end

  # @return [String]
  #
  # source://aws-sdk-ecr//lib/aws-sdk-ecr/errors.rb#335
  def message; end
end

# source://aws-sdk-ecr//lib/aws-sdk-ecr/errors.rb#340
class Aws::ECR::Errors::LifecyclePolicyPreviewNotFoundException < ::Aws::ECR::Errors::ServiceError
  # @param context [Seahorse::Client::RequestContext]
  # @param message [String]
  # @param data [Aws::ECR::Types::LifecyclePolicyPreviewNotFoundException]
  # @return [LifecyclePolicyPreviewNotFoundException] a new instance of LifecyclePolicyPreviewNotFoundException
  #
  # source://aws-sdk-ecr//lib/aws-sdk-ecr/errors.rb#345
  def initialize(context, message, data = T.unsafe(nil)); end

  # @return [String]
  #
  # source://aws-sdk-ecr//lib/aws-sdk-ecr/errors.rb#350
  def message; end
end

# source://aws-sdk-ecr//lib/aws-sdk-ecr/errors.rb#355
class Aws::ECR::Errors::LimitExceededException < ::Aws::ECR::Errors::ServiceError
  # @param context [Seahorse::Client::RequestContext]
  # @param message [String]
  # @param data [Aws::ECR::Types::LimitExceededException]
  # @return [LimitExceededException] a new instance of LimitExceededException
  #
  # source://aws-sdk-ecr//lib/aws-sdk-ecr/errors.rb#360
  def initialize(context, message, data = T.unsafe(nil)); end

  # @return [String]
  #
  # source://aws-sdk-ecr//lib/aws-sdk-ecr/errors.rb#365
  def message; end
end

# source://aws-sdk-ecr//lib/aws-sdk-ecr/errors.rb#370
class Aws::ECR::Errors::PullThroughCacheRuleAlreadyExistsException < ::Aws::ECR::Errors::ServiceError
  # @param context [Seahorse::Client::RequestContext]
  # @param message [String]
  # @param data [Aws::ECR::Types::PullThroughCacheRuleAlreadyExistsException]
  # @return [PullThroughCacheRuleAlreadyExistsException] a new instance of PullThroughCacheRuleAlreadyExistsException
  #
  # source://aws-sdk-ecr//lib/aws-sdk-ecr/errors.rb#375
  def initialize(context, message, data = T.unsafe(nil)); end

  # @return [String]
  #
  # source://aws-sdk-ecr//lib/aws-sdk-ecr/errors.rb#380
  def message; end
end

# source://aws-sdk-ecr//lib/aws-sdk-ecr/errors.rb#385
class Aws::ECR::Errors::PullThroughCacheRuleNotFoundException < ::Aws::ECR::Errors::ServiceError
  # @param context [Seahorse::Client::RequestContext]
  # @param message [String]
  # @param data [Aws::ECR::Types::PullThroughCacheRuleNotFoundException]
  # @return [PullThroughCacheRuleNotFoundException] a new instance of PullThroughCacheRuleNotFoundException
  #
  # source://aws-sdk-ecr//lib/aws-sdk-ecr/errors.rb#390
  def initialize(context, message, data = T.unsafe(nil)); end

  # @return [String]
  #
  # source://aws-sdk-ecr//lib/aws-sdk-ecr/errors.rb#395
  def message; end
end

# source://aws-sdk-ecr//lib/aws-sdk-ecr/errors.rb#400
class Aws::ECR::Errors::ReferencedImagesNotFoundException < ::Aws::ECR::Errors::ServiceError
  # @param context [Seahorse::Client::RequestContext]
  # @param message [String]
  # @param data [Aws::ECR::Types::ReferencedImagesNotFoundException]
  # @return [ReferencedImagesNotFoundException] a new instance of ReferencedImagesNotFoundException
  #
  # source://aws-sdk-ecr//lib/aws-sdk-ecr/errors.rb#405
  def initialize(context, message, data = T.unsafe(nil)); end

  # @return [String]
  #
  # source://aws-sdk-ecr//lib/aws-sdk-ecr/errors.rb#410
  def message; end
end

# source://aws-sdk-ecr//lib/aws-sdk-ecr/errors.rb#415
class Aws::ECR::Errors::RegistryPolicyNotFoundException < ::Aws::ECR::Errors::ServiceError
  # @param context [Seahorse::Client::RequestContext]
  # @param message [String]
  # @param data [Aws::ECR::Types::RegistryPolicyNotFoundException]
  # @return [RegistryPolicyNotFoundException] a new instance of RegistryPolicyNotFoundException
  #
  # source://aws-sdk-ecr//lib/aws-sdk-ecr/errors.rb#420
  def initialize(context, message, data = T.unsafe(nil)); end

  # @return [String]
  #
  # source://aws-sdk-ecr//lib/aws-sdk-ecr/errors.rb#425
  def message; end
end

# source://aws-sdk-ecr//lib/aws-sdk-ecr/errors.rb#430
class Aws::ECR::Errors::RepositoryAlreadyExistsException < ::Aws::ECR::Errors::ServiceError
  # @param context [Seahorse::Client::RequestContext]
  # @param message [String]
  # @param data [Aws::ECR::Types::RepositoryAlreadyExistsException]
  # @return [RepositoryAlreadyExistsException] a new instance of RepositoryAlreadyExistsException
  #
  # source://aws-sdk-ecr//lib/aws-sdk-ecr/errors.rb#435
  def initialize(context, message, data = T.unsafe(nil)); end

  # @return [String]
  #
  # source://aws-sdk-ecr//lib/aws-sdk-ecr/errors.rb#440
  def message; end
end

# source://aws-sdk-ecr//lib/aws-sdk-ecr/errors.rb#445
class Aws::ECR::Errors::RepositoryNotEmptyException < ::Aws::ECR::Errors::ServiceError
  # @param context [Seahorse::Client::RequestContext]
  # @param message [String]
  # @param data [Aws::ECR::Types::RepositoryNotEmptyException]
  # @return [RepositoryNotEmptyException] a new instance of RepositoryNotEmptyException
  #
  # source://aws-sdk-ecr//lib/aws-sdk-ecr/errors.rb#450
  def initialize(context, message, data = T.unsafe(nil)); end

  # @return [String]
  #
  # source://aws-sdk-ecr//lib/aws-sdk-ecr/errors.rb#455
  def message; end
end

# source://aws-sdk-ecr//lib/aws-sdk-ecr/errors.rb#460
class Aws::ECR::Errors::RepositoryNotFoundException < ::Aws::ECR::Errors::ServiceError
  # @param context [Seahorse::Client::RequestContext]
  # @param message [String]
  # @param data [Aws::ECR::Types::RepositoryNotFoundException]
  # @return [RepositoryNotFoundException] a new instance of RepositoryNotFoundException
  #
  # source://aws-sdk-ecr//lib/aws-sdk-ecr/errors.rb#465
  def initialize(context, message, data = T.unsafe(nil)); end

  # @return [String]
  #
  # source://aws-sdk-ecr//lib/aws-sdk-ecr/errors.rb#470
  def message; end
end

# source://aws-sdk-ecr//lib/aws-sdk-ecr/errors.rb#475
class Aws::ECR::Errors::RepositoryPolicyNotFoundException < ::Aws::ECR::Errors::ServiceError
  # @param context [Seahorse::Client::RequestContext]
  # @param message [String]
  # @param data [Aws::ECR::Types::RepositoryPolicyNotFoundException]
  # @return [RepositoryPolicyNotFoundException] a new instance of RepositoryPolicyNotFoundException
  #
  # source://aws-sdk-ecr//lib/aws-sdk-ecr/errors.rb#480
  def initialize(context, message, data = T.unsafe(nil)); end

  # @return [String]
  #
  # source://aws-sdk-ecr//lib/aws-sdk-ecr/errors.rb#485
  def message; end
end

# source://aws-sdk-ecr//lib/aws-sdk-ecr/errors.rb#490
class Aws::ECR::Errors::ScanNotFoundException < ::Aws::ECR::Errors::ServiceError
  # @param context [Seahorse::Client::RequestContext]
  # @param message [String]
  # @param data [Aws::ECR::Types::ScanNotFoundException]
  # @return [ScanNotFoundException] a new instance of ScanNotFoundException
  #
  # source://aws-sdk-ecr//lib/aws-sdk-ecr/errors.rb#495
  def initialize(context, message, data = T.unsafe(nil)); end

  # @return [String]
  #
  # source://aws-sdk-ecr//lib/aws-sdk-ecr/errors.rb#500
  def message; end
end

# source://aws-sdk-ecr//lib/aws-sdk-ecr/errors.rb#505
class Aws::ECR::Errors::SecretNotFoundException < ::Aws::ECR::Errors::ServiceError
  # @param context [Seahorse::Client::RequestContext]
  # @param message [String]
  # @param data [Aws::ECR::Types::SecretNotFoundException]
  # @return [SecretNotFoundException] a new instance of SecretNotFoundException
  #
  # source://aws-sdk-ecr//lib/aws-sdk-ecr/errors.rb#510
  def initialize(context, message, data = T.unsafe(nil)); end

  # @return [String]
  #
  # source://aws-sdk-ecr//lib/aws-sdk-ecr/errors.rb#515
  def message; end
end

# source://aws-sdk-ecr//lib/aws-sdk-ecr/errors.rb#520
class Aws::ECR::Errors::ServerException < ::Aws::ECR::Errors::ServiceError
  # @param context [Seahorse::Client::RequestContext]
  # @param message [String]
  # @param data [Aws::ECR::Types::ServerException]
  # @return [ServerException] a new instance of ServerException
  #
  # source://aws-sdk-ecr//lib/aws-sdk-ecr/errors.rb#525
  def initialize(context, message, data = T.unsafe(nil)); end

  # @return [String]
  #
  # source://aws-sdk-ecr//lib/aws-sdk-ecr/errors.rb#530
  def message; end
end

# source://aws-sdk-ecr//lib/aws-sdk-ecr/errors.rb#0
class Aws::ECR::Errors::ServiceError < ::Aws::Errors::ServiceError; end

# source://aws-sdk-ecr//lib/aws-sdk-ecr/errors.rb#535
class Aws::ECR::Errors::TooManyTagsException < ::Aws::ECR::Errors::ServiceError
  # @param context [Seahorse::Client::RequestContext]
  # @param message [String]
  # @param data [Aws::ECR::Types::TooManyTagsException]
  # @return [TooManyTagsException] a new instance of TooManyTagsException
  #
  # source://aws-sdk-ecr//lib/aws-sdk-ecr/errors.rb#540
  def initialize(context, message, data = T.unsafe(nil)); end

  # @return [String]
  #
  # source://aws-sdk-ecr//lib/aws-sdk-ecr/errors.rb#545
  def message; end
end

# source://aws-sdk-ecr//lib/aws-sdk-ecr/errors.rb#550
class Aws::ECR::Errors::UnableToAccessSecretException < ::Aws::ECR::Errors::ServiceError
  # @param context [Seahorse::Client::RequestContext]
  # @param message [String]
  # @param data [Aws::ECR::Types::UnableToAccessSecretException]
  # @return [UnableToAccessSecretException] a new instance of UnableToAccessSecretException
  #
  # source://aws-sdk-ecr//lib/aws-sdk-ecr/errors.rb#555
  def initialize(context, message, data = T.unsafe(nil)); end

  # @return [String]
  #
  # source://aws-sdk-ecr//lib/aws-sdk-ecr/errors.rb#560
  def message; end
end

# source://aws-sdk-ecr//lib/aws-sdk-ecr/errors.rb#565
class Aws::ECR::Errors::UnableToDecryptSecretValueException < ::Aws::ECR::Errors::ServiceError
  # @param context [Seahorse::Client::RequestContext]
  # @param message [String]
  # @param data [Aws::ECR::Types::UnableToDecryptSecretValueException]
  # @return [UnableToDecryptSecretValueException] a new instance of UnableToDecryptSecretValueException
  #
  # source://aws-sdk-ecr//lib/aws-sdk-ecr/errors.rb#570
  def initialize(context, message, data = T.unsafe(nil)); end

  # @return [String]
  #
  # source://aws-sdk-ecr//lib/aws-sdk-ecr/errors.rb#575
  def message; end
end

# source://aws-sdk-ecr//lib/aws-sdk-ecr/errors.rb#580
class Aws::ECR::Errors::UnableToGetUpstreamImageException < ::Aws::ECR::Errors::ServiceError
  # @param context [Seahorse::Client::RequestContext]
  # @param message [String]
  # @param data [Aws::ECR::Types::UnableToGetUpstreamImageException]
  # @return [UnableToGetUpstreamImageException] a new instance of UnableToGetUpstreamImageException
  #
  # source://aws-sdk-ecr//lib/aws-sdk-ecr/errors.rb#585
  def initialize(context, message, data = T.unsafe(nil)); end

  # @return [String]
  #
  # source://aws-sdk-ecr//lib/aws-sdk-ecr/errors.rb#590
  def message; end
end

# source://aws-sdk-ecr//lib/aws-sdk-ecr/errors.rb#595
class Aws::ECR::Errors::UnableToGetUpstreamLayerException < ::Aws::ECR::Errors::ServiceError
  # @param context [Seahorse::Client::RequestContext]
  # @param message [String]
  # @param data [Aws::ECR::Types::UnableToGetUpstreamLayerException]
  # @return [UnableToGetUpstreamLayerException] a new instance of UnableToGetUpstreamLayerException
  #
  # source://aws-sdk-ecr//lib/aws-sdk-ecr/errors.rb#600
  def initialize(context, message, data = T.unsafe(nil)); end

  # @return [String]
  #
  # source://aws-sdk-ecr//lib/aws-sdk-ecr/errors.rb#605
  def message; end
end

# source://aws-sdk-ecr//lib/aws-sdk-ecr/errors.rb#610
class Aws::ECR::Errors::UnsupportedImageTypeException < ::Aws::ECR::Errors::ServiceError
  # @param context [Seahorse::Client::RequestContext]
  # @param message [String]
  # @param data [Aws::ECR::Types::UnsupportedImageTypeException]
  # @return [UnsupportedImageTypeException] a new instance of UnsupportedImageTypeException
  #
  # source://aws-sdk-ecr//lib/aws-sdk-ecr/errors.rb#615
  def initialize(context, message, data = T.unsafe(nil)); end

  # @return [String]
  #
  # source://aws-sdk-ecr//lib/aws-sdk-ecr/errors.rb#620
  def message; end
end

# source://aws-sdk-ecr//lib/aws-sdk-ecr/errors.rb#625
class Aws::ECR::Errors::UnsupportedUpstreamRegistryException < ::Aws::ECR::Errors::ServiceError
  # @param context [Seahorse::Client::RequestContext]
  # @param message [String]
  # @param data [Aws::ECR::Types::UnsupportedUpstreamRegistryException]
  # @return [UnsupportedUpstreamRegistryException] a new instance of UnsupportedUpstreamRegistryException
  #
  # source://aws-sdk-ecr//lib/aws-sdk-ecr/errors.rb#630
  def initialize(context, message, data = T.unsafe(nil)); end

  # @return [String]
  #
  # source://aws-sdk-ecr//lib/aws-sdk-ecr/errors.rb#635
  def message; end
end

# source://aws-sdk-ecr//lib/aws-sdk-ecr/errors.rb#640
class Aws::ECR::Errors::UploadNotFoundException < ::Aws::ECR::Errors::ServiceError
  # @param context [Seahorse::Client::RequestContext]
  # @param message [String]
  # @param data [Aws::ECR::Types::UploadNotFoundException]
  # @return [UploadNotFoundException] a new instance of UploadNotFoundException
  #
  # source://aws-sdk-ecr//lib/aws-sdk-ecr/errors.rb#645
  def initialize(context, message, data = T.unsafe(nil)); end

  # @return [String]
  #
  # source://aws-sdk-ecr//lib/aws-sdk-ecr/errors.rb#650
  def message; end
end

# source://aws-sdk-ecr//lib/aws-sdk-ecr/errors.rb#655
class Aws::ECR::Errors::ValidationException < ::Aws::ECR::Errors::ServiceError
  # @param context [Seahorse::Client::RequestContext]
  # @param message [String]
  # @param data [Aws::ECR::Types::ValidationException]
  # @return [ValidationException] a new instance of ValidationException
  #
  # source://aws-sdk-ecr//lib/aws-sdk-ecr/errors.rb#660
  def initialize(context, message, data = T.unsafe(nil)); end

  # @return [String]
  #
  # source://aws-sdk-ecr//lib/aws-sdk-ecr/errors.rb#665
  def message; end
end

# source://aws-sdk-ecr//lib/aws-sdk-ecr.rb#56
Aws::ECR::GEM_VERSION = T.let(T.unsafe(nil), String)

# source://aws-sdk-ecr//lib/aws-sdk-ecr/plugins/endpoints.rb#12
module Aws::ECR::Plugins; end

# source://aws-sdk-ecr//lib/aws-sdk-ecr/plugins/endpoints.rb#13
class Aws::ECR::Plugins::Endpoints < ::Seahorse::Client::Plugin
  # source://aws-sdk-ecr//lib/aws-sdk-ecr/plugins/endpoints.rb#150
  def add_handlers(handlers, _config); end
end

# @api private
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/plugins/endpoints.rb#26
class Aws::ECR::Plugins::Endpoints::Handler < ::Seahorse::Client::Handler
  # @api private
  #
  # source://aws-sdk-ecr//lib/aws-sdk-ecr/plugins/endpoints.rb#27
  def call(context); end

  private

  # @api private
  #
  # source://aws-sdk-ecr//lib/aws-sdk-ecr/plugins/endpoints.rb#47
  def apply_endpoint_headers(context, headers); end

  # @api private
  #
  # source://aws-sdk-ecr//lib/aws-sdk-ecr/plugins/endpoints.rb#58
  def parameters_for_operation(context); end
end

# source://aws-sdk-ecr//lib/aws-sdk-ecr/resource.rb#12
class Aws::ECR::Resource
  # @option options
  # @param options [{}]
  # @return [Resource] a new instance of Resource
  #
  # source://aws-sdk-ecr//lib/aws-sdk-ecr/resource.rb#16
  def initialize(options = T.unsafe(nil)); end

  # @return [Client]
  #
  # source://aws-sdk-ecr//lib/aws-sdk-ecr/resource.rb#21
  def client; end
end

# source://aws-sdk-ecr//lib/aws-sdk-ecr/types.rb#11
module Aws::ECR::Types; end

# This data type is used in the ImageScanFinding data type.
#
# @see http://docs.aws.amazon.com/goto/WebAPI/ecr-2015-09-21/Attribute AWS API Documentation
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/types.rb#27
class Aws::ECR::Types::Attribute < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-ecr//lib/aws-sdk-ecr/types.rb#28
Aws::ECR::Types::Attribute::SENSITIVE = T.let(T.unsafe(nil), Array)

# An object representing authorization data for an Amazon ECR registry.
#
# @see http://docs.aws.amazon.com/goto/WebAPI/ecr-2015-09-21/AuthorizationData AWS API Documentation
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/types.rb#58
class Aws::ECR::Types::AuthorizationData < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-ecr//lib/aws-sdk-ecr/types.rb#59
Aws::ECR::Types::AuthorizationData::SENSITIVE = T.let(T.unsafe(nil), Array)

# The image details of the Amazon ECR container image.
#
# @see http://docs.aws.amazon.com/goto/WebAPI/ecr-2015-09-21/AwsEcrContainerImageDetails AWS API Documentation
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/types.rb#108
class Aws::ECR::Types::AwsEcrContainerImageDetails < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-ecr//lib/aws-sdk-ecr/types.rb#109
Aws::ECR::Types::AwsEcrContainerImageDetails::SENSITIVE = T.let(T.unsafe(nil), Array)

# @see http://docs.aws.amazon.com/goto/WebAPI/ecr-2015-09-21/BatchCheckLayerAvailabilityRequest AWS API Documentation
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/types.rb#133
class Aws::ECR::Types::BatchCheckLayerAvailabilityRequest < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-ecr//lib/aws-sdk-ecr/types.rb#134
Aws::ECR::Types::BatchCheckLayerAvailabilityRequest::SENSITIVE = T.let(T.unsafe(nil), Array)

# @see http://docs.aws.amazon.com/goto/WebAPI/ecr-2015-09-21/BatchCheckLayerAvailabilityResponse AWS API Documentation
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/types.rb#151
class Aws::ECR::Types::BatchCheckLayerAvailabilityResponse < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-ecr//lib/aws-sdk-ecr/types.rb#152
Aws::ECR::Types::BatchCheckLayerAvailabilityResponse::SENSITIVE = T.let(T.unsafe(nil), Array)

# Deletes specified images within a specified repository. Images are
# specified with either the `imageTag` or `imageDigest`.
#
# @see http://docs.aws.amazon.com/goto/WebAPI/ecr-2015-09-21/BatchDeleteImageRequest AWS API Documentation
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/types.rb#180
class Aws::ECR::Types::BatchDeleteImageRequest < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-ecr//lib/aws-sdk-ecr/types.rb#181
Aws::ECR::Types::BatchDeleteImageRequest::SENSITIVE = T.let(T.unsafe(nil), Array)

# @see http://docs.aws.amazon.com/goto/WebAPI/ecr-2015-09-21/BatchDeleteImageResponse AWS API Documentation
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/types.rb#197
class Aws::ECR::Types::BatchDeleteImageResponse < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-ecr//lib/aws-sdk-ecr/types.rb#198
Aws::ECR::Types::BatchDeleteImageResponse::SENSITIVE = T.let(T.unsafe(nil), Array)

# @see http://docs.aws.amazon.com/goto/WebAPI/ecr-2015-09-21/BatchGetImageRequest AWS API Documentation
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/types.rb#232
class Aws::ECR::Types::BatchGetImageRequest < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-ecr//lib/aws-sdk-ecr/types.rb#233
Aws::ECR::Types::BatchGetImageRequest::SENSITIVE = T.let(T.unsafe(nil), Array)

# @see http://docs.aws.amazon.com/goto/WebAPI/ecr-2015-09-21/BatchGetImageResponse AWS API Documentation
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/types.rb#250
class Aws::ECR::Types::BatchGetImageResponse < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-ecr//lib/aws-sdk-ecr/types.rb#251
Aws::ECR::Types::BatchGetImageResponse::SENSITIVE = T.let(T.unsafe(nil), Array)

# @see http://docs.aws.amazon.com/goto/WebAPI/ecr-2015-09-21/BatchGetRepositoryScanningConfigurationRequest AWS API Documentation
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/types.rb#262
class Aws::ECR::Types::BatchGetRepositoryScanningConfigurationRequest < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-ecr//lib/aws-sdk-ecr/types.rb#263
Aws::ECR::Types::BatchGetRepositoryScanningConfigurationRequest::SENSITIVE = T.let(T.unsafe(nil), Array)

# @see http://docs.aws.amazon.com/goto/WebAPI/ecr-2015-09-21/BatchGetRepositoryScanningConfigurationResponse AWS API Documentation
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/types.rb#279
class Aws::ECR::Types::BatchGetRepositoryScanningConfigurationResponse < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-ecr//lib/aws-sdk-ecr/types.rb#280
Aws::ECR::Types::BatchGetRepositoryScanningConfigurationResponse::SENSITIVE = T.let(T.unsafe(nil), Array)

# @see http://docs.aws.amazon.com/goto/WebAPI/ecr-2015-09-21/CompleteLayerUploadRequest AWS API Documentation
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/types.rb#309
class Aws::ECR::Types::CompleteLayerUploadRequest < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-ecr//lib/aws-sdk-ecr/types.rb#310
Aws::ECR::Types::CompleteLayerUploadRequest::SENSITIVE = T.let(T.unsafe(nil), Array)

# @see http://docs.aws.amazon.com/goto/WebAPI/ecr-2015-09-21/CompleteLayerUploadResponse AWS API Documentation
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/types.rb#336
class Aws::ECR::Types::CompleteLayerUploadResponse < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-ecr//lib/aws-sdk-ecr/types.rb#337
Aws::ECR::Types::CompleteLayerUploadResponse::SENSITIVE = T.let(T.unsafe(nil), Array)

# @see http://docs.aws.amazon.com/goto/WebAPI/ecr-2015-09-21/CreatePullThroughCacheRuleRequest AWS API Documentation
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/types.rb#389
class Aws::ECR::Types::CreatePullThroughCacheRuleRequest < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-ecr//lib/aws-sdk-ecr/types.rb#390
Aws::ECR::Types::CreatePullThroughCacheRuleRequest::SENSITIVE = T.let(T.unsafe(nil), Array)

# @see http://docs.aws.amazon.com/goto/WebAPI/ecr-2015-09-21/CreatePullThroughCacheRuleResponse AWS API Documentation
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/types.rb#431
class Aws::ECR::Types::CreatePullThroughCacheRuleResponse < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-ecr//lib/aws-sdk-ecr/types.rb#432
Aws::ECR::Types::CreatePullThroughCacheRuleResponse::SENSITIVE = T.let(T.unsafe(nil), Array)

# @see http://docs.aws.amazon.com/goto/WebAPI/ecr-2015-09-21/CreateRepositoryRequest AWS API Documentation
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/types.rb#488
class Aws::ECR::Types::CreateRepositoryRequest < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-ecr//lib/aws-sdk-ecr/types.rb#489
Aws::ECR::Types::CreateRepositoryRequest::SENSITIVE = T.let(T.unsafe(nil), Array)

# @see http://docs.aws.amazon.com/goto/WebAPI/ecr-2015-09-21/CreateRepositoryResponse AWS API Documentation
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/types.rb#500
class Aws::ECR::Types::CreateRepositoryResponse < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-ecr//lib/aws-sdk-ecr/types.rb#501
Aws::ECR::Types::CreateRepositoryResponse::SENSITIVE = T.let(T.unsafe(nil), Array)

# The CVSS score for a finding.
#
# @see http://docs.aws.amazon.com/goto/WebAPI/ecr-2015-09-21/CvssScore AWS API Documentation
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/types.rb#529
class Aws::ECR::Types::CvssScore < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-ecr//lib/aws-sdk-ecr/types.rb#530
Aws::ECR::Types::CvssScore::SENSITIVE = T.let(T.unsafe(nil), Array)

# Details on adjustments Amazon Inspector made to the CVSS score for a
# finding.
#
# @see http://docs.aws.amazon.com/goto/WebAPI/ecr-2015-09-21/CvssScoreAdjustment AWS API Documentation
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/types.rb#549
class Aws::ECR::Types::CvssScoreAdjustment < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-ecr//lib/aws-sdk-ecr/types.rb#550
Aws::ECR::Types::CvssScoreAdjustment::SENSITIVE = T.let(T.unsafe(nil), Array)

# Information about the CVSS score.
#
# @see http://docs.aws.amazon.com/goto/WebAPI/ecr-2015-09-21/CvssScoreDetails AWS API Documentation
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/types.rb#584
class Aws::ECR::Types::CvssScoreDetails < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-ecr//lib/aws-sdk-ecr/types.rb#585
Aws::ECR::Types::CvssScoreDetails::SENSITIVE = T.let(T.unsafe(nil), Array)

# @see http://docs.aws.amazon.com/goto/WebAPI/ecr-2015-09-21/DeleteLifecyclePolicyRequest AWS API Documentation
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/types.rb#603
class Aws::ECR::Types::DeleteLifecyclePolicyRequest < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-ecr//lib/aws-sdk-ecr/types.rb#604
Aws::ECR::Types::DeleteLifecyclePolicyRequest::SENSITIVE = T.let(T.unsafe(nil), Array)

# @see http://docs.aws.amazon.com/goto/WebAPI/ecr-2015-09-21/DeleteLifecyclePolicyResponse AWS API Documentation
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/types.rb#630
class Aws::ECR::Types::DeleteLifecyclePolicyResponse < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-ecr//lib/aws-sdk-ecr/types.rb#631
Aws::ECR::Types::DeleteLifecyclePolicyResponse::SENSITIVE = T.let(T.unsafe(nil), Array)

# @see http://docs.aws.amazon.com/goto/WebAPI/ecr-2015-09-21/DeletePullThroughCacheRuleRequest AWS API Documentation
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/types.rb#650
class Aws::ECR::Types::DeletePullThroughCacheRuleRequest < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-ecr//lib/aws-sdk-ecr/types.rb#651
Aws::ECR::Types::DeletePullThroughCacheRuleRequest::SENSITIVE = T.let(T.unsafe(nil), Array)

# @see http://docs.aws.amazon.com/goto/WebAPI/ecr-2015-09-21/DeletePullThroughCacheRuleResponse AWS API Documentation
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/types.rb#684
class Aws::ECR::Types::DeletePullThroughCacheRuleResponse < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-ecr//lib/aws-sdk-ecr/types.rb#685
Aws::ECR::Types::DeletePullThroughCacheRuleResponse::SENSITIVE = T.let(T.unsafe(nil), Array)

# @api private
# @see http://docs.aws.amazon.com/goto/WebAPI/ecr-2015-09-21/DeleteRegistryPolicyRequest AWS API Documentation
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/types.rb#693
class Aws::ECR::Types::DeleteRegistryPolicyRequest < ::Aws::EmptyStructure; end

# @see http://docs.aws.amazon.com/goto/WebAPI/ecr-2015-09-21/DeleteRegistryPolicyResponse AWS API Documentation
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/types.rb#707
class Aws::ECR::Types::DeleteRegistryPolicyResponse < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-ecr//lib/aws-sdk-ecr/types.rb#708
Aws::ECR::Types::DeleteRegistryPolicyResponse::SENSITIVE = T.let(T.unsafe(nil), Array)

# @see http://docs.aws.amazon.com/goto/WebAPI/ecr-2015-09-21/DeleteRepositoryPolicyRequest AWS API Documentation
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/types.rb#727
class Aws::ECR::Types::DeleteRepositoryPolicyRequest < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-ecr//lib/aws-sdk-ecr/types.rb#728
Aws::ECR::Types::DeleteRepositoryPolicyRequest::SENSITIVE = T.let(T.unsafe(nil), Array)

# @see http://docs.aws.amazon.com/goto/WebAPI/ecr-2015-09-21/DeleteRepositoryPolicyResponse AWS API Documentation
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/types.rb#749
class Aws::ECR::Types::DeleteRepositoryPolicyResponse < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-ecr//lib/aws-sdk-ecr/types.rb#750
Aws::ECR::Types::DeleteRepositoryPolicyResponse::SENSITIVE = T.let(T.unsafe(nil), Array)

# @see http://docs.aws.amazon.com/goto/WebAPI/ecr-2015-09-21/DeleteRepositoryRequest AWS API Documentation
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/types.rb#775
class Aws::ECR::Types::DeleteRepositoryRequest < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-ecr//lib/aws-sdk-ecr/types.rb#776
Aws::ECR::Types::DeleteRepositoryRequest::SENSITIVE = T.let(T.unsafe(nil), Array)

# @see http://docs.aws.amazon.com/goto/WebAPI/ecr-2015-09-21/DeleteRepositoryResponse AWS API Documentation
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/types.rb#787
class Aws::ECR::Types::DeleteRepositoryResponse < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-ecr//lib/aws-sdk-ecr/types.rb#788
Aws::ECR::Types::DeleteRepositoryResponse::SENSITIVE = T.let(T.unsafe(nil), Array)

# @see http://docs.aws.amazon.com/goto/WebAPI/ecr-2015-09-21/DescribeImageReplicationStatusRequest AWS API Documentation
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/types.rb#811
class Aws::ECR::Types::DescribeImageReplicationStatusRequest < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-ecr//lib/aws-sdk-ecr/types.rb#812
Aws::ECR::Types::DescribeImageReplicationStatusRequest::SENSITIVE = T.let(T.unsafe(nil), Array)

# @see http://docs.aws.amazon.com/goto/WebAPI/ecr-2015-09-21/DescribeImageReplicationStatusResponse AWS API Documentation
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/types.rb#835
class Aws::ECR::Types::DescribeImageReplicationStatusResponse < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-ecr//lib/aws-sdk-ecr/types.rb#836
Aws::ECR::Types::DescribeImageReplicationStatusResponse::SENSITIVE = T.let(T.unsafe(nil), Array)

# @see http://docs.aws.amazon.com/goto/WebAPI/ecr-2015-09-21/DescribeImageScanFindingsRequest AWS API Documentation
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/types.rb#885
class Aws::ECR::Types::DescribeImageScanFindingsRequest < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-ecr//lib/aws-sdk-ecr/types.rb#886
Aws::ECR::Types::DescribeImageScanFindingsRequest::SENSITIVE = T.let(T.unsafe(nil), Array)

# @see http://docs.aws.amazon.com/goto/WebAPI/ecr-2015-09-21/DescribeImageScanFindingsResponse AWS API Documentation
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/types.rb#927
class Aws::ECR::Types::DescribeImageScanFindingsResponse < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-ecr//lib/aws-sdk-ecr/types.rb#928
Aws::ECR::Types::DescribeImageScanFindingsResponse::SENSITIVE = T.let(T.unsafe(nil), Array)

# An object representing a filter on a DescribeImages operation.
#
# @see http://docs.aws.amazon.com/goto/WebAPI/ecr-2015-09-21/DescribeImagesFilter AWS API Documentation
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/types.rb#942
class Aws::ECR::Types::DescribeImagesFilter < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-ecr//lib/aws-sdk-ecr/types.rb#943
Aws::ECR::Types::DescribeImagesFilter::SENSITIVE = T.let(T.unsafe(nil), Array)

# @see http://docs.aws.amazon.com/goto/WebAPI/ecr-2015-09-21/DescribeImagesRequest AWS API Documentation
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/types.rb#996
class Aws::ECR::Types::DescribeImagesRequest < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-ecr//lib/aws-sdk-ecr/types.rb#997
Aws::ECR::Types::DescribeImagesRequest::SENSITIVE = T.let(T.unsafe(nil), Array)

# @see http://docs.aws.amazon.com/goto/WebAPI/ecr-2015-09-21/DescribeImagesResponse AWS API Documentation
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/types.rb#1017
class Aws::ECR::Types::DescribeImagesResponse < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-ecr//lib/aws-sdk-ecr/types.rb#1018
Aws::ECR::Types::DescribeImagesResponse::SENSITIVE = T.let(T.unsafe(nil), Array)

# @see http://docs.aws.amazon.com/goto/WebAPI/ecr-2015-09-21/DescribePullThroughCacheRulesRequest AWS API Documentation
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/types.rb#1062
class Aws::ECR::Types::DescribePullThroughCacheRulesRequest < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-ecr//lib/aws-sdk-ecr/types.rb#1063
Aws::ECR::Types::DescribePullThroughCacheRulesRequest::SENSITIVE = T.let(T.unsafe(nil), Array)

# @see http://docs.aws.amazon.com/goto/WebAPI/ecr-2015-09-21/DescribePullThroughCacheRulesResponse AWS API Documentation
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/types.rb#1084
class Aws::ECR::Types::DescribePullThroughCacheRulesResponse < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-ecr//lib/aws-sdk-ecr/types.rb#1085
Aws::ECR::Types::DescribePullThroughCacheRulesResponse::SENSITIVE = T.let(T.unsafe(nil), Array)

# @api private
# @see http://docs.aws.amazon.com/goto/WebAPI/ecr-2015-09-21/DescribeRegistryRequest AWS API Documentation
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/types.rb#1093
class Aws::ECR::Types::DescribeRegistryRequest < ::Aws::EmptyStructure; end

# @see http://docs.aws.amazon.com/goto/WebAPI/ecr-2015-09-21/DescribeRegistryResponse AWS API Documentation
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/types.rb#1107
class Aws::ECR::Types::DescribeRegistryResponse < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-ecr//lib/aws-sdk-ecr/types.rb#1108
Aws::ECR::Types::DescribeRegistryResponse::SENSITIVE = T.let(T.unsafe(nil), Array)

# @see http://docs.aws.amazon.com/goto/WebAPI/ecr-2015-09-21/DescribeRepositoriesRequest AWS API Documentation
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/types.rb#1158
class Aws::ECR::Types::DescribeRepositoriesRequest < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-ecr//lib/aws-sdk-ecr/types.rb#1159
Aws::ECR::Types::DescribeRepositoriesRequest::SENSITIVE = T.let(T.unsafe(nil), Array)

# @see http://docs.aws.amazon.com/goto/WebAPI/ecr-2015-09-21/DescribeRepositoriesResponse AWS API Documentation
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/types.rb#1179
class Aws::ECR::Types::DescribeRepositoriesResponse < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-ecr//lib/aws-sdk-ecr/types.rb#1180
Aws::ECR::Types::DescribeRepositoriesResponse::SENSITIVE = T.let(T.unsafe(nil), Array)

# The specified layer upload does not contain any layer parts.
#
# @see http://docs.aws.amazon.com/goto/WebAPI/ecr-2015-09-21/EmptyUploadException AWS API Documentation
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/types.rb#1193
class Aws::ECR::Types::EmptyUploadException < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-ecr//lib/aws-sdk-ecr/types.rb#1194
Aws::ECR::Types::EmptyUploadException::SENSITIVE = T.let(T.unsafe(nil), Array)

# The encryption configuration for the repository. This determines how
# the contents of your repository are encrypted at rest.
#
# By default, when no encryption configuration is set or the `AES256`
# encryption type is used, Amazon ECR uses server-side encryption with
# Amazon S3-managed encryption keys which encrypts your data at rest
# using an AES-256 encryption algorithm. This does not require any
# action on your part.
#
# For more control over the encryption of the contents of your
# repository, you can use server-side encryption with Key Management
# Service key stored in Key Management Service (KMS) to encrypt your
# images. For more information, see [Amazon ECR encryption at rest][1]
# in the *Amazon Elastic Container Registry User Guide*.
#
#
#
# [1]: https://docs.aws.amazon.com/AmazonECR/latest/userguide/encryption-at-rest.html
#
# @see http://docs.aws.amazon.com/goto/WebAPI/ecr-2015-09-21/EncryptionConfiguration AWS API Documentation
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/types.rb#1255
class Aws::ECR::Types::EncryptionConfiguration < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-ecr//lib/aws-sdk-ecr/types.rb#1256
Aws::ECR::Types::EncryptionConfiguration::SENSITIVE = T.let(T.unsafe(nil), Array)

# The details of an enhanced image scan. This is returned when enhanced
# scanning is enabled for your private registry.
#
# @see http://docs.aws.amazon.com/goto/WebAPI/ecr-2015-09-21/EnhancedImageScanFinding AWS API Documentation
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/types.rb#1342
class Aws::ECR::Types::EnhancedImageScanFinding < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-ecr//lib/aws-sdk-ecr/types.rb#1343
Aws::ECR::Types::EnhancedImageScanFinding::SENSITIVE = T.let(T.unsafe(nil), Array)

# @see http://docs.aws.amazon.com/goto/WebAPI/ecr-2015-09-21/GetAuthorizationTokenRequest AWS API Documentation
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/types.rb#1356
class Aws::ECR::Types::GetAuthorizationTokenRequest < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-ecr//lib/aws-sdk-ecr/types.rb#1357
Aws::ECR::Types::GetAuthorizationTokenRequest::SENSITIVE = T.let(T.unsafe(nil), Array)

# @see http://docs.aws.amazon.com/goto/WebAPI/ecr-2015-09-21/GetAuthorizationTokenResponse AWS API Documentation
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/types.rb#1369
class Aws::ECR::Types::GetAuthorizationTokenResponse < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-ecr//lib/aws-sdk-ecr/types.rb#1370
Aws::ECR::Types::GetAuthorizationTokenResponse::SENSITIVE = T.let(T.unsafe(nil), Array)

# @see http://docs.aws.amazon.com/goto/WebAPI/ecr-2015-09-21/GetDownloadUrlForLayerRequest AWS API Documentation
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/types.rb#1394
class Aws::ECR::Types::GetDownloadUrlForLayerRequest < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-ecr//lib/aws-sdk-ecr/types.rb#1395
Aws::ECR::Types::GetDownloadUrlForLayerRequest::SENSITIVE = T.let(T.unsafe(nil), Array)

# @see http://docs.aws.amazon.com/goto/WebAPI/ecr-2015-09-21/GetDownloadUrlForLayerResponse AWS API Documentation
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/types.rb#1411
class Aws::ECR::Types::GetDownloadUrlForLayerResponse < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-ecr//lib/aws-sdk-ecr/types.rb#1412
Aws::ECR::Types::GetDownloadUrlForLayerResponse::SENSITIVE = T.let(T.unsafe(nil), Array)

# @see http://docs.aws.amazon.com/goto/WebAPI/ecr-2015-09-21/GetLifecyclePolicyPreviewRequest AWS API Documentation
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/types.rb#1467
class Aws::ECR::Types::GetLifecyclePolicyPreviewRequest < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-ecr//lib/aws-sdk-ecr/types.rb#1468
Aws::ECR::Types::GetLifecyclePolicyPreviewRequest::SENSITIVE = T.let(T.unsafe(nil), Array)

# @see http://docs.aws.amazon.com/goto/WebAPI/ecr-2015-09-21/GetLifecyclePolicyPreviewResponse AWS API Documentation
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/types.rb#1513
class Aws::ECR::Types::GetLifecyclePolicyPreviewResponse < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-ecr//lib/aws-sdk-ecr/types.rb#1514
Aws::ECR::Types::GetLifecyclePolicyPreviewResponse::SENSITIVE = T.let(T.unsafe(nil), Array)

# @see http://docs.aws.amazon.com/goto/WebAPI/ecr-2015-09-21/GetLifecyclePolicyRequest AWS API Documentation
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/types.rb#1532
class Aws::ECR::Types::GetLifecyclePolicyRequest < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-ecr//lib/aws-sdk-ecr/types.rb#1533
Aws::ECR::Types::GetLifecyclePolicyRequest::SENSITIVE = T.let(T.unsafe(nil), Array)

# @see http://docs.aws.amazon.com/goto/WebAPI/ecr-2015-09-21/GetLifecyclePolicyResponse AWS API Documentation
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/types.rb#1559
class Aws::ECR::Types::GetLifecyclePolicyResponse < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-ecr//lib/aws-sdk-ecr/types.rb#1560
Aws::ECR::Types::GetLifecyclePolicyResponse::SENSITIVE = T.let(T.unsafe(nil), Array)

# @api private
# @see http://docs.aws.amazon.com/goto/WebAPI/ecr-2015-09-21/GetRegistryPolicyRequest AWS API Documentation
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/types.rb#1568
class Aws::ECR::Types::GetRegistryPolicyRequest < ::Aws::EmptyStructure; end

# @see http://docs.aws.amazon.com/goto/WebAPI/ecr-2015-09-21/GetRegistryPolicyResponse AWS API Documentation
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/types.rb#1582
class Aws::ECR::Types::GetRegistryPolicyResponse < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-ecr//lib/aws-sdk-ecr/types.rb#1583
Aws::ECR::Types::GetRegistryPolicyResponse::SENSITIVE = T.let(T.unsafe(nil), Array)

# @api private
# @see http://docs.aws.amazon.com/goto/WebAPI/ecr-2015-09-21/GetRegistryScanningConfigurationRequest AWS API Documentation
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/types.rb#1591
class Aws::ECR::Types::GetRegistryScanningConfigurationRequest < ::Aws::EmptyStructure; end

# @see http://docs.aws.amazon.com/goto/WebAPI/ecr-2015-09-21/GetRegistryScanningConfigurationResponse AWS API Documentation
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/types.rb#1605
class Aws::ECR::Types::GetRegistryScanningConfigurationResponse < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-ecr//lib/aws-sdk-ecr/types.rb#1606
Aws::ECR::Types::GetRegistryScanningConfigurationResponse::SENSITIVE = T.let(T.unsafe(nil), Array)

# @see http://docs.aws.amazon.com/goto/WebAPI/ecr-2015-09-21/GetRepositoryPolicyRequest AWS API Documentation
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/types.rb#1624
class Aws::ECR::Types::GetRepositoryPolicyRequest < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-ecr//lib/aws-sdk-ecr/types.rb#1625
Aws::ECR::Types::GetRepositoryPolicyRequest::SENSITIVE = T.let(T.unsafe(nil), Array)

# @see http://docs.aws.amazon.com/goto/WebAPI/ecr-2015-09-21/GetRepositoryPolicyResponse AWS API Documentation
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/types.rb#1646
class Aws::ECR::Types::GetRepositoryPolicyResponse < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-ecr//lib/aws-sdk-ecr/types.rb#1647
Aws::ECR::Types::GetRepositoryPolicyResponse::SENSITIVE = T.let(T.unsafe(nil), Array)

# An object representing an Amazon ECR image.
#
# @see http://docs.aws.amazon.com/goto/WebAPI/ecr-2015-09-21/Image AWS API Documentation
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/types.rb#1682
class Aws::ECR::Types::Image < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-ecr//lib/aws-sdk-ecr/types.rb#1683
Aws::ECR::Types::Image::SENSITIVE = T.let(T.unsafe(nil), Array)

# The specified image has already been pushed, and there were no changes
# to the manifest or image tag after the last push.
#
# @see http://docs.aws.amazon.com/goto/WebAPI/ecr-2015-09-21/ImageAlreadyExistsException AWS API Documentation
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/types.rb#1697
class Aws::ECR::Types::ImageAlreadyExistsException < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-ecr//lib/aws-sdk-ecr/types.rb#1698
Aws::ECR::Types::ImageAlreadyExistsException::SENSITIVE = T.let(T.unsafe(nil), Array)

# An object that describes an image returned by a DescribeImages
# operation.
#
# @see http://docs.aws.amazon.com/goto/WebAPI/ecr-2015-09-21/ImageDetail AWS API Documentation
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/types.rb#1786
class Aws::ECR::Types::ImageDetail < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-ecr//lib/aws-sdk-ecr/types.rb#1787
Aws::ECR::Types::ImageDetail::SENSITIVE = T.let(T.unsafe(nil), Array)

# The specified image digest does not match the digest that Amazon ECR
# calculated for the image.
#
# @see http://docs.aws.amazon.com/goto/WebAPI/ecr-2015-09-21/ImageDigestDoesNotMatchException AWS API Documentation
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/types.rb#1800
class Aws::ECR::Types::ImageDigestDoesNotMatchException < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-ecr//lib/aws-sdk-ecr/types.rb#1801
Aws::ECR::Types::ImageDigestDoesNotMatchException::SENSITIVE = T.let(T.unsafe(nil), Array)

# An object representing an Amazon ECR image failure.
#
# @see http://docs.aws.amazon.com/goto/WebAPI/ecr-2015-09-21/ImageFailure AWS API Documentation
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/types.rb#1824
class Aws::ECR::Types::ImageFailure < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-ecr//lib/aws-sdk-ecr/types.rb#1825
Aws::ECR::Types::ImageFailure::SENSITIVE = T.let(T.unsafe(nil), Array)

# An object with identifying information for an image in an Amazon ECR
# repository.
#
# @see http://docs.aws.amazon.com/goto/WebAPI/ecr-2015-09-21/ImageIdentifier AWS API Documentation
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/types.rb#1844
class Aws::ECR::Types::ImageIdentifier < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-ecr//lib/aws-sdk-ecr/types.rb#1845
Aws::ECR::Types::ImageIdentifier::SENSITIVE = T.let(T.unsafe(nil), Array)

# The image requested does not exist in the specified repository.
#
# @see http://docs.aws.amazon.com/goto/WebAPI/ecr-2015-09-21/ImageNotFoundException AWS API Documentation
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/types.rb#1857
class Aws::ECR::Types::ImageNotFoundException < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-ecr//lib/aws-sdk-ecr/types.rb#1858
Aws::ECR::Types::ImageNotFoundException::SENSITIVE = T.let(T.unsafe(nil), Array)

# The status of the replication process for an image.
#
# @see http://docs.aws.amazon.com/goto/WebAPI/ecr-2015-09-21/ImageReplicationStatus AWS API Documentation
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/types.rb#1887
class Aws::ECR::Types::ImageReplicationStatus < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-ecr//lib/aws-sdk-ecr/types.rb#1888
Aws::ECR::Types::ImageReplicationStatus::SENSITIVE = T.let(T.unsafe(nil), Array)

# Contains information about an image scan finding.
#
# @see http://docs.aws.amazon.com/goto/WebAPI/ecr-2015-09-21/ImageScanFinding AWS API Documentation
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/types.rb#1923
class Aws::ECR::Types::ImageScanFinding < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-ecr//lib/aws-sdk-ecr/types.rb#1924
Aws::ECR::Types::ImageScanFinding::SENSITIVE = T.let(T.unsafe(nil), Array)

# The details of an image scan.
#
# @see http://docs.aws.amazon.com/goto/WebAPI/ecr-2015-09-21/ImageScanFindings AWS API Documentation
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/types.rb#1957
class Aws::ECR::Types::ImageScanFindings < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-ecr//lib/aws-sdk-ecr/types.rb#1958
Aws::ECR::Types::ImageScanFindings::SENSITIVE = T.let(T.unsafe(nil), Array)

# A summary of the last completed image scan.
#
# @see http://docs.aws.amazon.com/goto/WebAPI/ecr-2015-09-21/ImageScanFindingsSummary AWS API Documentation
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/types.rb#1981
class Aws::ECR::Types::ImageScanFindingsSummary < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-ecr//lib/aws-sdk-ecr/types.rb#1982
Aws::ECR::Types::ImageScanFindingsSummary::SENSITIVE = T.let(T.unsafe(nil), Array)

# The current status of an image scan.
#
# @see http://docs.aws.amazon.com/goto/WebAPI/ecr-2015-09-21/ImageScanStatus AWS API Documentation
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/types.rb#2000
class Aws::ECR::Types::ImageScanStatus < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-ecr//lib/aws-sdk-ecr/types.rb#2001
Aws::ECR::Types::ImageScanStatus::SENSITIVE = T.let(T.unsafe(nil), Array)

# The image scanning configuration for a repository.
#
# @see http://docs.aws.amazon.com/goto/WebAPI/ecr-2015-09-21/ImageScanningConfiguration AWS API Documentation
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/types.rb#2022
class Aws::ECR::Types::ImageScanningConfiguration < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-ecr//lib/aws-sdk-ecr/types.rb#2023
Aws::ECR::Types::ImageScanningConfiguration::SENSITIVE = T.let(T.unsafe(nil), Array)

# The specified image is tagged with a tag that already exists. The
# repository is configured for tag immutability.
#
# @see http://docs.aws.amazon.com/goto/WebAPI/ecr-2015-09-21/ImageTagAlreadyExistsException AWS API Documentation
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/types.rb#2036
class Aws::ECR::Types::ImageTagAlreadyExistsException < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-ecr//lib/aws-sdk-ecr/types.rb#2037
Aws::ECR::Types::ImageTagAlreadyExistsException::SENSITIVE = T.let(T.unsafe(nil), Array)

# @see http://docs.aws.amazon.com/goto/WebAPI/ecr-2015-09-21/InitiateLayerUploadRequest AWS API Documentation
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/types.rb#2055
class Aws::ECR::Types::InitiateLayerUploadRequest < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-ecr//lib/aws-sdk-ecr/types.rb#2056
Aws::ECR::Types::InitiateLayerUploadRequest::SENSITIVE = T.let(T.unsafe(nil), Array)

# @see http://docs.aws.amazon.com/goto/WebAPI/ecr-2015-09-21/InitiateLayerUploadResponse AWS API Documentation
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/types.rb#2074
class Aws::ECR::Types::InitiateLayerUploadResponse < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-ecr//lib/aws-sdk-ecr/types.rb#2075
Aws::ECR::Types::InitiateLayerUploadResponse::SENSITIVE = T.let(T.unsafe(nil), Array)

# The layer digest calculation performed by Amazon ECR upon receipt of
# the image layer does not match the digest specified.
#
# @see http://docs.aws.amazon.com/goto/WebAPI/ecr-2015-09-21/InvalidLayerException AWS API Documentation
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/types.rb#2089
class Aws::ECR::Types::InvalidLayerException < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-ecr//lib/aws-sdk-ecr/types.rb#2090
Aws::ECR::Types::InvalidLayerException::SENSITIVE = T.let(T.unsafe(nil), Array)

# The layer part size is not valid, or the first byte specified is not
# consecutive to the last byte of a previous layer part upload.
#
# @see http://docs.aws.amazon.com/goto/WebAPI/ecr-2015-09-21/InvalidLayerPartException AWS API Documentation
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/types.rb#2125
class Aws::ECR::Types::InvalidLayerPartException < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-ecr//lib/aws-sdk-ecr/types.rb#2126
Aws::ECR::Types::InvalidLayerPartException::SENSITIVE = T.let(T.unsafe(nil), Array)

# The specified parameter is invalid. Review the available parameters
# for the API request.
#
# @see http://docs.aws.amazon.com/goto/WebAPI/ecr-2015-09-21/InvalidParameterException AWS API Documentation
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/types.rb#2140
class Aws::ECR::Types::InvalidParameterException < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-ecr//lib/aws-sdk-ecr/types.rb#2141
Aws::ECR::Types::InvalidParameterException::SENSITIVE = T.let(T.unsafe(nil), Array)

# An invalid parameter has been specified. Tag keys can have a maximum
# character length of 128 characters, and tag values can have a maximum
# length of 256 characters.
#
# @see http://docs.aws.amazon.com/goto/WebAPI/ecr-2015-09-21/InvalidTagParameterException AWS API Documentation
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/types.rb#2155
class Aws::ECR::Types::InvalidTagParameterException < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-ecr//lib/aws-sdk-ecr/types.rb#2156
Aws::ECR::Types::InvalidTagParameterException::SENSITIVE = T.let(T.unsafe(nil), Array)

# The operation failed due to a KMS exception.
#
# @see http://docs.aws.amazon.com/goto/WebAPI/ecr-2015-09-21/KmsException AWS API Documentation
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/types.rb#2173
class Aws::ECR::Types::KmsException < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-ecr//lib/aws-sdk-ecr/types.rb#2174
Aws::ECR::Types::KmsException::SENSITIVE = T.let(T.unsafe(nil), Array)

# An object representing an Amazon ECR image layer.
#
# @see http://docs.aws.amazon.com/goto/WebAPI/ecr-2015-09-21/Layer AWS API Documentation
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/types.rb#2204
class Aws::ECR::Types::Layer < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-ecr//lib/aws-sdk-ecr/types.rb#2205
Aws::ECR::Types::Layer::SENSITIVE = T.let(T.unsafe(nil), Array)

# The image layer already exists in the associated repository.
#
# @see http://docs.aws.amazon.com/goto/WebAPI/ecr-2015-09-21/LayerAlreadyExistsException AWS API Documentation
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/types.rb#2218
class Aws::ECR::Types::LayerAlreadyExistsException < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-ecr//lib/aws-sdk-ecr/types.rb#2219
Aws::ECR::Types::LayerAlreadyExistsException::SENSITIVE = T.let(T.unsafe(nil), Array)

# An object representing an Amazon ECR image layer failure.
#
# @see http://docs.aws.amazon.com/goto/WebAPI/ecr-2015-09-21/LayerFailure AWS API Documentation
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/types.rb#2242
class Aws::ECR::Types::LayerFailure < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-ecr//lib/aws-sdk-ecr/types.rb#2243
Aws::ECR::Types::LayerFailure::SENSITIVE = T.let(T.unsafe(nil), Array)

# The specified layer is not available because it is not associated with
# an image. Unassociated image layers may be cleaned up at any time.
#
# @see http://docs.aws.amazon.com/goto/WebAPI/ecr-2015-09-21/LayerInaccessibleException AWS API Documentation
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/types.rb#2257
class Aws::ECR::Types::LayerInaccessibleException < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-ecr//lib/aws-sdk-ecr/types.rb#2258
Aws::ECR::Types::LayerInaccessibleException::SENSITIVE = T.let(T.unsafe(nil), Array)

# Layer parts must be at least 5 MiB in size.
#
# @see http://docs.aws.amazon.com/goto/WebAPI/ecr-2015-09-21/LayerPartTooSmallException AWS API Documentation
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/types.rb#2271
class Aws::ECR::Types::LayerPartTooSmallException < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-ecr//lib/aws-sdk-ecr/types.rb#2272
Aws::ECR::Types::LayerPartTooSmallException::SENSITIVE = T.let(T.unsafe(nil), Array)

# The specified layers could not be found, or the specified layer is not
# valid for this repository.
#
# @see http://docs.aws.amazon.com/goto/WebAPI/ecr-2015-09-21/LayersNotFoundException AWS API Documentation
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/types.rb#2286
class Aws::ECR::Types::LayersNotFoundException < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-ecr//lib/aws-sdk-ecr/types.rb#2287
Aws::ECR::Types::LayersNotFoundException::SENSITIVE = T.let(T.unsafe(nil), Array)

# The lifecycle policy could not be found, and no policy is set to the
# repository.
#
# @see http://docs.aws.amazon.com/goto/WebAPI/ecr-2015-09-21/LifecyclePolicyNotFoundException AWS API Documentation
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/types.rb#2300
class Aws::ECR::Types::LifecyclePolicyNotFoundException < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-ecr//lib/aws-sdk-ecr/types.rb#2301
Aws::ECR::Types::LifecyclePolicyNotFoundException::SENSITIVE = T.let(T.unsafe(nil), Array)

# The filter for the lifecycle policy preview.
#
# @see http://docs.aws.amazon.com/goto/WebAPI/ecr-2015-09-21/LifecyclePolicyPreviewFilter AWS API Documentation
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/types.rb#2314
class Aws::ECR::Types::LifecyclePolicyPreviewFilter < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-ecr//lib/aws-sdk-ecr/types.rb#2315
Aws::ECR::Types::LifecyclePolicyPreviewFilter::SENSITIVE = T.let(T.unsafe(nil), Array)

# The previous lifecycle policy preview request has not completed. Wait
# and try again.
#
# @see http://docs.aws.amazon.com/goto/WebAPI/ecr-2015-09-21/LifecyclePolicyPreviewInProgressException AWS API Documentation
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/types.rb#2328
class Aws::ECR::Types::LifecyclePolicyPreviewInProgressException < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-ecr//lib/aws-sdk-ecr/types.rb#2329
Aws::ECR::Types::LifecyclePolicyPreviewInProgressException::SENSITIVE = T.let(T.unsafe(nil), Array)

# There is no dry run for this repository.
#
# @see http://docs.aws.amazon.com/goto/WebAPI/ecr-2015-09-21/LifecyclePolicyPreviewNotFoundException AWS API Documentation
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/types.rb#2341
class Aws::ECR::Types::LifecyclePolicyPreviewNotFoundException < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-ecr//lib/aws-sdk-ecr/types.rb#2342
Aws::ECR::Types::LifecyclePolicyPreviewNotFoundException::SENSITIVE = T.let(T.unsafe(nil), Array)

# The result of the lifecycle policy preview.
#
# @see http://docs.aws.amazon.com/goto/WebAPI/ecr-2015-09-21/LifecyclePolicyPreviewResult AWS API Documentation
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/types.rb#2376
class Aws::ECR::Types::LifecyclePolicyPreviewResult < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-ecr//lib/aws-sdk-ecr/types.rb#2377
Aws::ECR::Types::LifecyclePolicyPreviewResult::SENSITIVE = T.let(T.unsafe(nil), Array)

# The summary of the lifecycle policy preview request.
#
# @see http://docs.aws.amazon.com/goto/WebAPI/ecr-2015-09-21/LifecyclePolicyPreviewSummary AWS API Documentation
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/types.rb#2390
class Aws::ECR::Types::LifecyclePolicyPreviewSummary < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-ecr//lib/aws-sdk-ecr/types.rb#2391
Aws::ECR::Types::LifecyclePolicyPreviewSummary::SENSITIVE = T.let(T.unsafe(nil), Array)

# The type of action to be taken.
#
# @see http://docs.aws.amazon.com/goto/WebAPI/ecr-2015-09-21/LifecyclePolicyRuleAction AWS API Documentation
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/types.rb#2404
class Aws::ECR::Types::LifecyclePolicyRuleAction < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-ecr//lib/aws-sdk-ecr/types.rb#2405
Aws::ECR::Types::LifecyclePolicyRuleAction::SENSITIVE = T.let(T.unsafe(nil), Array)

# The operation did not succeed because it would have exceeded a service
# limit for your account. For more information, see [Amazon ECR service
# quotas][1] in the Amazon Elastic Container Registry User Guide.
#
#
#
# [1]: https://docs.aws.amazon.com/AmazonECR/latest/userguide/service-quotas.html
#
# @see http://docs.aws.amazon.com/goto/WebAPI/ecr-2015-09-21/LimitExceededException AWS API Documentation
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/types.rb#2424
class Aws::ECR::Types::LimitExceededException < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-ecr//lib/aws-sdk-ecr/types.rb#2425
Aws::ECR::Types::LimitExceededException::SENSITIVE = T.let(T.unsafe(nil), Array)

# An object representing a filter on a ListImages operation.
#
# @see http://docs.aws.amazon.com/goto/WebAPI/ecr-2015-09-21/ListImagesFilter AWS API Documentation
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/types.rb#2439
class Aws::ECR::Types::ListImagesFilter < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-ecr//lib/aws-sdk-ecr/types.rb#2440
Aws::ECR::Types::ListImagesFilter::SENSITIVE = T.let(T.unsafe(nil), Array)

# @see http://docs.aws.amazon.com/goto/WebAPI/ecr-2015-09-21/ListImagesRequest AWS API Documentation
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/types.rb#2491
class Aws::ECR::Types::ListImagesRequest < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-ecr//lib/aws-sdk-ecr/types.rb#2492
Aws::ECR::Types::ListImagesRequest::SENSITIVE = T.let(T.unsafe(nil), Array)

# @see http://docs.aws.amazon.com/goto/WebAPI/ecr-2015-09-21/ListImagesResponse AWS API Documentation
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/types.rb#2511
class Aws::ECR::Types::ListImagesResponse < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-ecr//lib/aws-sdk-ecr/types.rb#2512
Aws::ECR::Types::ListImagesResponse::SENSITIVE = T.let(T.unsafe(nil), Array)

# @see http://docs.aws.amazon.com/goto/WebAPI/ecr-2015-09-21/ListTagsForResourceRequest AWS API Documentation
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/types.rb#2525
class Aws::ECR::Types::ListTagsForResourceRequest < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-ecr//lib/aws-sdk-ecr/types.rb#2526
Aws::ECR::Types::ListTagsForResourceRequest::SENSITIVE = T.let(T.unsafe(nil), Array)

# @see http://docs.aws.amazon.com/goto/WebAPI/ecr-2015-09-21/ListTagsForResourceResponse AWS API Documentation
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/types.rb#2537
class Aws::ECR::Types::ListTagsForResourceResponse < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-ecr//lib/aws-sdk-ecr/types.rb#2538
Aws::ECR::Types::ListTagsForResourceResponse::SENSITIVE = T.let(T.unsafe(nil), Array)

# Information about a package vulnerability finding.
#
# @see http://docs.aws.amazon.com/goto/WebAPI/ecr-2015-09-21/PackageVulnerabilityDetails AWS API Documentation
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/types.rb#2599
class Aws::ECR::Types::PackageVulnerabilityDetails < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-ecr//lib/aws-sdk-ecr/types.rb#2600
Aws::ECR::Types::PackageVulnerabilityDetails::SENSITIVE = T.let(T.unsafe(nil), Array)

# The details of a pull through cache rule.
#
# @see http://docs.aws.amazon.com/goto/WebAPI/ecr-2015-09-21/PullThroughCacheRule AWS API Documentation
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/types.rb#2649
class Aws::ECR::Types::PullThroughCacheRule < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-ecr//lib/aws-sdk-ecr/types.rb#2650
Aws::ECR::Types::PullThroughCacheRule::SENSITIVE = T.let(T.unsafe(nil), Array)

# A pull through cache rule with these settings already exists for the
# private registry.
#
# @see http://docs.aws.amazon.com/goto/WebAPI/ecr-2015-09-21/PullThroughCacheRuleAlreadyExistsException AWS API Documentation
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/types.rb#2663
class Aws::ECR::Types::PullThroughCacheRuleAlreadyExistsException < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-ecr//lib/aws-sdk-ecr/types.rb#2664
Aws::ECR::Types::PullThroughCacheRuleAlreadyExistsException::SENSITIVE = T.let(T.unsafe(nil), Array)

# The pull through cache rule was not found. Specify a valid pull
# through cache rule and try again.
#
# @see http://docs.aws.amazon.com/goto/WebAPI/ecr-2015-09-21/PullThroughCacheRuleNotFoundException AWS API Documentation
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/types.rb#2677
class Aws::ECR::Types::PullThroughCacheRuleNotFoundException < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-ecr//lib/aws-sdk-ecr/types.rb#2678
Aws::ECR::Types::PullThroughCacheRuleNotFoundException::SENSITIVE = T.let(T.unsafe(nil), Array)

# @see http://docs.aws.amazon.com/goto/WebAPI/ecr-2015-09-21/PutImageRequest AWS API Documentation
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/types.rb#2720
class Aws::ECR::Types::PutImageRequest < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-ecr//lib/aws-sdk-ecr/types.rb#2721
Aws::ECR::Types::PutImageRequest::SENSITIVE = T.let(T.unsafe(nil), Array)

# @see http://docs.aws.amazon.com/goto/WebAPI/ecr-2015-09-21/PutImageResponse AWS API Documentation
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/types.rb#2732
class Aws::ECR::Types::PutImageResponse < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-ecr//lib/aws-sdk-ecr/types.rb#2733
Aws::ECR::Types::PutImageResponse::SENSITIVE = T.let(T.unsafe(nil), Array)

# @see http://docs.aws.amazon.com/goto/WebAPI/ecr-2015-09-21/PutImageScanningConfigurationRequest AWS API Documentation
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/types.rb#2760
class Aws::ECR::Types::PutImageScanningConfigurationRequest < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-ecr//lib/aws-sdk-ecr/types.rb#2761
Aws::ECR::Types::PutImageScanningConfigurationRequest::SENSITIVE = T.let(T.unsafe(nil), Array)

# @see http://docs.aws.amazon.com/goto/WebAPI/ecr-2015-09-21/PutImageScanningConfigurationResponse AWS API Documentation
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/types.rb#2782
class Aws::ECR::Types::PutImageScanningConfigurationResponse < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-ecr//lib/aws-sdk-ecr/types.rb#2783
Aws::ECR::Types::PutImageScanningConfigurationResponse::SENSITIVE = T.let(T.unsafe(nil), Array)

# @see http://docs.aws.amazon.com/goto/WebAPI/ecr-2015-09-21/PutImageTagMutabilityRequest AWS API Documentation
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/types.rb#2811
class Aws::ECR::Types::PutImageTagMutabilityRequest < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-ecr//lib/aws-sdk-ecr/types.rb#2812
Aws::ECR::Types::PutImageTagMutabilityRequest::SENSITIVE = T.let(T.unsafe(nil), Array)

# @see http://docs.aws.amazon.com/goto/WebAPI/ecr-2015-09-21/PutImageTagMutabilityResponse AWS API Documentation
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/types.rb#2833
class Aws::ECR::Types::PutImageTagMutabilityResponse < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-ecr//lib/aws-sdk-ecr/types.rb#2834
Aws::ECR::Types::PutImageTagMutabilityResponse::SENSITIVE = T.let(T.unsafe(nil), Array)

# @see http://docs.aws.amazon.com/goto/WebAPI/ecr-2015-09-21/PutLifecyclePolicyRequest AWS API Documentation
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/types.rb#2857
class Aws::ECR::Types::PutLifecyclePolicyRequest < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-ecr//lib/aws-sdk-ecr/types.rb#2858
Aws::ECR::Types::PutLifecyclePolicyRequest::SENSITIVE = T.let(T.unsafe(nil), Array)

# @see http://docs.aws.amazon.com/goto/WebAPI/ecr-2015-09-21/PutLifecyclePolicyResponse AWS API Documentation
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/types.rb#2879
class Aws::ECR::Types::PutLifecyclePolicyResponse < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-ecr//lib/aws-sdk-ecr/types.rb#2880
Aws::ECR::Types::PutLifecyclePolicyResponse::SENSITIVE = T.let(T.unsafe(nil), Array)

# @see http://docs.aws.amazon.com/goto/WebAPI/ecr-2015-09-21/PutRegistryPolicyRequest AWS API Documentation
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/types.rb#2898
class Aws::ECR::Types::PutRegistryPolicyRequest < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-ecr//lib/aws-sdk-ecr/types.rb#2899
Aws::ECR::Types::PutRegistryPolicyRequest::SENSITIVE = T.let(T.unsafe(nil), Array)

# @see http://docs.aws.amazon.com/goto/WebAPI/ecr-2015-09-21/PutRegistryPolicyResponse AWS API Documentation
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/types.rb#2915
class Aws::ECR::Types::PutRegistryPolicyResponse < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-ecr//lib/aws-sdk-ecr/types.rb#2916
Aws::ECR::Types::PutRegistryPolicyResponse::SENSITIVE = T.let(T.unsafe(nil), Array)

# @see http://docs.aws.amazon.com/goto/WebAPI/ecr-2015-09-21/PutRegistryScanningConfigurationRequest AWS API Documentation
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/types.rb#2946
class Aws::ECR::Types::PutRegistryScanningConfigurationRequest < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-ecr//lib/aws-sdk-ecr/types.rb#2947
Aws::ECR::Types::PutRegistryScanningConfigurationRequest::SENSITIVE = T.let(T.unsafe(nil), Array)

# @see http://docs.aws.amazon.com/goto/WebAPI/ecr-2015-09-21/PutRegistryScanningConfigurationResponse AWS API Documentation
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/types.rb#2958
class Aws::ECR::Types::PutRegistryScanningConfigurationResponse < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-ecr//lib/aws-sdk-ecr/types.rb#2959
Aws::ECR::Types::PutRegistryScanningConfigurationResponse::SENSITIVE = T.let(T.unsafe(nil), Array)

# @see http://docs.aws.amazon.com/goto/WebAPI/ecr-2015-09-21/PutReplicationConfigurationRequest AWS API Documentation
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/types.rb#2970
class Aws::ECR::Types::PutReplicationConfigurationRequest < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-ecr//lib/aws-sdk-ecr/types.rb#2971
Aws::ECR::Types::PutReplicationConfigurationRequest::SENSITIVE = T.let(T.unsafe(nil), Array)

# @see http://docs.aws.amazon.com/goto/WebAPI/ecr-2015-09-21/PutReplicationConfigurationResponse AWS API Documentation
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/types.rb#2982
class Aws::ECR::Types::PutReplicationConfigurationResponse < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-ecr//lib/aws-sdk-ecr/types.rb#2983
Aws::ECR::Types::PutReplicationConfigurationResponse::SENSITIVE = T.let(T.unsafe(nil), Array)

# Details about the recommended course of action to remediate the
# finding.
#
# @see http://docs.aws.amazon.com/goto/WebAPI/ecr-2015-09-21/Recommendation AWS API Documentation
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/types.rb#3002
class Aws::ECR::Types::Recommendation < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-ecr//lib/aws-sdk-ecr/types.rb#3003
Aws::ECR::Types::Recommendation::SENSITIVE = T.let(T.unsafe(nil), Array)

# The manifest list is referencing an image that does not exist.
#
# @see http://docs.aws.amazon.com/goto/WebAPI/ecr-2015-09-21/ReferencedImagesNotFoundException AWS API Documentation
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/types.rb#3015
class Aws::ECR::Types::ReferencedImagesNotFoundException < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-ecr//lib/aws-sdk-ecr/types.rb#3016
Aws::ECR::Types::ReferencedImagesNotFoundException::SENSITIVE = T.let(T.unsafe(nil), Array)

# The registry doesn't have an associated registry policy.
#
# @see http://docs.aws.amazon.com/goto/WebAPI/ecr-2015-09-21/RegistryPolicyNotFoundException AWS API Documentation
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/types.rb#3028
class Aws::ECR::Types::RegistryPolicyNotFoundException < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-ecr//lib/aws-sdk-ecr/types.rb#3029
Aws::ECR::Types::RegistryPolicyNotFoundException::SENSITIVE = T.let(T.unsafe(nil), Array)

# The scanning configuration for a private registry.
#
# @see http://docs.aws.amazon.com/goto/WebAPI/ecr-2015-09-21/RegistryScanningConfiguration AWS API Documentation
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/types.rb#3047
class Aws::ECR::Types::RegistryScanningConfiguration < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-ecr//lib/aws-sdk-ecr/types.rb#3048
Aws::ECR::Types::RegistryScanningConfiguration::SENSITIVE = T.let(T.unsafe(nil), Array)

# The details of a scanning rule for a private registry.
#
# @see http://docs.aws.amazon.com/goto/WebAPI/ecr-2015-09-21/RegistryScanningRule AWS API Documentation
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/types.rb#3072
class Aws::ECR::Types::RegistryScanningRule < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-ecr//lib/aws-sdk-ecr/types.rb#3073
Aws::ECR::Types::RegistryScanningRule::SENSITIVE = T.let(T.unsafe(nil), Array)

# Information on how to remediate a finding.
#
# @see http://docs.aws.amazon.com/goto/WebAPI/ecr-2015-09-21/Remediation AWS API Documentation
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/types.rb#3087
class Aws::ECR::Types::Remediation < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-ecr//lib/aws-sdk-ecr/types.rb#3088
Aws::ECR::Types::Remediation::SENSITIVE = T.let(T.unsafe(nil), Array)

# The replication configuration for a registry.
#
# @see http://docs.aws.amazon.com/goto/WebAPI/ecr-2015-09-21/ReplicationConfiguration AWS API Documentation
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/types.rb#3102
class Aws::ECR::Types::ReplicationConfiguration < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-ecr//lib/aws-sdk-ecr/types.rb#3103
Aws::ECR::Types::ReplicationConfiguration::SENSITIVE = T.let(T.unsafe(nil), Array)

# An array of objects representing the destination for a replication
# rule.
#
# @see http://docs.aws.amazon.com/goto/WebAPI/ecr-2015-09-21/ReplicationDestination AWS API Documentation
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/types.rb#3124
class Aws::ECR::Types::ReplicationDestination < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-ecr//lib/aws-sdk-ecr/types.rb#3125
Aws::ECR::Types::ReplicationDestination::SENSITIVE = T.let(T.unsafe(nil), Array)

# An array of objects representing the replication destinations and
# repository filters for a replication configuration.
#
# @see http://docs.aws.amazon.com/goto/WebAPI/ecr-2015-09-21/ReplicationRule AWS API Documentation
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/types.rb#3148
class Aws::ECR::Types::ReplicationRule < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-ecr//lib/aws-sdk-ecr/types.rb#3149
Aws::ECR::Types::ReplicationRule::SENSITIVE = T.let(T.unsafe(nil), Array)

# An object representing a repository.
#
# @see http://docs.aws.amazon.com/goto/WebAPI/ecr-2015-09-21/Repository AWS API Documentation
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/types.rb#3205
class Aws::ECR::Types::Repository < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-ecr//lib/aws-sdk-ecr/types.rb#3206
Aws::ECR::Types::Repository::SENSITIVE = T.let(T.unsafe(nil), Array)

# The specified repository already exists in the specified registry.
#
# @see http://docs.aws.amazon.com/goto/WebAPI/ecr-2015-09-21/RepositoryAlreadyExistsException AWS API Documentation
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/types.rb#3219
class Aws::ECR::Types::RepositoryAlreadyExistsException < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-ecr//lib/aws-sdk-ecr/types.rb#3220
Aws::ECR::Types::RepositoryAlreadyExistsException::SENSITIVE = T.let(T.unsafe(nil), Array)

# The filter settings used with image replication. Specifying a
# repository filter to a replication rule provides a method for
# controlling which repositories in a private registry are replicated.
# If no filters are added, the contents of all repositories are
# replicated.
#
# @see http://docs.aws.amazon.com/goto/WebAPI/ecr-2015-09-21/RepositoryFilter AWS API Documentation
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/types.rb#3246
class Aws::ECR::Types::RepositoryFilter < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-ecr//lib/aws-sdk-ecr/types.rb#3247
Aws::ECR::Types::RepositoryFilter::SENSITIVE = T.let(T.unsafe(nil), Array)

# The specified repository contains images. To delete a repository that
# contains images, you must force the deletion with the `force`
# parameter.
#
# @see http://docs.aws.amazon.com/goto/WebAPI/ecr-2015-09-21/RepositoryNotEmptyException AWS API Documentation
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/types.rb#3262
class Aws::ECR::Types::RepositoryNotEmptyException < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-ecr//lib/aws-sdk-ecr/types.rb#3263
Aws::ECR::Types::RepositoryNotEmptyException::SENSITIVE = T.let(T.unsafe(nil), Array)

# The specified repository could not be found. Check the spelling of the
# specified repository and ensure that you are performing operations on
# the correct registry.
#
# @see http://docs.aws.amazon.com/goto/WebAPI/ecr-2015-09-21/RepositoryNotFoundException AWS API Documentation
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/types.rb#3278
class Aws::ECR::Types::RepositoryNotFoundException < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-ecr//lib/aws-sdk-ecr/types.rb#3279
Aws::ECR::Types::RepositoryNotFoundException::SENSITIVE = T.let(T.unsafe(nil), Array)

# The specified repository and registry combination does not have an
# associated repository policy.
#
# @see http://docs.aws.amazon.com/goto/WebAPI/ecr-2015-09-21/RepositoryPolicyNotFoundException AWS API Documentation
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/types.rb#3293
class Aws::ECR::Types::RepositoryPolicyNotFoundException < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-ecr//lib/aws-sdk-ecr/types.rb#3294
Aws::ECR::Types::RepositoryPolicyNotFoundException::SENSITIVE = T.let(T.unsafe(nil), Array)

# The details of the scanning configuration for a repository.
#
# @see http://docs.aws.amazon.com/goto/WebAPI/ecr-2015-09-21/RepositoryScanningConfiguration AWS API Documentation
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/types.rb#3327
class Aws::ECR::Types::RepositoryScanningConfiguration < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-ecr//lib/aws-sdk-ecr/types.rb#3328
Aws::ECR::Types::RepositoryScanningConfiguration::SENSITIVE = T.let(T.unsafe(nil), Array)

# The details about any failures associated with the scanning
# configuration of a repository.
#
# @see http://docs.aws.amazon.com/goto/WebAPI/ecr-2015-09-21/RepositoryScanningConfigurationFailure AWS API Documentation
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/types.rb#3352
class Aws::ECR::Types::RepositoryScanningConfigurationFailure < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-ecr//lib/aws-sdk-ecr/types.rb#3353
Aws::ECR::Types::RepositoryScanningConfigurationFailure::SENSITIVE = T.let(T.unsafe(nil), Array)

# Details about the resource involved in a finding.
#
# @see http://docs.aws.amazon.com/goto/WebAPI/ecr-2015-09-21/Resource AWS API Documentation
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/types.rb#3382
class Aws::ECR::Types::Resource < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-ecr//lib/aws-sdk-ecr/types.rb#3383
Aws::ECR::Types::Resource::SENSITIVE = T.let(T.unsafe(nil), Array)

# Contains details about the resource involved in the finding.
#
# @see http://docs.aws.amazon.com/goto/WebAPI/ecr-2015-09-21/ResourceDetails AWS API Documentation
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/types.rb#3397
class Aws::ECR::Types::ResourceDetails < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-ecr//lib/aws-sdk-ecr/types.rb#3398
Aws::ECR::Types::ResourceDetails::SENSITIVE = T.let(T.unsafe(nil), Array)

# The specified image scan could not be found. Ensure that image
# scanning is enabled on the repository and try again.
#
# @see http://docs.aws.amazon.com/goto/WebAPI/ecr-2015-09-21/ScanNotFoundException AWS API Documentation
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/types.rb#3411
class Aws::ECR::Types::ScanNotFoundException < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-ecr//lib/aws-sdk-ecr/types.rb#3412
Aws::ECR::Types::ScanNotFoundException::SENSITIVE = T.let(T.unsafe(nil), Array)

# The details of a scanning repository filter. For more information on
# how to use filters, see [Using filters][1] in the *Amazon Elastic
# Container Registry User Guide*.
#
#
#
# [1]: https://docs.aws.amazon.com/AmazonECR/latest/userguide/image-scanning.html#image-scanning-filters
#
# @see http://docs.aws.amazon.com/goto/WebAPI/ecr-2015-09-21/ScanningRepositoryFilter AWS API Documentation
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/types.rb#3436
class Aws::ECR::Types::ScanningRepositoryFilter < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-ecr//lib/aws-sdk-ecr/types.rb#3437
Aws::ECR::Types::ScanningRepositoryFilter::SENSITIVE = T.let(T.unsafe(nil), Array)

# Information about the Amazon Inspector score given to a finding.
#
# @see http://docs.aws.amazon.com/goto/WebAPI/ecr-2015-09-21/ScoreDetails AWS API Documentation
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/types.rb#3451
class Aws::ECR::Types::ScoreDetails < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-ecr//lib/aws-sdk-ecr/types.rb#3452
Aws::ECR::Types::ScoreDetails::SENSITIVE = T.let(T.unsafe(nil), Array)

# The ARN of the secret specified in the pull through cache rule was not
# found. Update the pull through cache rule with a valid secret ARN and
# try again.
#
# @see http://docs.aws.amazon.com/goto/WebAPI/ecr-2015-09-21/SecretNotFoundException AWS API Documentation
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/types.rb#3466
class Aws::ECR::Types::SecretNotFoundException < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-ecr//lib/aws-sdk-ecr/types.rb#3467
Aws::ECR::Types::SecretNotFoundException::SENSITIVE = T.let(T.unsafe(nil), Array)

# These errors are usually caused by a server-side issue.
#
# @see http://docs.aws.amazon.com/goto/WebAPI/ecr-2015-09-21/ServerException AWS API Documentation
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/types.rb#3480
class Aws::ECR::Types::ServerException < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-ecr//lib/aws-sdk-ecr/types.rb#3481
Aws::ECR::Types::ServerException::SENSITIVE = T.let(T.unsafe(nil), Array)

# @see http://docs.aws.amazon.com/goto/WebAPI/ecr-2015-09-21/SetRepositoryPolicyRequest AWS API Documentation
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/types.rb#3518
class Aws::ECR::Types::SetRepositoryPolicyRequest < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-ecr//lib/aws-sdk-ecr/types.rb#3519
Aws::ECR::Types::SetRepositoryPolicyRequest::SENSITIVE = T.let(T.unsafe(nil), Array)

# @see http://docs.aws.amazon.com/goto/WebAPI/ecr-2015-09-21/SetRepositoryPolicyResponse AWS API Documentation
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/types.rb#3540
class Aws::ECR::Types::SetRepositoryPolicyResponse < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-ecr//lib/aws-sdk-ecr/types.rb#3541
Aws::ECR::Types::SetRepositoryPolicyResponse::SENSITIVE = T.let(T.unsafe(nil), Array)

# @see http://docs.aws.amazon.com/goto/WebAPI/ecr-2015-09-21/StartImageScanRequest AWS API Documentation
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/types.rb#3565
class Aws::ECR::Types::StartImageScanRequest < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-ecr//lib/aws-sdk-ecr/types.rb#3566
Aws::ECR::Types::StartImageScanRequest::SENSITIVE = T.let(T.unsafe(nil), Array)

# @see http://docs.aws.amazon.com/goto/WebAPI/ecr-2015-09-21/StartImageScanResponse AWS API Documentation
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/types.rb#3593
class Aws::ECR::Types::StartImageScanResponse < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-ecr//lib/aws-sdk-ecr/types.rb#3594
Aws::ECR::Types::StartImageScanResponse::SENSITIVE = T.let(T.unsafe(nil), Array)

# @see http://docs.aws.amazon.com/goto/WebAPI/ecr-2015-09-21/StartLifecyclePolicyPreviewRequest AWS API Documentation
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/types.rb#3618
class Aws::ECR::Types::StartLifecyclePolicyPreviewRequest < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-ecr//lib/aws-sdk-ecr/types.rb#3619
Aws::ECR::Types::StartLifecyclePolicyPreviewRequest::SENSITIVE = T.let(T.unsafe(nil), Array)

# @see http://docs.aws.amazon.com/goto/WebAPI/ecr-2015-09-21/StartLifecyclePolicyPreviewResponse AWS API Documentation
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/types.rb#3645
class Aws::ECR::Types::StartLifecyclePolicyPreviewResponse < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-ecr//lib/aws-sdk-ecr/types.rb#3646
Aws::ECR::Types::StartLifecyclePolicyPreviewResponse::SENSITIVE = T.let(T.unsafe(nil), Array)

# The metadata to apply to a resource to help you categorize and
# organize them. Each tag consists of a key and a value, both of which
# you define. Tag keys can have a maximum character length of 128
# characters, and tag values can have a maximum length of 256
# characters.
#
# @see http://docs.aws.amazon.com/goto/WebAPI/ecr-2015-09-21/Tag AWS API Documentation
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/types.rb#3670
class Aws::ECR::Types::Tag < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-ecr//lib/aws-sdk-ecr/types.rb#3671
Aws::ECR::Types::Tag::SENSITIVE = T.let(T.unsafe(nil), Array)

# @see http://docs.aws.amazon.com/goto/WebAPI/ecr-2015-09-21/TagResourceRequest AWS API Documentation
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/types.rb#3692
class Aws::ECR::Types::TagResourceRequest < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-ecr//lib/aws-sdk-ecr/types.rb#3693
Aws::ECR::Types::TagResourceRequest::SENSITIVE = T.let(T.unsafe(nil), Array)

# @see http://docs.aws.amazon.com/goto/WebAPI/ecr-2015-09-21/TagResourceResponse AWS API Documentation
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/types.rb#3699
class Aws::ECR::Types::TagResourceResponse < ::Aws::EmptyStructure; end

# The list of tags on the repository is over the limit. The maximum
# number of tags that can be applied to a repository is 50.
#
# @see http://docs.aws.amazon.com/goto/WebAPI/ecr-2015-09-21/TooManyTagsException AWS API Documentation
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/types.rb#3710
class Aws::ECR::Types::TooManyTagsException < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-ecr//lib/aws-sdk-ecr/types.rb#3711
Aws::ECR::Types::TooManyTagsException::SENSITIVE = T.let(T.unsafe(nil), Array)

# The secret is unable to be accessed. Verify the resource permissions
# for the secret and try again.
#
# @see http://docs.aws.amazon.com/goto/WebAPI/ecr-2015-09-21/UnableToAccessSecretException AWS API Documentation
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/types.rb#3724
class Aws::ECR::Types::UnableToAccessSecretException < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-ecr//lib/aws-sdk-ecr/types.rb#3725
Aws::ECR::Types::UnableToAccessSecretException::SENSITIVE = T.let(T.unsafe(nil), Array)

# The secret is accessible but is unable to be decrypted. Verify the
# resource permisisons and try again.
#
# @see http://docs.aws.amazon.com/goto/WebAPI/ecr-2015-09-21/UnableToDecryptSecretValueException AWS API Documentation
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/types.rb#3738
class Aws::ECR::Types::UnableToDecryptSecretValueException < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-ecr//lib/aws-sdk-ecr/types.rb#3739
Aws::ECR::Types::UnableToDecryptSecretValueException::SENSITIVE = T.let(T.unsafe(nil), Array)

# The image or images were unable to be pulled using the pull through
# cache rule. This is usually caused because of an issue with the
# Secrets Manager secret containing the credentials for the upstream
# registry.
#
# @see http://docs.aws.amazon.com/goto/WebAPI/ecr-2015-09-21/UnableToGetUpstreamImageException AWS API Documentation
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/types.rb#3754
class Aws::ECR::Types::UnableToGetUpstreamImageException < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-ecr//lib/aws-sdk-ecr/types.rb#3755
Aws::ECR::Types::UnableToGetUpstreamImageException::SENSITIVE = T.let(T.unsafe(nil), Array)

# There was an issue getting the upstream layer matching the pull
# through cache rule.
#
# @see http://docs.aws.amazon.com/goto/WebAPI/ecr-2015-09-21/UnableToGetUpstreamLayerException AWS API Documentation
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/types.rb#3768
class Aws::ECR::Types::UnableToGetUpstreamLayerException < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-ecr//lib/aws-sdk-ecr/types.rb#3769
Aws::ECR::Types::UnableToGetUpstreamLayerException::SENSITIVE = T.let(T.unsafe(nil), Array)

# The image is of a type that cannot be scanned.
#
# @see http://docs.aws.amazon.com/goto/WebAPI/ecr-2015-09-21/UnsupportedImageTypeException AWS API Documentation
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/types.rb#3781
class Aws::ECR::Types::UnsupportedImageTypeException < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-ecr//lib/aws-sdk-ecr/types.rb#3782
Aws::ECR::Types::UnsupportedImageTypeException::SENSITIVE = T.let(T.unsafe(nil), Array)

# The specified upstream registry isn't supported.
#
# @see http://docs.aws.amazon.com/goto/WebAPI/ecr-2015-09-21/UnsupportedUpstreamRegistryException AWS API Documentation
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/types.rb#3794
class Aws::ECR::Types::UnsupportedUpstreamRegistryException < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-ecr//lib/aws-sdk-ecr/types.rb#3795
Aws::ECR::Types::UnsupportedUpstreamRegistryException::SENSITIVE = T.let(T.unsafe(nil), Array)

# @see http://docs.aws.amazon.com/goto/WebAPI/ecr-2015-09-21/UntagResourceRequest AWS API Documentation
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/types.rb#3813
class Aws::ECR::Types::UntagResourceRequest < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-ecr//lib/aws-sdk-ecr/types.rb#3814
Aws::ECR::Types::UntagResourceRequest::SENSITIVE = T.let(T.unsafe(nil), Array)

# @see http://docs.aws.amazon.com/goto/WebAPI/ecr-2015-09-21/UntagResourceResponse AWS API Documentation
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/types.rb#3820
class Aws::ECR::Types::UntagResourceResponse < ::Aws::EmptyStructure; end

# @see http://docs.aws.amazon.com/goto/WebAPI/ecr-2015-09-21/UpdatePullThroughCacheRuleRequest AWS API Documentation
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/types.rb#3844
class Aws::ECR::Types::UpdatePullThroughCacheRuleRequest < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-ecr//lib/aws-sdk-ecr/types.rb#3845
Aws::ECR::Types::UpdatePullThroughCacheRuleRequest::SENSITIVE = T.let(T.unsafe(nil), Array)

# @see http://docs.aws.amazon.com/goto/WebAPI/ecr-2015-09-21/UpdatePullThroughCacheRuleResponse AWS API Documentation
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/types.rb#3874
class Aws::ECR::Types::UpdatePullThroughCacheRuleResponse < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-ecr//lib/aws-sdk-ecr/types.rb#3875
Aws::ECR::Types::UpdatePullThroughCacheRuleResponse::SENSITIVE = T.let(T.unsafe(nil), Array)

# @see http://docs.aws.amazon.com/goto/WebAPI/ecr-2015-09-21/UploadLayerPartRequest AWS API Documentation
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/types.rb#3916
class Aws::ECR::Types::UploadLayerPartRequest < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-ecr//lib/aws-sdk-ecr/types.rb#3917
Aws::ECR::Types::UploadLayerPartRequest::SENSITIVE = T.let(T.unsafe(nil), Array)

# @see http://docs.aws.amazon.com/goto/WebAPI/ecr-2015-09-21/UploadLayerPartResponse AWS API Documentation
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/types.rb#3943
class Aws::ECR::Types::UploadLayerPartResponse < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-ecr//lib/aws-sdk-ecr/types.rb#3944
Aws::ECR::Types::UploadLayerPartResponse::SENSITIVE = T.let(T.unsafe(nil), Array)

# The upload could not be found, or the specified upload ID is not valid
# for this repository.
#
# @see http://docs.aws.amazon.com/goto/WebAPI/ecr-2015-09-21/UploadNotFoundException AWS API Documentation
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/types.rb#3958
class Aws::ECR::Types::UploadNotFoundException < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-ecr//lib/aws-sdk-ecr/types.rb#3959
Aws::ECR::Types::UploadNotFoundException::SENSITIVE = T.let(T.unsafe(nil), Array)

# @see http://docs.aws.amazon.com/goto/WebAPI/ecr-2015-09-21/ValidatePullThroughCacheRuleRequest AWS API Documentation
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/types.rb#3977
class Aws::ECR::Types::ValidatePullThroughCacheRuleRequest < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-ecr//lib/aws-sdk-ecr/types.rb#3978
Aws::ECR::Types::ValidatePullThroughCacheRuleRequest::SENSITIVE = T.let(T.unsafe(nil), Array)

# @see http://docs.aws.amazon.com/goto/WebAPI/ecr-2015-09-21/ValidatePullThroughCacheRuleResponse AWS API Documentation
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/types.rb#4026
class Aws::ECR::Types::ValidatePullThroughCacheRuleResponse < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-ecr//lib/aws-sdk-ecr/types.rb#4027
Aws::ECR::Types::ValidatePullThroughCacheRuleResponse::SENSITIVE = T.let(T.unsafe(nil), Array)

# There was an exception validating this request.
#
# @see http://docs.aws.amazon.com/goto/WebAPI/ecr-2015-09-21/ValidationException AWS API Documentation
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/types.rb#4039
class Aws::ECR::Types::ValidationException < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-ecr//lib/aws-sdk-ecr/types.rb#4040
Aws::ECR::Types::ValidationException::SENSITIVE = T.let(T.unsafe(nil), Array)

# Information on the vulnerable package identified by a finding.
#
# @see http://docs.aws.amazon.com/goto/WebAPI/ecr-2015-09-21/VulnerablePackage AWS API Documentation
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/types.rb#4088
class Aws::ECR::Types::VulnerablePackage < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-ecr//lib/aws-sdk-ecr/types.rb#4089
Aws::ECR::Types::VulnerablePackage::SENSITIVE = T.let(T.unsafe(nil), Array)

# Waiters are utility methods that poll for a particular state to occur
# on a client. Waiters can fail after a number of attempts at a polling
# interval defined for the service client.
#
# For a list of operations that can be waited for and the
# client methods called for each operation, see the table below or the
# {Client#wait_until} field documentation for the {Client}.
#
# # Invoking a Waiter
# To invoke a waiter, call #wait_until on a {Client}. The first parameter
# is the waiter name, which is specific to the service client and indicates
# which operation is being waited for. The second parameter is a hash of
# parameters that are passed to the client method called by the waiter,
# which varies according to the waiter name.
#
# # Wait Failures
# To catch errors in a waiter, use WaiterFailed,
# as shown in the following example.
#
#     rescue rescue Aws::Waiters::Errors::WaiterFailed => error
#       puts "failed waiting for instance running: #{error.message}
#     end
#
# # Configuring a Waiter
# Each waiter has a default polling interval and a maximum number of
# attempts it will make before returning control to your program.
# To set these values, use the `max_attempts` and `delay` parameters
# in your `#wait_until` call.
# The following example waits for up to 25 seconds, polling every five seconds.
#
#     client.wait_until(...) do |w|
#       w.max_attempts = 5
#       w.delay = 5
#     end
#
# To disable wait failures, set the value of either of these parameters
# to `nil`.
#
# # Extending a Waiter
# To modify the behavior of waiters, you can register callbacks that are
# triggered before each polling attempt and before waiting.
#
# The following example implements an exponential backoff in a waiter
# by doubling the amount of time to wait on every attempt.
#
#     client.wait_until(...) do |w|
#       w.interval = 0 # disable normal sleep
#       w.before_wait do |n, resp|
#         sleep(n ** 2)
#       end
#     end
#
# # Available Waiters
#
# The following table lists the valid waiter names, the operations they call,
# and the default `:delay` and `:max_attempts` values.
#
# | waiter_name                       | params                                | :delay   | :max_attempts |
# | --------------------------------- | ------------------------------------- | -------- | ------------- |
# | image_scan_complete               | {Client#describe_image_scan_findings} | 5        | 60            |
# | lifecycle_policy_preview_complete | {Client#get_lifecycle_policy_preview} | 5        | 20            |
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/waiters.rb#75
module Aws::ECR::Waiters; end

# Wait until an image scan is complete and findings can be accessed
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/waiters.rb#78
class Aws::ECR::Waiters::ImageScanComplete
  # @option options
  # @option options
  # @option options
  # @option options
  # @option options
  # @param options [Hash]
  # @return [ImageScanComplete] a new instance of ImageScanComplete
  #
  # source://aws-sdk-ecr//lib/aws-sdk-ecr/waiters.rb#86
  def initialize(options); end

  # @option params
  # @option params
  # @option params
  # @option params
  # @option params
  # @param params [Hash] a customizable set of options
  # @return [Types::DescribeImageScanFindingsResponse] Returns a {Seahorse::Client::Response response} object which responds to the following methods:
  #
  #   * {Types::DescribeImageScanFindingsResponse#registry_id #registry_id} => String
  #   * {Types::DescribeImageScanFindingsResponse#repository_name #repository_name} => String
  #   * {Types::DescribeImageScanFindingsResponse#image_id #image_id} => Types::ImageIdentifier
  #   * {Types::DescribeImageScanFindingsResponse#image_scan_status #image_scan_status} => Types::ImageScanStatus
  #   * {Types::DescribeImageScanFindingsResponse#image_scan_findings #image_scan_findings} => Types::ImageScanFindings
  #   * {Types::DescribeImageScanFindingsResponse#next_token #next_token} => String
  #
  # source://aws-sdk-ecr//lib/aws-sdk-ecr/waiters.rb#113
  def wait(params = T.unsafe(nil)); end

  # @api private
  #
  # source://aws-sdk-ecr//lib/aws-sdk-ecr/waiters.rb#118
  def waiter; end
end

# Wait until a lifecycle policy preview request is complete and results can be accessed
#
# source://aws-sdk-ecr//lib/aws-sdk-ecr/waiters.rb#123
class Aws::ECR::Waiters::LifecyclePolicyPreviewComplete
  # @option options
  # @option options
  # @option options
  # @option options
  # @option options
  # @param options [Hash]
  # @return [LifecyclePolicyPreviewComplete] a new instance of LifecyclePolicyPreviewComplete
  #
  # source://aws-sdk-ecr//lib/aws-sdk-ecr/waiters.rb#131
  def initialize(options); end

  # @option params
  # @option params
  # @option params
  # @option params
  # @option params
  # @option params
  # @param params [Hash] a customizable set of options
  # @return [Types::GetLifecyclePolicyPreviewResponse] Returns a {Seahorse::Client::Response response} object which responds to the following methods:
  #
  #   * {Types::GetLifecyclePolicyPreviewResponse#registry_id #registry_id} => String
  #   * {Types::GetLifecyclePolicyPreviewResponse#repository_name #repository_name} => String
  #   * {Types::GetLifecyclePolicyPreviewResponse#lifecycle_policy_text #lifecycle_policy_text} => String
  #   * {Types::GetLifecyclePolicyPreviewResponse#status #status} => String
  #   * {Types::GetLifecyclePolicyPreviewResponse#next_token #next_token} => String
  #   * {Types::GetLifecyclePolicyPreviewResponse#preview_results #preview_results} => Array&lt;Types::LifecyclePolicyPreviewResult&gt;
  #   * {Types::GetLifecyclePolicyPreviewResponse#summary #summary} => Types::LifecyclePolicyPreviewSummary
  #
  # source://aws-sdk-ecr//lib/aws-sdk-ecr/waiters.rb#158
  def wait(params = T.unsafe(nil)); end

  # @api private
  #
  # source://aws-sdk-ecr//lib/aws-sdk-ecr/waiters.rb#163
  def waiter; end
end
