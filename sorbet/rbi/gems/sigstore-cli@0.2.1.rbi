# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for types exported from the `sigstore-cli` gem.
# Please instead update this file by running `bin/tapioca gem sigstore-cli`.


# source://sigstore-cli//lib/sigstore/cli.rb#6
module Sigstore; end

# source://sigstore-cli//lib/sigstore/cli.rb#7
class Sigstore::CLI < ::Thor
  # @return [CLI] a new instance of CLI
  #
  # source://sigstore-cli//lib/sigstore/cli.rb#36
  def initialize(*_arg0); end

  # source://sigstore-cli//lib/sigstore/cli.rb#109
  def display(*files); end

  # source://sigstore-cli//lib/sigstore/cli.rb#87
  def sign(file); end

  # source://sigstore-cli//lib/sigstore/cli.rb#180
  def tuf(*args); end

  # source://sigstore-cli//lib/sigstore/cli.rb#56
  def verify(*files); end

  private

  # source://sigstore-cli//lib/sigstore/cli.rb#194
  def collect_verification_state(files); end

  # source://sigstore-cli//lib/sigstore/cli.rb#184
  def trusted_root; end

  class << self
    # @return [Boolean]
    #
    # source://sigstore-cli//lib/sigstore/cli.rb#8
    def exit_on_failure?; end

    # source://sigstore-cli//lib/sigstore/cli.rb#12
    def start(given_args = T.unsafe(nil), config = T.unsafe(nil)); end
  end
end

# source://sigstore-cli//lib/sigstore/cli/id_token.rb#4
class Sigstore::CLI::IdToken
  include ::Sigstore::Loggable
  extend ::Sigstore::Loggable::ClassMethods

  # @return [IdToken] a new instance of IdToken
  #
  # source://sigstore-cli//lib/sigstore/cli/id_token.rb#31
  def initialize(audience); end

  # @raise [NotImplementedError]
  #
  # source://sigstore-cli//lib/sigstore/cli/id_token.rb#35
  def call; end

  class << self
    # source://sigstore-cli//lib/sigstore/cli/id_token.rb#27
    def call(audience); end

    # source://sigstore-cli//lib/sigstore/cli/id_token.rb#10
    def detect_credential; end
  end
end

# source://sigstore-cli//lib/sigstore/cli/id_token.rb#7
class Sigstore::CLI::IdToken::AmbientCredentialError < ::Sigstore::Error; end

# source://sigstore-cli//lib/sigstore/cli/id_token.rb#39
class Sigstore::CLI::IdToken::GitHub < ::Sigstore::CLI::IdToken
  # source://sigstore-cli//lib/sigstore/cli/id_token.rb#43
  def call; end
end

# source://sigstore-cli//lib/sigstore/cli/id_token.rb#40
class Sigstore::CLI::IdToken::GitHub::PermissionCredentialError < ::Sigstore::Error; end

# source://sigstore-cli//lib/sigstore/cli.rb#22
class Sigstore::CLI::ShellWrapper
  # @return [ShellWrapper] a new instance of ShellWrapper
  #
  # source://sigstore-cli//lib/sigstore/cli.rb#23
  def initialize(shell); end

  # source://sigstore-cli//lib/sigstore/cli.rb#27
  def close; end

  # source://sigstore-cli//lib/sigstore/cli.rb#31
  def write(*_arg0, **_arg1, &_arg2); end
end

# source://sigstore-cli//lib/sigstore/cli.rb#130
class Sigstore::CLI::TUF < ::Thor
  # source://sigstore-cli//lib/sigstore/cli.rb#141
  def download_target(*targets); end

  # source://sigstore-cli//lib/sigstore/cli.rb#180
  def help(command = T.unsafe(nil), subcommand = T.unsafe(nil)); end

  # source://sigstore-cli//lib/sigstore/cli.rb#164
  def init(root); end

  # source://sigstore-cli//lib/sigstore/cli.rb#172
  def refresh; end

  class << self
    # @return [Boolean]
    #
    # source://sigstore-cli//lib/sigstore/cli.rb#131
    def exit_on_failure?; end
  end
end
