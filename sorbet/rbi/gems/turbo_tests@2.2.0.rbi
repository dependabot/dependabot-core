# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for types exported from the `turbo_tests` gem.
# Please instead update this file by running `bin/tapioca gem turbo_tests`.

# source://turbo_tests//lib/utils/hash_extension.rb#1
module CoreExtensions; end

class RSpec::Core::Runner
  extend ::RSpecExt
end

# source://turbo_tests//lib/turbo_tests/json_rows_formatter.rb#8
module RSpecExt
  # source://turbo_tests//lib/turbo_tests/json_rows_formatter.rb#9
  def handle_interrupt; end
end

# source://turbo_tests//lib/turbo_tests/reporter.rb#3
module TurboTests; end

# source://turbo_tests//lib/turbo_tests/cli.rb#6
class TurboTests::CLI
  # @return [CLI] a new instance of CLI
  #
  # source://turbo_tests//lib/turbo_tests/cli.rb#7
  def initialize(argv); end

  # source://turbo_tests//lib/turbo_tests/cli.rb#11
  def run; end
end

# source://turbo_tests//lib/turbo_tests.rb#53
class TurboTests::FakeExample < ::Struct
  # Returns the value of attribute description
  #
  # @return [Object] the current value of description
  def description; end

  # Sets the attribute description
  #
  # @param value [Object] the value to set the attribute description to.
  # @return [Object] the newly set value
  def description=(_); end

  # Returns the value of attribute execution_result
  #
  # @return [Object] the current value of execution_result
  def execution_result; end

  # Sets the attribute execution_result
  #
  # @param value [Object] the value to set the attribute execution_result to.
  # @return [Object] the newly set value
  def execution_result=(_); end

  # Returns the value of attribute full_description
  #
  # @return [Object] the current value of full_description
  def full_description; end

  # Sets the attribute full_description
  #
  # @param value [Object] the value to set the attribute full_description to.
  # @return [Object] the newly set value
  def full_description=(_); end

  # Returns the value of attribute location
  #
  # @return [Object] the current value of location
  def location; end

  # Sets the attribute location
  #
  # @param value [Object] the value to set the attribute location to.
  # @return [Object] the newly set value
  def location=(_); end

  # Returns the value of attribute location_rerun_argument
  #
  # @return [Object] the current value of location_rerun_argument
  def location_rerun_argument; end

  # Sets the attribute location_rerun_argument
  #
  # @param value [Object] the value to set the attribute location_rerun_argument to.
  # @return [Object] the newly set value
  def location_rerun_argument=(_); end

  # Returns the value of attribute metadata
  #
  # @return [Object] the current value of metadata
  def metadata; end

  # Sets the attribute metadata
  #
  # @param value [Object] the value to set the attribute metadata to.
  # @return [Object] the newly set value
  def metadata=(_); end

  # source://turbo_tests//lib/turbo_tests.rb#77
  def notification; end

  class << self
    def [](*_arg0); end

    # source://turbo_tests//lib/turbo_tests.rb#55
    def from_obj(obj); end

    def inspect; end
    def keyword_init?; end
    def members; end
    def new(*_arg0); end
  end
end

# source://turbo_tests//lib/turbo_tests.rb#19
class TurboTests::FakeException < ::Struct
  # Returns the value of attribute backtrace
  #
  # @return [Object] the current value of backtrace
  def backtrace; end

  # Sets the attribute backtrace
  #
  # @param value [Object] the value to set the attribute backtrace to.
  # @return [Object] the newly set value
  def backtrace=(_); end

  # Returns the value of attribute cause
  #
  # @return [Object] the current value of cause
  def cause; end

  # Sets the attribute cause
  #
  # @param value [Object] the value to set the attribute cause to.
  # @return [Object] the newly set value
  def cause=(_); end

  # Returns the value of attribute message
  #
  # @return [Object] the current value of message
  def message; end

  # Sets the attribute message
  #
  # @param value [Object] the value to set the attribute message to.
  # @return [Object] the newly set value
  def message=(_); end

  class << self
    def [](*_arg0); end

    # source://turbo_tests//lib/turbo_tests.rb#21
    def from_obj(obj); end

    def inspect; end
    def keyword_init?; end
    def members; end
    def new(*_arg0); end
  end
end

# source://turbo_tests//lib/turbo_tests.rb#39
class TurboTests::FakeExecutionResult < ::Struct
  # Returns the value of attribute example_skipped?
  #
  # @return [Object] the current value of example_skipped?
  def example_skipped?; end

  # Returns the value of attribute exception
  #
  # @return [Object] the current value of exception
  def exception; end

  # Sets the attribute exception
  #
  # @param value [Object] the value to set the attribute exception to.
  # @return [Object] the newly set value
  def exception=(_); end

  # Returns the value of attribute pending_exception
  #
  # @return [Object] the current value of pending_exception
  def pending_exception; end

  # Sets the attribute pending_exception
  #
  # @param value [Object] the value to set the attribute pending_exception to.
  # @return [Object] the newly set value
  def pending_exception=(_); end

  # Returns the value of attribute pending_fixed?
  #
  # @return [Object] the current value of pending_fixed?
  def pending_fixed?; end

  # Returns the value of attribute pending_message
  #
  # @return [Object] the current value of pending_message
  def pending_message; end

  # Sets the attribute pending_message
  #
  # @param value [Object] the value to set the attribute pending_message to.
  # @return [Object] the newly set value
  def pending_message=(_); end

  # Returns the value of attribute status
  #
  # @return [Object] the current value of status
  def status; end

  # Sets the attribute status
  #
  # @param value [Object] the value to set the attribute status to.
  # @return [Object] the newly set value
  def status=(_); end

  class << self
    def [](*_arg0); end

    # source://turbo_tests//lib/turbo_tests.rb#41
    def from_obj(obj); end

    def inspect; end
    def keyword_init?; end
    def members; end
    def new(*_arg0); end
  end
end

# An RSpec formatter used for each subprocess during parallel test execution
#
# source://turbo_tests//lib/turbo_tests/json_rows_formatter.rb#22
class TurboTests::JsonRowsFormatter
  # @return [JsonRowsFormatter] a new instance of JsonRowsFormatter
  #
  # source://turbo_tests//lib/turbo_tests/json_rows_formatter.rb#38
  def initialize(output); end

  # source://turbo_tests//lib/turbo_tests/json_rows_formatter.rb#91
  def close(notification); end

  # source://turbo_tests//lib/turbo_tests/json_rows_formatter.rb#77
  def example_failed(notification); end

  # source://turbo_tests//lib/turbo_tests/json_rows_formatter.rb#56
  def example_group_finished(notification); end

  # source://turbo_tests//lib/turbo_tests/json_rows_formatter.rb#49
  def example_group_started(notification); end

  # source://turbo_tests//lib/turbo_tests/json_rows_formatter.rb#63
  def example_passed(notification); end

  # source://turbo_tests//lib/turbo_tests/json_rows_formatter.rb#70
  def example_pending(notification); end

  # source://turbo_tests//lib/turbo_tests/json_rows_formatter.rb#97
  def message(notification); end

  # Returns the value of attribute output.
  #
  # source://turbo_tests//lib/turbo_tests/json_rows_formatter.rb#36
  def output; end

  # source://turbo_tests//lib/turbo_tests/json_rows_formatter.rb#84
  def seed(notification); end

  # source://turbo_tests//lib/turbo_tests/json_rows_formatter.rb#42
  def start(notification); end

  private

  # source://turbo_tests//lib/turbo_tests/json_rows_formatter.rb#134
  def example_to_json(example); end

  # source://turbo_tests//lib/turbo_tests/json_rows_formatter.rb#106
  def exception_to_json(exception); end

  # source://turbo_tests//lib/turbo_tests/json_rows_formatter.rb#117
  def execution_result_to_json(result); end

  # source://turbo_tests//lib/turbo_tests/json_rows_formatter.rb#158
  def group_to_json(notification); end

  # source://turbo_tests//lib/turbo_tests/json_rows_formatter.rb#151
  def load_summary_to_json(notification); end

  # source://turbo_tests//lib/turbo_tests/json_rows_formatter.rb#166
  def output_row(obj); end

  # source://turbo_tests//lib/turbo_tests/json_rows_formatter.rb#127
  def stack_frame_to_json(frame); end
end

# source://turbo_tests//lib/turbo_tests/reporter.rb#4
class TurboTests::Reporter
  # @return [Reporter] a new instance of Reporter
  #
  # source://turbo_tests//lib/turbo_tests/reporter.rb#26
  def initialize(start_time); end

  # source://turbo_tests//lib/turbo_tests/reporter.rb#37
  def add(name, outputs); end

  # source://turbo_tests//lib/turbo_tests/reporter.rb#86
  def error_outside_of_examples; end

  # source://turbo_tests//lib/turbo_tests/reporter.rb#74
  def example_failed(example); end

  # source://turbo_tests//lib/turbo_tests/reporter.rb#61
  def example_passed(example); end

  # source://turbo_tests//lib/turbo_tests/reporter.rb#67
  def example_pending(example); end

  # Returns the value of attribute failed_examples.
  #
  # source://turbo_tests//lib/turbo_tests/reporter.rb#24
  def failed_examples; end

  # source://turbo_tests//lib/turbo_tests/reporter.rb#90
  def finish; end

  # source://turbo_tests//lib/turbo_tests/reporter.rb#57
  def group_finished; end

  # source://turbo_tests//lib/turbo_tests/reporter.rb#53
  def group_started(notification); end

  # Sets the attribute load_time
  #
  # @param value the value to set the attribute load_time to.
  #
  # source://turbo_tests//lib/turbo_tests/reporter.rb#5
  def load_time=(_arg0); end

  # source://turbo_tests//lib/turbo_tests/reporter.rb#81
  def message(message); end

  # Returns the value of attribute pending_examples.
  #
  # source://turbo_tests//lib/turbo_tests/reporter.rb#23
  def pending_examples; end

  # source://turbo_tests//lib/turbo_tests/reporter.rb#117
  def seed_notification(seed, seed_used); end

  protected

  # source://turbo_tests//lib/turbo_tests/reporter.rb#124
  def delegate_to_formatters(method, *args); end

  class << self
    # source://turbo_tests//lib/turbo_tests/reporter.rb#7
    def from_config(formatter_config, start_time); end
  end
end

# source://turbo_tests//lib/turbo_tests/runner.rb#9
class TurboTests::Runner
  # @return [Runner] a new instance of Runner
  #
  # source://turbo_tests//lib/turbo_tests/runner.rb#45
  def initialize(opts); end

  # source://turbo_tests//lib/turbo_tests/runner.rb#64
  def run; end

  private

  # source://turbo_tests//lib/turbo_tests/runner.rb#273
  def fail_fast_met; end

  # source://turbo_tests//lib/turbo_tests/runner.rb#223
  def handle_messages; end

  # source://turbo_tests//lib/turbo_tests/runner.rb#277
  def report_number_of_tests(groups); end

  # source://turbo_tests//lib/turbo_tests/runner.rb#114
  def setup_tmp_dir; end

  # source://turbo_tests//lib/turbo_tests/runner.rb#210
  def start_copy_thread(src, dst); end

  # source://turbo_tests//lib/turbo_tests/runner.rb#123
  def start_regular_subprocess(tests, process_id, **opts); end

  # source://turbo_tests//lib/turbo_tests/runner.rb#133
  def start_subprocess(env, extra_args, tests, process_id, record_runtime:); end

  class << self
    # source://turbo_tests//lib/turbo_tests/runner.rb#12
    def run(opts = T.unsafe(nil)); end
  end
end

# source://turbo_tests//lib/turbo_tests/version.rb#2
TurboTests::VERSION = T.let(T.unsafe(nil), String)
